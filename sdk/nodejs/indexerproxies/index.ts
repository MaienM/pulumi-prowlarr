// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetIndexerProxiesResult } from "./getIndexerProxies";
export const getIndexerProxies: typeof import("./getIndexerProxies").getIndexerProxies = null as any;
utilities.lazyLoad(exports, ["getIndexerProxies"], () => require("./getIndexerProxies"));

export { GetIndexerProxyArgs, GetIndexerProxyResult, GetIndexerProxyOutputArgs } from "./getIndexerProxy";
export const getIndexerProxy: typeof import("./getIndexerProxy").getIndexerProxy = null as any;
export const getIndexerProxyOutput: typeof import("./getIndexerProxy").getIndexerProxyOutput = null as any;
utilities.lazyLoad(exports, ["getIndexerProxy","getIndexerProxyOutput"], () => require("./getIndexerProxy"));

export { IndexerProxyArgs, IndexerProxyState } from "./indexerProxy";
export type IndexerProxy = import("./indexerProxy").IndexerProxy;
export const IndexerProxy: typeof import("./indexerProxy").IndexerProxy = null as any;
utilities.lazyLoad(exports, ["IndexerProxy"], () => require("./indexerProxy"));

export { IndexerProxyFlaresolverrArgs, IndexerProxyFlaresolverrState } from "./indexerProxyFlaresolverr";
export type IndexerProxyFlaresolverr = import("./indexerProxyFlaresolverr").IndexerProxyFlaresolverr;
export const IndexerProxyFlaresolverr: typeof import("./indexerProxyFlaresolverr").IndexerProxyFlaresolverr = null as any;
utilities.lazyLoad(exports, ["IndexerProxyFlaresolverr"], () => require("./indexerProxyFlaresolverr"));

export { IndexerProxyHttpArgs, IndexerProxyHttpState } from "./indexerProxyHttp";
export type IndexerProxyHttp = import("./indexerProxyHttp").IndexerProxyHttp;
export const IndexerProxyHttp: typeof import("./indexerProxyHttp").IndexerProxyHttp = null as any;
utilities.lazyLoad(exports, ["IndexerProxyHttp"], () => require("./indexerProxyHttp"));

export { IndexerProxySocks4Args, IndexerProxySocks4State } from "./indexerProxySocks4";
export type IndexerProxySocks4 = import("./indexerProxySocks4").IndexerProxySocks4;
export const IndexerProxySocks4: typeof import("./indexerProxySocks4").IndexerProxySocks4 = null as any;
utilities.lazyLoad(exports, ["IndexerProxySocks4"], () => require("./indexerProxySocks4"));

export { IndexerProxySocks5Args, IndexerProxySocks5State } from "./indexerProxySocks5";
export type IndexerProxySocks5 = import("./indexerProxySocks5").IndexerProxySocks5;
export const IndexerProxySocks5: typeof import("./indexerProxySocks5").IndexerProxySocks5 = null as any;
utilities.lazyLoad(exports, ["IndexerProxySocks5"], () => require("./indexerProxySocks5"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "prowlarr:IndexerProxies/indexerProxy:IndexerProxy":
                return new IndexerProxy(name, <any>undefined, { urn })
            case "prowlarr:IndexerProxies/indexerProxyFlaresolverr:IndexerProxyFlaresolverr":
                return new IndexerProxyFlaresolverr(name, <any>undefined, { urn })
            case "prowlarr:IndexerProxies/indexerProxyHttp:IndexerProxyHttp":
                return new IndexerProxyHttp(name, <any>undefined, { urn })
            case "prowlarr:IndexerProxies/indexerProxySocks4:IndexerProxySocks4":
                return new IndexerProxySocks4(name, <any>undefined, { urn })
            case "prowlarr:IndexerProxies/indexerProxySocks5:IndexerProxySocks5":
                return new IndexerProxySocks5(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("prowlarr", "IndexerProxies/indexerProxy", _module)
pulumi.runtime.registerResourceModule("prowlarr", "IndexerProxies/indexerProxyFlaresolverr", _module)
pulumi.runtime.registerResourceModule("prowlarr", "IndexerProxies/indexerProxyHttp", _module)
pulumi.runtime.registerResourceModule("prowlarr", "IndexerProxies/indexerProxySocks4", _module)
pulumi.runtime.registerResourceModule("prowlarr", "IndexerProxies/indexerProxySocks5", _module)
