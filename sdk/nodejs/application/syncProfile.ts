// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * <!-- subcategory:Applications -->Sync Profile resource.
 * For more information refer to [Sync Profiles](https://wiki.servarr.com/prowlarr/settings#sync-profiles) documentation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as prowlarr from "@maienm/pulumi-prowlarr";
 *
 * const example = new prowlarr.application.SyncProfile("example", {
 *     enableAutomaticSearch: true,
 *     enableInteractiveSearch: true,
 *     enableRss: true,
 *     minimumSeeders: 1,
 *     name: "Example",
 * });
 * ```
 *
 * ## Import
 *
 * import using the API/UI ID
 *
 * ```sh
 *  $ pulumi import prowlarr:Application/syncProfile:SyncProfile example 1
 * ```
 */
export class SyncProfile extends pulumi.CustomResource {
    /**
     * Get an existing SyncProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SyncProfileState, opts?: pulumi.CustomResourceOptions): SyncProfile {
        return new SyncProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'prowlarr:Application/syncProfile:SyncProfile';

    /**
     * Returns true if the given object is an instance of SyncProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SyncProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SyncProfile.__pulumiType;
    }

    /**
     * Enable automatic search flag.
     */
    public readonly enableAutomaticSearch!: pulumi.Output<boolean>;
    /**
     * Enable interactive search flag.
     */
    public readonly enableInteractiveSearch!: pulumi.Output<boolean>;
    /**
     * Enable RSS flag.
     */
    public readonly enableRss!: pulumi.Output<boolean>;
    /**
     * Minimum seeders.
     */
    public readonly minimumSeeders!: pulumi.Output<number>;
    /**
     * Name.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a SyncProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SyncProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SyncProfileArgs | SyncProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SyncProfileState | undefined;
            resourceInputs["enableAutomaticSearch"] = state ? state.enableAutomaticSearch : undefined;
            resourceInputs["enableInteractiveSearch"] = state ? state.enableInteractiveSearch : undefined;
            resourceInputs["enableRss"] = state ? state.enableRss : undefined;
            resourceInputs["minimumSeeders"] = state ? state.minimumSeeders : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as SyncProfileArgs | undefined;
            if ((!args || args.enableAutomaticSearch === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enableAutomaticSearch'");
            }
            if ((!args || args.enableInteractiveSearch === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enableInteractiveSearch'");
            }
            if ((!args || args.enableRss === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enableRss'");
            }
            if ((!args || args.minimumSeeders === undefined) && !opts.urn) {
                throw new Error("Missing required property 'minimumSeeders'");
            }
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            resourceInputs["enableAutomaticSearch"] = args ? args.enableAutomaticSearch : undefined;
            resourceInputs["enableInteractiveSearch"] = args ? args.enableInteractiveSearch : undefined;
            resourceInputs["enableRss"] = args ? args.enableRss : undefined;
            resourceInputs["minimumSeeders"] = args ? args.minimumSeeders : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SyncProfile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SyncProfile resources.
 */
export interface SyncProfileState {
    /**
     * Enable automatic search flag.
     */
    enableAutomaticSearch?: pulumi.Input<boolean>;
    /**
     * Enable interactive search flag.
     */
    enableInteractiveSearch?: pulumi.Input<boolean>;
    /**
     * Enable RSS flag.
     */
    enableRss?: pulumi.Input<boolean>;
    /**
     * Minimum seeders.
     */
    minimumSeeders?: pulumi.Input<number>;
    /**
     * Name.
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SyncProfile resource.
 */
export interface SyncProfileArgs {
    /**
     * Enable automatic search flag.
     */
    enableAutomaticSearch: pulumi.Input<boolean>;
    /**
     * Enable interactive search flag.
     */
    enableInteractiveSearch: pulumi.Input<boolean>;
    /**
     * Enable RSS flag.
     */
    enableRss: pulumi.Input<boolean>;
    /**
     * Minimum seeders.
     */
    minimumSeeders: pulumi.Input<number>;
    /**
     * Name.
     */
    name: pulumi.Input<string>;
}
