{
    "name": "prowlarr",
    "displayName": "prowlarr",
    "description": "A Pulumi package for creating and managing a Prowlarr application.",
    "keywords": [
        "pulumi",
        "prowlarr",
        "category/infrastructure"
    ],
    "homepage": "https://github.com/MaienM/pulumi-prowlarr",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`prowlarr` Terraform Provider](https://github.com/devopsarr/terraform-provider-prowlarr).",
    "repository": "https://github.com/MaienM/pulumi-prowlarr",
    "logoUrl": "https://raw.githubusercontent.com/MaienM/pulumi-prowlarr/main/docs/prowlarr.png",
    "pluginDownloadURL": "github://api.github.com/MaienM/pulumi-prowlarr",
    "publisher": "MaienM",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "rootNamespace": "MaienM"
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr"
        },
        "java": {
            "basePackage": "com.maienm",
            "buildFiles": "",
            "gradleNexusPublishPluginVersion": ""
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing a Prowlarr application.",
            "packageName": "@maienm/pulumi-prowlarr",
            "pluginName": "",
            "pluginVersion": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/devopsarr/terraform-provider-prowlarr)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-prowlarr` repo](https://github.com/MaienM/pulumi-prowlarr/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-prowlarr` repo](https://github.com/devopsarr/terraform-provider-prowlarr/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "packageName": "pulumi_prowlarr",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/devopsarr/terraform-provider-prowlarr)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-prowlarr` repo](https://github.com/MaienM/pulumi-prowlarr/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-prowlarr` repo](https://github.com/devopsarr/terraform-provider-prowlarr/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "apiKey": {
                "type": "string",
                "description": "API key for Prowlarr authentication. Can be specified via the `PROWLARR_API_KEY` environment variable.\n",
                "secret": true
            },
            "url": {
                "type": "string",
                "description": "Full Prowlarr URL with protocol and port (e.g. `https://test.prowlarr.com:9696`). You should **NOT** supply any path\n(`/api`), the SDK will use the appropriate paths. Can be specified via the `PROWLARR_URL` environment variable.\n"
            }
        }
    },
    "types": {
        "prowlarr:Applications/getApplicationsApplication:getApplicationsApplication": {
            "properties": {
                "animeSyncCategories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Anime sync categories.\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "baseUrl": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "configContract": {
                    "type": "string",
                    "description": "Application configuration template.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Application ID.\n"
                },
                "implementation": {
                    "type": "string",
                    "description": "Application implementation name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Application name.\n"
                },
                "prowlarrUrl": {
                    "type": "string",
                    "description": "Prowlarr URL.\n"
                },
                "syncCategories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Sync categories.\n"
                },
                "syncLevel": {
                    "type": "string",
                    "description": "Sync level.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "type": "object",
            "required": [
                "animeSyncCategories",
                "apiKey",
                "baseUrl",
                "configContract",
                "id",
                "implementation",
                "name",
                "prowlarrUrl",
                "syncCategories",
                "syncLevel",
                "tags"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "prowlarr:Applications/getSyncProfilesSyncProfile:getSyncProfilesSyncProfile": {
            "properties": {
                "enableAutomaticSearch": {
                    "type": "boolean",
                    "description": "Enable automatic search flag.\n"
                },
                "enableInteractiveSearch": {
                    "type": "boolean",
                    "description": "Enable interactive search flag.\n"
                },
                "enableRss": {
                    "type": "boolean",
                    "description": "Enable RSS flag.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Sync Profile ID.\n"
                },
                "minimumSeeders": {
                    "type": "integer",
                    "description": "Minimum seeders.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name.\n"
                }
            },
            "type": "object",
            "required": [
                "enableAutomaticSearch",
                "enableInteractiveSearch",
                "enableRss",
                "id",
                "minimumSeeders",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "prowlarr:DownloadClients/DownloadClientAria2Category:DownloadClientAria2Category": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of categories.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of client category.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "categories",
                        "name"
                    ]
                }
            }
        },
        "prowlarr:DownloadClients/DownloadClientCategory:DownloadClientCategory": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of categories.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of client category.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "categories",
                        "name"
                    ]
                }
            }
        },
        "prowlarr:DownloadClients/DownloadClientDelugeCategory:DownloadClientDelugeCategory": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of categories.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of client category.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "categories",
                        "name"
                    ]
                }
            }
        },
        "prowlarr:DownloadClients/DownloadClientFloodCategory:DownloadClientFloodCategory": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of categories.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of client category.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "categories",
                        "name"
                    ]
                }
            }
        },
        "prowlarr:DownloadClients/DownloadClientFreeboxCategory:DownloadClientFreeboxCategory": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of categories.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of client category.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "categories",
                        "name"
                    ]
                }
            }
        },
        "prowlarr:DownloadClients/DownloadClientHadoukenCategory:DownloadClientHadoukenCategory": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of categories.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of client category.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "categories",
                        "name"
                    ]
                }
            }
        },
        "prowlarr:DownloadClients/DownloadClientNzbgetCategory:DownloadClientNzbgetCategory": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of categories.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of client category.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "categories",
                        "name"
                    ]
                }
            }
        },
        "prowlarr:DownloadClients/DownloadClientNzbvortexCategory:DownloadClientNzbvortexCategory": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of categories.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of client category.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "categories",
                        "name"
                    ]
                }
            }
        },
        "prowlarr:DownloadClients/DownloadClientPneumaticCategory:DownloadClientPneumaticCategory": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of categories.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of client category.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "categories",
                        "name"
                    ]
                }
            }
        },
        "prowlarr:DownloadClients/DownloadClientQbittorrentCategory:DownloadClientQbittorrentCategory": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of categories.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of client category.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "categories",
                        "name"
                    ]
                }
            }
        },
        "prowlarr:DownloadClients/DownloadClientRtorrentCategory:DownloadClientRtorrentCategory": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of categories.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of client category.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "categories",
                        "name"
                    ]
                }
            }
        },
        "prowlarr:DownloadClients/DownloadClientSabnzbdCategory:DownloadClientSabnzbdCategory": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of categories.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of client category.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "categories",
                        "name"
                    ]
                }
            }
        },
        "prowlarr:DownloadClients/DownloadClientTorrentBlackholeCategory:DownloadClientTorrentBlackholeCategory": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of categories.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of client category.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "categories",
                        "name"
                    ]
                }
            }
        },
        "prowlarr:DownloadClients/DownloadClientTorrentDownloadStationCategory:DownloadClientTorrentDownloadStationCategory": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of categories.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of client category.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "categories",
                        "name"
                    ]
                }
            }
        },
        "prowlarr:DownloadClients/DownloadClientTransmissionCategory:DownloadClientTransmissionCategory": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of categories.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of client category.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "categories",
                        "name"
                    ]
                }
            }
        },
        "prowlarr:DownloadClients/DownloadClientUsenetBlackholeCategory:DownloadClientUsenetBlackholeCategory": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of categories.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of client category.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "categories",
                        "name"
                    ]
                }
            }
        },
        "prowlarr:DownloadClients/DownloadClientUsenetDownloadStationCategory:DownloadClientUsenetDownloadStationCategory": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of categories.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of client category.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "categories",
                        "name"
                    ]
                }
            }
        },
        "prowlarr:DownloadClients/DownloadClientUtorrentCategory:DownloadClientUtorrentCategory": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of categories.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of client category.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "categories",
                        "name"
                    ]
                }
            }
        },
        "prowlarr:DownloadClients/DownloadClientVuzeCategory:DownloadClientVuzeCategory": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of categories.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of client category.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "categories",
                        "name"
                    ]
                }
            }
        },
        "prowlarr:DownloadClients/getDownloadClientCategory:getDownloadClientCategory": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of categories.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of client category.\n"
                }
            },
            "type": "object",
            "required": [
                "categories",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "prowlarr:DownloadClients/getDownloadClientsDownloadClient:getDownloadClientsDownloadClient": {
            "properties": {
                "addPaused": {
                    "type": "boolean",
                    "description": "Add paused flag.\n"
                },
                "addStopped": {
                    "type": "boolean",
                    "description": "Add stopped flag.\n"
                },
                "additionalTags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Additional tags, `0` TitleSlug, `1` Quality, `2` Language, `3` ReleaseGroup, `4` Year, `5` Indexer, `6` Network.\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "apiUrl": {
                    "type": "string",
                    "description": "API URL.\n"
                },
                "appId": {
                    "type": "string",
                    "description": "App ID.\n"
                },
                "appToken": {
                    "type": "string",
                    "description": "App Token.\n",
                    "secret": true
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prowlarr:DownloadClients/getDownloadClientsDownloadClientCategory:getDownloadClientsDownloadClientCategory"
                    },
                    "description": "List of mapped categories.\n"
                },
                "category": {
                    "type": "string",
                    "description": "Category.\n"
                },
                "configContract": {
                    "type": "string",
                    "description": "DownloadClient configuration template.\n"
                },
                "destination": {
                    "type": "string",
                    "description": "Destination.\n"
                },
                "destinationDirectory": {
                    "type": "string",
                    "description": "Movie directory.\n"
                },
                "directory": {
                    "type": "string",
                    "description": "Directory.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "fieldTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Field tags.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Download Client ID.\n"
                },
                "implementation": {
                    "type": "string",
                    "description": "DownloadClient implementation name.\n"
                },
                "initialState": {
                    "type": "integer",
                    "description": "Initial state. `0` Start, `1` ForceStart, `2` Pause.\n"
                },
                "intialState": {
                    "type": "integer",
                    "description": "Initial state, with Stop support. `0` Start, `1` ForceStart, `2` Pause, `3` Stop.\n"
                },
                "itemPriority": {
                    "type": "integer",
                    "description": "Priority. `0` Last, `1` First.\n"
                },
                "magnetFileExtension": {
                    "type": "string",
                    "description": "Magnet file extension.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "nzbFolder": {
                    "type": "string",
                    "description": "NZB folder.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "postImTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Post import tags.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol. Valid values are 'usenet' and 'torrent'.\n"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "Read only flag.\n"
                },
                "rpcPath": {
                    "type": "string",
                    "description": "RPC path.\n"
                },
                "saveMagnetFiles": {
                    "type": "boolean",
                    "description": "Save magnet files flag.\n"
                },
                "secretToken": {
                    "type": "string",
                    "description": "Secret token.\n",
                    "secret": true
                },
                "sequentialOrder": {
                    "type": "boolean",
                    "description": "Sequential order flag.\n"
                },
                "startOnAdd": {
                    "type": "boolean",
                    "description": "Start on add flag.\n"
                },
                "strmFolder": {
                    "type": "string",
                    "description": "STRM folder.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "torrentFolder": {
                    "type": "string",
                    "description": "Torrent folder.\n"
                },
                "tvImportedCategory": {
                    "type": "string",
                    "description": "TV imported category.\n"
                },
                "urlBase": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "type": "object",
            "required": [
                "addPaused",
                "addStopped",
                "additionalTags",
                "apiKey",
                "apiUrl",
                "appId",
                "appToken",
                "categories",
                "category",
                "configContract",
                "destination",
                "destinationDirectory",
                "directory",
                "enable",
                "fieldTags",
                "host",
                "id",
                "implementation",
                "initialState",
                "intialState",
                "itemPriority",
                "magnetFileExtension",
                "name",
                "nzbFolder",
                "password",
                "port",
                "postImTags",
                "priority",
                "protocol",
                "readOnly",
                "rpcPath",
                "saveMagnetFiles",
                "secretToken",
                "sequentialOrder",
                "startOnAdd",
                "strmFolder",
                "tags",
                "torrentFolder",
                "tvImportedCategory",
                "urlBase",
                "useSsl",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "prowlarr:DownloadClients/getDownloadClientsDownloadClientCategory:getDownloadClientsDownloadClientCategory": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "categories",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "prowlarr:IndexerProxies/getIndexerProxiesIndexerProxy:getIndexerProxiesIndexerProxy": {
            "properties": {
                "configContract": {
                    "type": "string",
                    "description": "IndexerProxy configuration template.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Indexer Proxy ID.\n"
                },
                "implementation": {
                    "type": "string",
                    "description": "IndexerProxy implementation name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indexer Proxy name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "requestTimeout": {
                    "type": "integer",
                    "description": "Request timeout.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "type": "object",
            "required": [
                "configContract",
                "host",
                "id",
                "implementation",
                "name",
                "password",
                "port",
                "requestTimeout",
                "tags",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "prowlarr:Indexers/IndexerField:IndexerField": {
            "properties": {
                "boolValue": {
                    "type": "boolean",
                    "description": "Bool value. Only one value must be filled out.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Field name.\n"
                },
                "numberValue": {
                    "type": "number",
                    "description": "Number value. Only one value must be filled out.\n"
                },
                "sensitiveValue": {
                    "type": "string",
                    "description": "Sensitive string value. Only one value must be filled out.\n",
                    "secret": true
                },
                "setValues": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Set value. Only one value must be filled out.\n"
                },
                "textValue": {
                    "type": "string",
                    "description": "Text value. Only one value must be filled out.\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "boolValue",
                        "name",
                        "numberValue",
                        "sensitiveValue",
                        "setValues",
                        "textValue"
                    ]
                }
            }
        },
        "prowlarr:Indexers/getIndexerField:getIndexerField": {
            "properties": {
                "boolValue": {
                    "type": "boolean",
                    "description": "Bool value.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Field name.\n"
                },
                "numberValue": {
                    "type": "number",
                    "description": "Number value.\n"
                },
                "sensitiveValue": {
                    "type": "string",
                    "description": "Sensitive string value.\n",
                    "secret": true
                },
                "setValues": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Set value.\n"
                },
                "textValue": {
                    "type": "string",
                    "description": "Text value.\n"
                }
            },
            "type": "object",
            "required": [
                "boolValue",
                "name",
                "numberValue",
                "sensitiveValue",
                "setValues",
                "textValue"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "prowlarr:Indexers/getIndexerSchemaField:getIndexerSchemaField": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Field description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Field name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Field type.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "prowlarr:Indexers/getIndexersIndexer:getIndexersIndexer": {
            "properties": {
                "appProfileId": {
                    "type": "integer",
                    "description": "Application profile ID.\n"
                },
                "configContract": {
                    "type": "string",
                    "description": "Indexer configuration template.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable RSS flag.\n"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prowlarr:Indexers/getIndexersIndexerField:getIndexersIndexerField"
                    },
                    "description": "Set of configuration fields.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Indexer ID.\n"
                },
                "implementation": {
                    "type": "string",
                    "description": "Indexer implementation name.\n"
                },
                "language": {
                    "type": "string",
                    "description": "Language.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indexer name.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "privacy": {
                    "type": "string",
                    "description": "Privacy.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol. Valid values are 'usenet' and 'torrent'.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "type": "object",
            "required": [
                "appProfileId",
                "configContract",
                "enable",
                "fields",
                "id",
                "implementation",
                "language",
                "name",
                "priority",
                "privacy",
                "protocol",
                "tags"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "prowlarr:Indexers/getIndexersIndexerField:getIndexersIndexerField": {
            "properties": {
                "boolValue": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "numberValue": {
                    "type": "number"
                },
                "sensitiveValue": {
                    "type": "string",
                    "secret": true
                },
                "setValues": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "textValue": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "boolValue",
                "name",
                "numberValue",
                "sensitiveValue",
                "setValues",
                "textValue"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "prowlarr:Notifications/getNotificationsNotification:getNotificationsNotification": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Access token.\n"
                },
                "accessTokenSecret": {
                    "type": "string",
                    "description": "Access token secret.\n"
                },
                "alwaysUpdate": {
                    "type": "boolean",
                    "description": "Always update flag.\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n"
                },
                "appToken": {
                    "type": "string",
                    "description": "App token.\n"
                },
                "arguments": {
                    "type": "string",
                    "description": "Arguments.\n"
                },
                "authPassword": {
                    "type": "string",
                    "description": "Auth password.\n",
                    "secret": true
                },
                "authToken": {
                    "type": "string",
                    "description": "Auth token.\n"
                },
                "authUser": {
                    "type": "string",
                    "description": "Auth user.\n"
                },
                "authUsername": {
                    "type": "string",
                    "description": "Auth username.\n"
                },
                "author": {
                    "type": "string",
                    "description": "Author.\n"
                },
                "avatar": {
                    "type": "string",
                    "description": "Avatar.\n"
                },
                "baseUrl": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "bccs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Bcc.\n"
                },
                "botToken": {
                    "type": "string",
                    "description": "Bot token.\n"
                },
                "ccs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Cc.\n"
                },
                "channel": {
                    "type": "string",
                    "description": "Channel.\n"
                },
                "channelTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Channel tags.\n"
                },
                "chatId": {
                    "type": "string",
                    "description": "Chat ID.\n"
                },
                "cleanLibrary": {
                    "type": "boolean",
                    "description": "Clean library flag.\n"
                },
                "clickUrl": {
                    "type": "string",
                    "description": "Click URL.\n"
                },
                "configContract": {
                    "type": "string",
                    "description": "Notification configuration template.\n"
                },
                "configurationKey": {
                    "type": "string",
                    "description": "Configuration key.\n",
                    "secret": true
                },
                "consumerKey": {
                    "type": "string",
                    "description": "Consumer key.\n"
                },
                "consumerSecret": {
                    "type": "string",
                    "description": "Consumer secret.\n"
                },
                "deviceIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Device IDs.\n"
                },
                "deviceNames": {
                    "type": "string",
                    "description": "Device names.\n"
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Devices.\n"
                },
                "directMessage": {
                    "type": "boolean",
                    "description": "Direct message flag.\n"
                },
                "displayTime": {
                    "type": "integer",
                    "description": "Display time.\n"
                },
                "event": {
                    "type": "string",
                    "description": "Event.\n"
                },
                "expire": {
                    "type": "integer",
                    "description": "Expire.\n"
                },
                "expires": {
                    "type": "string",
                    "description": "Expires.\n"
                },
                "fieldTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Devices.\n"
                },
                "from": {
                    "type": "string",
                    "description": "From.\n"
                },
                "grabFields": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Grab fields. `0` Overview, `1` Rating, `2` Genres, `3` Quality, `4` Group, `5` Size, `6` Links, `7` Release, `8` Poster, `9` Fanart, `10` CustomFormats, `11` CustomFormatScore.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host.\n"
                },
                "icon": {
                    "type": "string",
                    "description": "Icon.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Notification ID.\n"
                },
                "implementation": {
                    "type": "string",
                    "description": "Notification implementation name.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "instanceName": {
                    "type": "string",
                    "description": "Instance name.\n"
                },
                "key": {
                    "type": "string",
                    "description": "Key.\n"
                },
                "mapFrom": {
                    "type": "string",
                    "description": "Map From.\n"
                },
                "mapTo": {
                    "type": "string",
                    "description": "Map To.\n"
                },
                "mention": {
                    "type": "string",
                    "description": "Mention.\n"
                },
                "method": {
                    "type": "integer",
                    "description": "Method. `1` POST, `2` PUT.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Notification name.\n"
                },
                "notificationType": {
                    "type": "integer",
                    "description": "Notification type. `0` Info, `1` Success, `2` Warning, `3` Failure.\n"
                },
                "notify": {
                    "type": "boolean",
                    "description": "Notify flag.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "password": {
                    "type": "string",
                    "description": "password.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "receiverId": {
                    "type": "string",
                    "description": "Receiver ID.\n"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Recipients.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "Refresh token.\n"
                },
                "requireEncryption": {
                    "type": "boolean",
                    "description": "Require encryption flag.\n"
                },
                "retry": {
                    "type": "integer",
                    "description": "Retry.\n"
                },
                "sendSilently": {
                    "type": "boolean",
                    "description": "Add silently flag.\n"
                },
                "senderDomain": {
                    "type": "string",
                    "description": "Sender domain.\n"
                },
                "senderId": {
                    "type": "string",
                    "description": "Sender ID.\n"
                },
                "senderNumber": {
                    "type": "string",
                    "description": "Sender Number.\n",
                    "secret": true
                },
                "server": {
                    "type": "string",
                    "description": "server.\n"
                },
                "serverUrl": {
                    "type": "string",
                    "description": "Server url.\n"
                },
                "signIn": {
                    "type": "string",
                    "description": "Sign in.\n"
                },
                "sound": {
                    "type": "string",
                    "description": "Sound.\n"
                },
                "statelessUrls": {
                    "type": "string",
                    "description": "Comma separated stateless URLs.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "token": {
                    "type": "string",
                    "description": "Token.\n"
                },
                "topicId": {
                    "type": "string",
                    "description": "Topic ID.\n"
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Devices.\n"
                },
                "tos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "To.\n"
                },
                "updateLibrary": {
                    "type": "boolean",
                    "description": "Update library flag.\n"
                },
                "url": {
                    "type": "string",
                    "description": "URL.\n"
                },
                "useEuEndpoint": {
                    "type": "boolean",
                    "description": "Use EU endpoint flag.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "userKey": {
                    "type": "string",
                    "description": "User key.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                },
                "webHookUrl": {
                    "type": "string",
                    "description": "Web hook url.\n"
                }
            },
            "type": "object",
            "required": [
                "accessToken",
                "accessTokenSecret",
                "alwaysUpdate",
                "apiKey",
                "appToken",
                "arguments",
                "authPassword",
                "authToken",
                "authUser",
                "authUsername",
                "author",
                "avatar",
                "baseUrl",
                "bccs",
                "botToken",
                "ccs",
                "channel",
                "channelTags",
                "chatId",
                "cleanLibrary",
                "clickUrl",
                "configContract",
                "configurationKey",
                "consumerKey",
                "consumerSecret",
                "deviceIds",
                "deviceNames",
                "devices",
                "directMessage",
                "displayTime",
                "event",
                "expire",
                "expires",
                "fieldTags",
                "from",
                "grabFields",
                "host",
                "icon",
                "id",
                "implementation",
                "includeHealthWarnings",
                "includeManualGrabs",
                "instanceName",
                "key",
                "mapFrom",
                "mapTo",
                "mention",
                "method",
                "name",
                "notificationType",
                "notify",
                "onApplicationUpdate",
                "onGrab",
                "onHealthIssue",
                "onHealthRestored",
                "password",
                "path",
                "port",
                "priority",
                "receiverId",
                "recipients",
                "refreshToken",
                "requireEncryption",
                "retry",
                "sendSilently",
                "senderDomain",
                "senderId",
                "senderNumber",
                "server",
                "serverUrl",
                "signIn",
                "sound",
                "statelessUrls",
                "tags",
                "tos",
                "token",
                "topicId",
                "topics",
                "updateLibrary",
                "url",
                "useEuEndpoint",
                "useSsl",
                "userKey",
                "username",
                "webHookUrl"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "prowlarr:Tags/getTagsDetailsTag:getTagsDetailsTag": {
            "properties": {
                "applicationIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated applications.\n"
                },
                "id": {
                    "type": "integer",
                    "description": "Tags ID.\n"
                },
                "indexerIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated indexers.\n"
                },
                "indexerProxyIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated indexer proxies.\n"
                },
                "label": {
                    "type": "string",
                    "description": "Tags label.\n"
                },
                "notificationIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated notifications.\n"
                }
            },
            "type": "object",
            "required": [
                "applicationIds",
                "id",
                "indexerIds",
                "indexerProxyIds",
                "label",
                "notificationIds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "prowlarr:Tags/getTagsTag:getTagsTag": {
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Tag ID.\n"
                },
                "label": {
                    "type": "string",
                    "description": "Tag label.\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "label"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the prowlarr package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiKey": {
                "type": "string",
                "description": "API key for Prowlarr authentication. Can be specified via the `PROWLARR_API_KEY` environment variable.\n",
                "secret": true
            },
            "url": {
                "type": "string",
                "description": "Full Prowlarr URL with protocol and port (e.g. `https://test.prowlarr.com:9696`). You should **NOT** supply any path\n(`/api`), the SDK will use the appropriate paths. Can be specified via the `PROWLARR_URL` environment variable.\n"
            }
        },
        "inputProperties": {
            "apiKey": {
                "type": "string",
                "description": "API key for Prowlarr authentication. Can be specified via the `PROWLARR_API_KEY` environment variable.\n",
                "secret": true
            },
            "url": {
                "type": "string",
                "description": "Full Prowlarr URL with protocol and port (e.g. `https://test.prowlarr.com:9696`). You should **NOT** supply any path\n(`/api`), the SDK will use the appropriate paths. Can be specified via the `PROWLARR_URL` environment variable.\n"
            }
        }
    },
    "resources": {
        "prowlarr:Applications/application:Application": {
            "description": "\u003c!-- subcategory:Applications --\u003eGeneric Application resource. When possible use a specific resource instead.\nFor more information refer to [Application](https://wiki.servarr.com/prowlarr/settings#applications).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.applications.Application(\"example\", {\n    apiKey: \"APIKey\",\n    baseUrl: \"http://localhost:8686\",\n    configContract: \"LidarrSettings\",\n    implementation: \"Lidarr\",\n    name: \"Example\",\n    prowlarrUrl: \"http://localhost:9696\",\n    syncCategories: [\n        3000,\n        3010,\n        3030,\n    ],\n    syncLevel: \"disabled\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.applications.Application(\"example\",\n    api_key=\"APIKey\",\n    base_url=\"http://localhost:8686\",\n    config_contract=\"LidarrSettings\",\n    implementation=\"Lidarr\",\n    name=\"Example\",\n    prowlarr_url=\"http://localhost:9696\",\n    sync_categories=[\n        3000,\n        3010,\n        3030,\n    ],\n    sync_level=\"disabled\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Applications.Application(\"example\", new()\n    {\n        ApiKey = \"APIKey\",\n        BaseUrl = \"http://localhost:8686\",\n        ConfigContract = \"LidarrSettings\",\n        Implementation = \"Lidarr\",\n        Name = \"Example\",\n        ProwlarrUrl = \"http://localhost:9696\",\n        SyncCategories = new[]\n        {\n            3000,\n            3010,\n            3030,\n        },\n        SyncLevel = \"disabled\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Applications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Applications.NewApplication(ctx, \"example\", \u0026Applications.ApplicationArgs{\n\t\t\tApiKey:         pulumi.String(\"APIKey\"),\n\t\t\tBaseUrl:        pulumi.String(\"http://localhost:8686\"),\n\t\t\tConfigContract: pulumi.String(\"LidarrSettings\"),\n\t\t\tImplementation: pulumi.String(\"Lidarr\"),\n\t\t\tName:           pulumi.String(\"Example\"),\n\t\t\tProwlarrUrl:    pulumi.String(\"http://localhost:9696\"),\n\t\t\tSyncCategories: pulumi.IntArray{\n\t\t\t\tpulumi.Int(3000),\n\t\t\t\tpulumi.Int(3010),\n\t\t\t\tpulumi.Int(3030),\n\t\t\t},\n\t\t\tSyncLevel: pulumi.String(\"disabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Applications.Application;\nimport com.pulumi.prowlarr.Applications.ApplicationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Application(\"example\", ApplicationArgs.builder()        \n            .apiKey(\"APIKey\")\n            .baseUrl(\"http://localhost:8686\")\n            .configContract(\"LidarrSettings\")\n            .implementation(\"Lidarr\")\n            .name(\"Example\")\n            .prowlarrUrl(\"http://localhost:9696\")\n            .syncCategories(            \n                3000,\n                3010,\n                3030)\n            .syncLevel(\"disabled\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Applications:Application\n    properties:\n      apiKey: APIKey\n      baseUrl: http://localhost:8686\n      configContract: LidarrSettings\n      implementation: Lidarr\n      name: Example\n      prowlarrUrl: http://localhost:9696\n      syncCategories:\n        - 3000\n        - 3010\n        - 3030\n      syncLevel: disabled\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Applications/application:Application example 1\n```\n\n ",
            "properties": {
                "animeSyncCategories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Anime sync categories.\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "baseUrl": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "configContract": {
                    "type": "string",
                    "description": "Application configuration template.\n"
                },
                "implementation": {
                    "type": "string",
                    "description": "Application implementation name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Application name.\n"
                },
                "prowlarrUrl": {
                    "type": "string",
                    "description": "Prowlarr URL.\n"
                },
                "syncCategories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Sync categories.\n"
                },
                "syncLevel": {
                    "type": "string",
                    "description": "Sync level.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "required": [
                "animeSyncCategories",
                "apiKey",
                "baseUrl",
                "configContract",
                "implementation",
                "name",
                "prowlarrUrl",
                "syncCategories",
                "syncLevel",
                "tags"
            ],
            "inputProperties": {
                "animeSyncCategories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Anime sync categories.\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "baseUrl": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "configContract": {
                    "type": "string",
                    "description": "Application configuration template.\n"
                },
                "implementation": {
                    "type": "string",
                    "description": "Application implementation name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Application name.\n"
                },
                "prowlarrUrl": {
                    "type": "string",
                    "description": "Prowlarr URL.\n"
                },
                "syncCategories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Sync categories.\n"
                },
                "syncLevel": {
                    "type": "string",
                    "description": "Sync level.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "requiredInputs": [
                "configContract",
                "implementation",
                "name",
                "syncLevel"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Application resources.\n",
                "properties": {
                    "animeSyncCategories": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Anime sync categories.\n"
                    },
                    "apiKey": {
                        "type": "string",
                        "description": "API key.\n",
                        "secret": true
                    },
                    "baseUrl": {
                        "type": "string",
                        "description": "Base URL.\n"
                    },
                    "configContract": {
                        "type": "string",
                        "description": "Application configuration template.\n"
                    },
                    "implementation": {
                        "type": "string",
                        "description": "Application implementation name.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Application name.\n"
                    },
                    "prowlarrUrl": {
                        "type": "string",
                        "description": "Prowlarr URL.\n"
                    },
                    "syncCategories": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Sync categories.\n"
                    },
                    "syncLevel": {
                        "type": "string",
                        "description": "Sync level.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Applications/applicationLazyLibrarian:ApplicationLazyLibrarian": {
            "description": "\u003c!-- subcategory:Applications --\u003eApplication LazyLibrarian resource.\nFor more information refer to [Application](https://wiki.servarr.com/prowlarr/settings#applications) and [LazyLibrarian](https://wiki.servarr.com/prowlarr/supported#lazylibrarian).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.applications.ApplicationLazyLibrarian(\"example\", {\n    apiKey: \"APIKey\",\n    baseUrl: \"http://localhost:5299\",\n    name: \"Example\",\n    prowlarrUrl: \"http://localhost:9696\",\n    syncCategories: [\n        7000,\n        7010,\n        7030,\n    ],\n    syncLevel: \"addOnly\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.applications.ApplicationLazyLibrarian(\"example\",\n    api_key=\"APIKey\",\n    base_url=\"http://localhost:5299\",\n    name=\"Example\",\n    prowlarr_url=\"http://localhost:9696\",\n    sync_categories=[\n        7000,\n        7010,\n        7030,\n    ],\n    sync_level=\"addOnly\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Applications.ApplicationLazyLibrarian(\"example\", new()\n    {\n        ApiKey = \"APIKey\",\n        BaseUrl = \"http://localhost:5299\",\n        Name = \"Example\",\n        ProwlarrUrl = \"http://localhost:9696\",\n        SyncCategories = new[]\n        {\n            7000,\n            7010,\n            7030,\n        },\n        SyncLevel = \"addOnly\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Applications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Applications.NewApplicationLazyLibrarian(ctx, \"example\", \u0026Applications.ApplicationLazyLibrarianArgs{\n\t\t\tApiKey:      pulumi.String(\"APIKey\"),\n\t\t\tBaseUrl:     pulumi.String(\"http://localhost:5299\"),\n\t\t\tName:        pulumi.String(\"Example\"),\n\t\t\tProwlarrUrl: pulumi.String(\"http://localhost:9696\"),\n\t\t\tSyncCategories: pulumi.IntArray{\n\t\t\t\tpulumi.Int(7000),\n\t\t\t\tpulumi.Int(7010),\n\t\t\t\tpulumi.Int(7030),\n\t\t\t},\n\t\t\tSyncLevel: pulumi.String(\"addOnly\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Applications.ApplicationLazyLibrarian;\nimport com.pulumi.prowlarr.Applications.ApplicationLazyLibrarianArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ApplicationLazyLibrarian(\"example\", ApplicationLazyLibrarianArgs.builder()        \n            .apiKey(\"APIKey\")\n            .baseUrl(\"http://localhost:5299\")\n            .name(\"Example\")\n            .prowlarrUrl(\"http://localhost:9696\")\n            .syncCategories(            \n                7000,\n                7010,\n                7030)\n            .syncLevel(\"addOnly\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Applications:ApplicationLazyLibrarian\n    properties:\n      apiKey: APIKey\n      baseUrl: http://localhost:5299\n      name: Example\n      prowlarrUrl: http://localhost:9696\n      syncCategories:\n        - 7000\n        - 7010\n        - 7030\n      syncLevel: addOnly\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Applications/applicationLazyLibrarian:ApplicationLazyLibrarian example 1\n```\n\n ",
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "baseUrl": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Application name.\n"
                },
                "prowlarrUrl": {
                    "type": "string",
                    "description": "Prowlarr URL.\n"
                },
                "syncCategories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Sync categories.\n"
                },
                "syncLevel": {
                    "type": "string",
                    "description": "Sync level.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "required": [
                "apiKey",
                "baseUrl",
                "name",
                "prowlarrUrl",
                "syncCategories",
                "syncLevel",
                "tags"
            ],
            "inputProperties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "baseUrl": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Application name.\n"
                },
                "prowlarrUrl": {
                    "type": "string",
                    "description": "Prowlarr URL.\n"
                },
                "syncCategories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Sync categories.\n"
                },
                "syncLevel": {
                    "type": "string",
                    "description": "Sync level.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "requiredInputs": [
                "apiKey",
                "baseUrl",
                "name",
                "prowlarrUrl",
                "syncLevel"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApplicationLazyLibrarian resources.\n",
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "description": "API key.\n",
                        "secret": true
                    },
                    "baseUrl": {
                        "type": "string",
                        "description": "Base URL.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Application name.\n"
                    },
                    "prowlarrUrl": {
                        "type": "string",
                        "description": "Prowlarr URL.\n"
                    },
                    "syncCategories": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Sync categories.\n"
                    },
                    "syncLevel": {
                        "type": "string",
                        "description": "Sync level.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Applications/applicationLidarr:ApplicationLidarr": {
            "description": "\u003c!-- subcategory:Applications --\u003eApplication Lidarr resource.\nFor more information refer to [Application](https://wiki.servarr.com/prowlarr/settings#applications) and [Lidarr](https://wiki.servarr.com/prowlarr/supported#lidarr).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.applications.ApplicationLidarr(\"example\", {\n    apiKey: \"APIKey\",\n    baseUrl: \"http://localhost:8686\",\n    name: \"Example\",\n    prowlarrUrl: \"http://localhost:9696\",\n    syncCategories: [\n        3000,\n        3010,\n        3030,\n    ],\n    syncLevel: \"addOnly\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.applications.ApplicationLidarr(\"example\",\n    api_key=\"APIKey\",\n    base_url=\"http://localhost:8686\",\n    name=\"Example\",\n    prowlarr_url=\"http://localhost:9696\",\n    sync_categories=[\n        3000,\n        3010,\n        3030,\n    ],\n    sync_level=\"addOnly\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Applications.ApplicationLidarr(\"example\", new()\n    {\n        ApiKey = \"APIKey\",\n        BaseUrl = \"http://localhost:8686\",\n        Name = \"Example\",\n        ProwlarrUrl = \"http://localhost:9696\",\n        SyncCategories = new[]\n        {\n            3000,\n            3010,\n            3030,\n        },\n        SyncLevel = \"addOnly\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Applications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Applications.NewApplicationLidarr(ctx, \"example\", \u0026Applications.ApplicationLidarrArgs{\n\t\t\tApiKey:      pulumi.String(\"APIKey\"),\n\t\t\tBaseUrl:     pulumi.String(\"http://localhost:8686\"),\n\t\t\tName:        pulumi.String(\"Example\"),\n\t\t\tProwlarrUrl: pulumi.String(\"http://localhost:9696\"),\n\t\t\tSyncCategories: pulumi.IntArray{\n\t\t\t\tpulumi.Int(3000),\n\t\t\t\tpulumi.Int(3010),\n\t\t\t\tpulumi.Int(3030),\n\t\t\t},\n\t\t\tSyncLevel: pulumi.String(\"addOnly\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Applications.ApplicationLidarr;\nimport com.pulumi.prowlarr.Applications.ApplicationLidarrArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ApplicationLidarr(\"example\", ApplicationLidarrArgs.builder()        \n            .apiKey(\"APIKey\")\n            .baseUrl(\"http://localhost:8686\")\n            .name(\"Example\")\n            .prowlarrUrl(\"http://localhost:9696\")\n            .syncCategories(            \n                3000,\n                3010,\n                3030)\n            .syncLevel(\"addOnly\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Applications:ApplicationLidarr\n    properties:\n      apiKey: APIKey\n      baseUrl: http://localhost:8686\n      name: Example\n      prowlarrUrl: http://localhost:9696\n      syncCategories:\n        - 3000\n        - 3010\n        - 3030\n      syncLevel: addOnly\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Applications/applicationLidarr:ApplicationLidarr example 1\n```\n\n ",
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "baseUrl": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Application name.\n"
                },
                "prowlarrUrl": {
                    "type": "string",
                    "description": "Prowlarr URL.\n"
                },
                "syncCategories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Sync categories.\n"
                },
                "syncLevel": {
                    "type": "string",
                    "description": "Sync level.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "required": [
                "apiKey",
                "baseUrl",
                "name",
                "prowlarrUrl",
                "syncCategories",
                "syncLevel",
                "tags"
            ],
            "inputProperties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "baseUrl": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Application name.\n"
                },
                "prowlarrUrl": {
                    "type": "string",
                    "description": "Prowlarr URL.\n"
                },
                "syncCategories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Sync categories.\n"
                },
                "syncLevel": {
                    "type": "string",
                    "description": "Sync level.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "requiredInputs": [
                "apiKey",
                "baseUrl",
                "name",
                "prowlarrUrl",
                "syncLevel"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApplicationLidarr resources.\n",
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "description": "API key.\n",
                        "secret": true
                    },
                    "baseUrl": {
                        "type": "string",
                        "description": "Base URL.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Application name.\n"
                    },
                    "prowlarrUrl": {
                        "type": "string",
                        "description": "Prowlarr URL.\n"
                    },
                    "syncCategories": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Sync categories.\n"
                    },
                    "syncLevel": {
                        "type": "string",
                        "description": "Sync level.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Applications/applicationMylar:ApplicationMylar": {
            "description": "\u003c!-- subcategory:Applications --\u003eApplication Mylar resource.\nFor more information refer to [Application](https://wiki.servarr.com/prowlarr/settings#applications) and [Mylar](https://wiki.servarr.com/prowlarr/supported#mylar).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.applications.ApplicationMylar(\"example\", {\n    apiKey: \"APIKey\",\n    baseUrl: \"http://localhost:8090\",\n    name: \"Example\",\n    prowlarrUrl: \"http://localhost:9696\",\n    syncCategories: [7030],\n    syncLevel: \"addOnly\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.applications.ApplicationMylar(\"example\",\n    api_key=\"APIKey\",\n    base_url=\"http://localhost:8090\",\n    name=\"Example\",\n    prowlarr_url=\"http://localhost:9696\",\n    sync_categories=[7030],\n    sync_level=\"addOnly\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Applications.ApplicationMylar(\"example\", new()\n    {\n        ApiKey = \"APIKey\",\n        BaseUrl = \"http://localhost:8090\",\n        Name = \"Example\",\n        ProwlarrUrl = \"http://localhost:9696\",\n        SyncCategories = new[]\n        {\n            7030,\n        },\n        SyncLevel = \"addOnly\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Applications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Applications.NewApplicationMylar(ctx, \"example\", \u0026Applications.ApplicationMylarArgs{\n\t\t\tApiKey:      pulumi.String(\"APIKey\"),\n\t\t\tBaseUrl:     pulumi.String(\"http://localhost:8090\"),\n\t\t\tName:        pulumi.String(\"Example\"),\n\t\t\tProwlarrUrl: pulumi.String(\"http://localhost:9696\"),\n\t\t\tSyncCategories: pulumi.IntArray{\n\t\t\t\tpulumi.Int(7030),\n\t\t\t},\n\t\t\tSyncLevel: pulumi.String(\"addOnly\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Applications.ApplicationMylar;\nimport com.pulumi.prowlarr.Applications.ApplicationMylarArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ApplicationMylar(\"example\", ApplicationMylarArgs.builder()        \n            .apiKey(\"APIKey\")\n            .baseUrl(\"http://localhost:8090\")\n            .name(\"Example\")\n            .prowlarrUrl(\"http://localhost:9696\")\n            .syncCategories(7030)\n            .syncLevel(\"addOnly\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Applications:ApplicationMylar\n    properties:\n      apiKey: APIKey\n      baseUrl: http://localhost:8090\n      name: Example\n      prowlarrUrl: http://localhost:9696\n      syncCategories:\n        - 7030\n      syncLevel: addOnly\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Applications/applicationMylar:ApplicationMylar example 1\n```\n\n ",
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "baseUrl": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Application name.\n"
                },
                "prowlarrUrl": {
                    "type": "string",
                    "description": "Prowlarr URL.\n"
                },
                "syncCategories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Sync categories.\n"
                },
                "syncLevel": {
                    "type": "string",
                    "description": "Sync level.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "required": [
                "apiKey",
                "baseUrl",
                "name",
                "prowlarrUrl",
                "syncCategories",
                "syncLevel",
                "tags"
            ],
            "inputProperties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "baseUrl": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Application name.\n"
                },
                "prowlarrUrl": {
                    "type": "string",
                    "description": "Prowlarr URL.\n"
                },
                "syncCategories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Sync categories.\n"
                },
                "syncLevel": {
                    "type": "string",
                    "description": "Sync level.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "requiredInputs": [
                "apiKey",
                "baseUrl",
                "name",
                "prowlarrUrl",
                "syncLevel"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApplicationMylar resources.\n",
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "description": "API key.\n",
                        "secret": true
                    },
                    "baseUrl": {
                        "type": "string",
                        "description": "Base URL.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Application name.\n"
                    },
                    "prowlarrUrl": {
                        "type": "string",
                        "description": "Prowlarr URL.\n"
                    },
                    "syncCategories": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Sync categories.\n"
                    },
                    "syncLevel": {
                        "type": "string",
                        "description": "Sync level.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Applications/applicationRadarr:ApplicationRadarr": {
            "description": "\u003c!-- subcategory:Applications --\u003eApplication Radarr resource.\nFor more information refer to [Application](https://wiki.servarr.com/prowlarr/settings#applications) and [Radarr](https://wiki.servarr.com/prowlarr/supported#radarr).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.applications.ApplicationRadarr(\"example\", {\n    apiKey: \"APIKey\",\n    baseUrl: \"http://localhost:7878\",\n    name: \"Example\",\n    prowlarrUrl: \"http://localhost:9696\",\n    syncCategories: [\n        2000,\n        2010,\n        2030,\n    ],\n    syncLevel: \"addOnly\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.applications.ApplicationRadarr(\"example\",\n    api_key=\"APIKey\",\n    base_url=\"http://localhost:7878\",\n    name=\"Example\",\n    prowlarr_url=\"http://localhost:9696\",\n    sync_categories=[\n        2000,\n        2010,\n        2030,\n    ],\n    sync_level=\"addOnly\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Applications.ApplicationRadarr(\"example\", new()\n    {\n        ApiKey = \"APIKey\",\n        BaseUrl = \"http://localhost:7878\",\n        Name = \"Example\",\n        ProwlarrUrl = \"http://localhost:9696\",\n        SyncCategories = new[]\n        {\n            2000,\n            2010,\n            2030,\n        },\n        SyncLevel = \"addOnly\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Applications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Applications.NewApplicationRadarr(ctx, \"example\", \u0026Applications.ApplicationRadarrArgs{\n\t\t\tApiKey:      pulumi.String(\"APIKey\"),\n\t\t\tBaseUrl:     pulumi.String(\"http://localhost:7878\"),\n\t\t\tName:        pulumi.String(\"Example\"),\n\t\t\tProwlarrUrl: pulumi.String(\"http://localhost:9696\"),\n\t\t\tSyncCategories: pulumi.IntArray{\n\t\t\t\tpulumi.Int(2000),\n\t\t\t\tpulumi.Int(2010),\n\t\t\t\tpulumi.Int(2030),\n\t\t\t},\n\t\t\tSyncLevel: pulumi.String(\"addOnly\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Applications.ApplicationRadarr;\nimport com.pulumi.prowlarr.Applications.ApplicationRadarrArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ApplicationRadarr(\"example\", ApplicationRadarrArgs.builder()        \n            .apiKey(\"APIKey\")\n            .baseUrl(\"http://localhost:7878\")\n            .name(\"Example\")\n            .prowlarrUrl(\"http://localhost:9696\")\n            .syncCategories(            \n                2000,\n                2010,\n                2030)\n            .syncLevel(\"addOnly\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Applications:ApplicationRadarr\n    properties:\n      apiKey: APIKey\n      baseUrl: http://localhost:7878\n      name: Example\n      prowlarrUrl: http://localhost:9696\n      syncCategories:\n        - 2000\n        - 2010\n        - 2030\n      syncLevel: addOnly\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Applications/applicationRadarr:ApplicationRadarr example 1\n```\n\n ",
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "baseUrl": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Application name.\n"
                },
                "prowlarrUrl": {
                    "type": "string",
                    "description": "Prowlarr URL.\n"
                },
                "syncCategories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Sync categories.\n"
                },
                "syncLevel": {
                    "type": "string",
                    "description": "Sync level.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "required": [
                "apiKey",
                "baseUrl",
                "name",
                "prowlarrUrl",
                "syncCategories",
                "syncLevel",
                "tags"
            ],
            "inputProperties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "baseUrl": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Application name.\n"
                },
                "prowlarrUrl": {
                    "type": "string",
                    "description": "Prowlarr URL.\n"
                },
                "syncCategories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Sync categories.\n"
                },
                "syncLevel": {
                    "type": "string",
                    "description": "Sync level.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "requiredInputs": [
                "apiKey",
                "baseUrl",
                "name",
                "prowlarrUrl",
                "syncLevel"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApplicationRadarr resources.\n",
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "description": "API key.\n",
                        "secret": true
                    },
                    "baseUrl": {
                        "type": "string",
                        "description": "Base URL.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Application name.\n"
                    },
                    "prowlarrUrl": {
                        "type": "string",
                        "description": "Prowlarr URL.\n"
                    },
                    "syncCategories": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Sync categories.\n"
                    },
                    "syncLevel": {
                        "type": "string",
                        "description": "Sync level.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Applications/applicationReadarr:ApplicationReadarr": {
            "description": "\u003c!-- subcategory:Applications --\u003eApplication Readarr resource.\nFor more information refer to [Application](https://wiki.servarr.com/prowlarr/settings#applications) and [Readarr](https://wiki.servarr.com/prowlarr/supported#readarr).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.applications.ApplicationReadarr(\"example\", {\n    apiKey: \"APIKey\",\n    baseUrl: \"http://localhost:8787\",\n    name: \"Example\",\n    prowlarrUrl: \"http://localhost:9696\",\n    syncCategories: [\n        7000,\n        7010,\n        7030,\n    ],\n    syncLevel: \"addOnly\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.applications.ApplicationReadarr(\"example\",\n    api_key=\"APIKey\",\n    base_url=\"http://localhost:8787\",\n    name=\"Example\",\n    prowlarr_url=\"http://localhost:9696\",\n    sync_categories=[\n        7000,\n        7010,\n        7030,\n    ],\n    sync_level=\"addOnly\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Applications.ApplicationReadarr(\"example\", new()\n    {\n        ApiKey = \"APIKey\",\n        BaseUrl = \"http://localhost:8787\",\n        Name = \"Example\",\n        ProwlarrUrl = \"http://localhost:9696\",\n        SyncCategories = new[]\n        {\n            7000,\n            7010,\n            7030,\n        },\n        SyncLevel = \"addOnly\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Applications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Applications.NewApplicationReadarr(ctx, \"example\", \u0026Applications.ApplicationReadarrArgs{\n\t\t\tApiKey:      pulumi.String(\"APIKey\"),\n\t\t\tBaseUrl:     pulumi.String(\"http://localhost:8787\"),\n\t\t\tName:        pulumi.String(\"Example\"),\n\t\t\tProwlarrUrl: pulumi.String(\"http://localhost:9696\"),\n\t\t\tSyncCategories: pulumi.IntArray{\n\t\t\t\tpulumi.Int(7000),\n\t\t\t\tpulumi.Int(7010),\n\t\t\t\tpulumi.Int(7030),\n\t\t\t},\n\t\t\tSyncLevel: pulumi.String(\"addOnly\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Applications.ApplicationReadarr;\nimport com.pulumi.prowlarr.Applications.ApplicationReadarrArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ApplicationReadarr(\"example\", ApplicationReadarrArgs.builder()        \n            .apiKey(\"APIKey\")\n            .baseUrl(\"http://localhost:8787\")\n            .name(\"Example\")\n            .prowlarrUrl(\"http://localhost:9696\")\n            .syncCategories(            \n                7000,\n                7010,\n                7030)\n            .syncLevel(\"addOnly\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Applications:ApplicationReadarr\n    properties:\n      apiKey: APIKey\n      baseUrl: http://localhost:8787\n      name: Example\n      prowlarrUrl: http://localhost:9696\n      syncCategories:\n        - 7000\n        - 7010\n        - 7030\n      syncLevel: addOnly\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Applications/applicationReadarr:ApplicationReadarr example 1\n```\n\n ",
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "baseUrl": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Application name.\n"
                },
                "prowlarrUrl": {
                    "type": "string",
                    "description": "Prowlarr URL.\n"
                },
                "syncCategories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Sync categories.\n"
                },
                "syncLevel": {
                    "type": "string",
                    "description": "Sync level.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "required": [
                "apiKey",
                "baseUrl",
                "name",
                "prowlarrUrl",
                "syncCategories",
                "syncLevel",
                "tags"
            ],
            "inputProperties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "baseUrl": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Application name.\n"
                },
                "prowlarrUrl": {
                    "type": "string",
                    "description": "Prowlarr URL.\n"
                },
                "syncCategories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Sync categories.\n"
                },
                "syncLevel": {
                    "type": "string",
                    "description": "Sync level.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "requiredInputs": [
                "apiKey",
                "baseUrl",
                "name",
                "prowlarrUrl",
                "syncLevel"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApplicationReadarr resources.\n",
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "description": "API key.\n",
                        "secret": true
                    },
                    "baseUrl": {
                        "type": "string",
                        "description": "Base URL.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Application name.\n"
                    },
                    "prowlarrUrl": {
                        "type": "string",
                        "description": "Prowlarr URL.\n"
                    },
                    "syncCategories": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Sync categories.\n"
                    },
                    "syncLevel": {
                        "type": "string",
                        "description": "Sync level.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Applications/applicationSonarr:ApplicationSonarr": {
            "description": "\u003c!-- subcategory:Applications --\u003eApplication Sonarr resource.\nFor more information refer to [Application](https://wiki.servarr.com/prowlarr/settings#applications) and [Sonarr](https://wiki.servarr.com/prowlarr/supported#sonarr).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.applications.ApplicationSonarr(\"example\", {\n    animeSyncCategories: [5070],\n    apiKey: \"APIKey\",\n    baseUrl: \"http://localhost:8989\",\n    name: \"Example\",\n    prowlarrUrl: \"http://localhost:9696\",\n    syncCategories: [\n        5000,\n        5010,\n        5030,\n    ],\n    syncLevel: \"addOnly\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.applications.ApplicationSonarr(\"example\",\n    anime_sync_categories=[5070],\n    api_key=\"APIKey\",\n    base_url=\"http://localhost:8989\",\n    name=\"Example\",\n    prowlarr_url=\"http://localhost:9696\",\n    sync_categories=[\n        5000,\n        5010,\n        5030,\n    ],\n    sync_level=\"addOnly\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Applications.ApplicationSonarr(\"example\", new()\n    {\n        AnimeSyncCategories = new[]\n        {\n            5070,\n        },\n        ApiKey = \"APIKey\",\n        BaseUrl = \"http://localhost:8989\",\n        Name = \"Example\",\n        ProwlarrUrl = \"http://localhost:9696\",\n        SyncCategories = new[]\n        {\n            5000,\n            5010,\n            5030,\n        },\n        SyncLevel = \"addOnly\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Applications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Applications.NewApplicationSonarr(ctx, \"example\", \u0026Applications.ApplicationSonarrArgs{\n\t\t\tAnimeSyncCategories: pulumi.IntArray{\n\t\t\t\tpulumi.Int(5070),\n\t\t\t},\n\t\t\tApiKey:      pulumi.String(\"APIKey\"),\n\t\t\tBaseUrl:     pulumi.String(\"http://localhost:8989\"),\n\t\t\tName:        pulumi.String(\"Example\"),\n\t\t\tProwlarrUrl: pulumi.String(\"http://localhost:9696\"),\n\t\t\tSyncCategories: pulumi.IntArray{\n\t\t\t\tpulumi.Int(5000),\n\t\t\t\tpulumi.Int(5010),\n\t\t\t\tpulumi.Int(5030),\n\t\t\t},\n\t\t\tSyncLevel: pulumi.String(\"addOnly\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Applications.ApplicationSonarr;\nimport com.pulumi.prowlarr.Applications.ApplicationSonarrArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ApplicationSonarr(\"example\", ApplicationSonarrArgs.builder()        \n            .animeSyncCategories(5070)\n            .apiKey(\"APIKey\")\n            .baseUrl(\"http://localhost:8989\")\n            .name(\"Example\")\n            .prowlarrUrl(\"http://localhost:9696\")\n            .syncCategories(            \n                5000,\n                5010,\n                5030)\n            .syncLevel(\"addOnly\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Applications:ApplicationSonarr\n    properties:\n      animeSyncCategories:\n        - 5070\n      apiKey: APIKey\n      baseUrl: http://localhost:8989\n      name: Example\n      prowlarrUrl: http://localhost:9696\n      syncCategories:\n        - 5000\n        - 5010\n        - 5030\n      syncLevel: addOnly\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Applications/applicationSonarr:ApplicationSonarr example 1\n```\n\n ",
            "properties": {
                "animeSyncCategories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Anime sync categories.\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "baseUrl": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Application name.\n"
                },
                "prowlarrUrl": {
                    "type": "string",
                    "description": "Prowlarr URL.\n"
                },
                "syncCategories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Sync categories.\n"
                },
                "syncLevel": {
                    "type": "string",
                    "description": "Sync level.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "required": [
                "animeSyncCategories",
                "apiKey",
                "baseUrl",
                "name",
                "prowlarrUrl",
                "syncCategories",
                "syncLevel",
                "tags"
            ],
            "inputProperties": {
                "animeSyncCategories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Anime sync categories.\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "baseUrl": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Application name.\n"
                },
                "prowlarrUrl": {
                    "type": "string",
                    "description": "Prowlarr URL.\n"
                },
                "syncCategories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Sync categories.\n"
                },
                "syncLevel": {
                    "type": "string",
                    "description": "Sync level.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "requiredInputs": [
                "apiKey",
                "baseUrl",
                "name",
                "prowlarrUrl",
                "syncLevel"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApplicationSonarr resources.\n",
                "properties": {
                    "animeSyncCategories": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Anime sync categories.\n"
                    },
                    "apiKey": {
                        "type": "string",
                        "description": "API key.\n",
                        "secret": true
                    },
                    "baseUrl": {
                        "type": "string",
                        "description": "Base URL.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Application name.\n"
                    },
                    "prowlarrUrl": {
                        "type": "string",
                        "description": "Prowlarr URL.\n"
                    },
                    "syncCategories": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Sync categories.\n"
                    },
                    "syncLevel": {
                        "type": "string",
                        "description": "Sync level.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Applications/applicationWhisparr:ApplicationWhisparr": {
            "description": "\u003c!-- subcategory:Applications --\u003eApplication Whisparr resource.\nFor more information refer to [Application](https://wiki.servarr.com/prowlarr/settings#applications) and [Whisparr](https://wiki.servarr.com/prowlarr/supported#whisparr).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.applications.ApplicationWhisparr(\"example\", {\n    apiKey: \"APIKey\",\n    baseUrl: \"http://localhost:6969\",\n    name: \"Example\",\n    prowlarrUrl: \"http://localhost:9696\",\n    syncCategories: [\n        6000,\n        6010,\n        6030,\n    ],\n    syncLevel: \"addOnly\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.applications.ApplicationWhisparr(\"example\",\n    api_key=\"APIKey\",\n    base_url=\"http://localhost:6969\",\n    name=\"Example\",\n    prowlarr_url=\"http://localhost:9696\",\n    sync_categories=[\n        6000,\n        6010,\n        6030,\n    ],\n    sync_level=\"addOnly\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Applications.ApplicationWhisparr(\"example\", new()\n    {\n        ApiKey = \"APIKey\",\n        BaseUrl = \"http://localhost:6969\",\n        Name = \"Example\",\n        ProwlarrUrl = \"http://localhost:9696\",\n        SyncCategories = new[]\n        {\n            6000,\n            6010,\n            6030,\n        },\n        SyncLevel = \"addOnly\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Applications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Applications.NewApplicationWhisparr(ctx, \"example\", \u0026Applications.ApplicationWhisparrArgs{\n\t\t\tApiKey:      pulumi.String(\"APIKey\"),\n\t\t\tBaseUrl:     pulumi.String(\"http://localhost:6969\"),\n\t\t\tName:        pulumi.String(\"Example\"),\n\t\t\tProwlarrUrl: pulumi.String(\"http://localhost:9696\"),\n\t\t\tSyncCategories: pulumi.IntArray{\n\t\t\t\tpulumi.Int(6000),\n\t\t\t\tpulumi.Int(6010),\n\t\t\t\tpulumi.Int(6030),\n\t\t\t},\n\t\t\tSyncLevel: pulumi.String(\"addOnly\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Applications.ApplicationWhisparr;\nimport com.pulumi.prowlarr.Applications.ApplicationWhisparrArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new ApplicationWhisparr(\"example\", ApplicationWhisparrArgs.builder()        \n            .apiKey(\"APIKey\")\n            .baseUrl(\"http://localhost:6969\")\n            .name(\"Example\")\n            .prowlarrUrl(\"http://localhost:9696\")\n            .syncCategories(            \n                6000,\n                6010,\n                6030)\n            .syncLevel(\"addOnly\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Applications:ApplicationWhisparr\n    properties:\n      apiKey: APIKey\n      baseUrl: http://localhost:6969\n      name: Example\n      prowlarrUrl: http://localhost:9696\n      syncCategories:\n        - 6000\n        - 6010\n        - 6030\n      syncLevel: addOnly\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Applications/applicationWhisparr:ApplicationWhisparr example 1\n```\n\n ",
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "baseUrl": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Application name.\n"
                },
                "prowlarrUrl": {
                    "type": "string",
                    "description": "Prowlarr URL.\n"
                },
                "syncCategories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Sync categories.\n"
                },
                "syncLevel": {
                    "type": "string",
                    "description": "Sync level.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "required": [
                "apiKey",
                "baseUrl",
                "name",
                "prowlarrUrl",
                "syncCategories",
                "syncLevel",
                "tags"
            ],
            "inputProperties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "baseUrl": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Application name.\n"
                },
                "prowlarrUrl": {
                    "type": "string",
                    "description": "Prowlarr URL.\n"
                },
                "syncCategories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Sync categories.\n"
                },
                "syncLevel": {
                    "type": "string",
                    "description": "Sync level.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "requiredInputs": [
                "apiKey",
                "baseUrl",
                "name",
                "prowlarrUrl",
                "syncLevel"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ApplicationWhisparr resources.\n",
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "description": "API key.\n",
                        "secret": true
                    },
                    "baseUrl": {
                        "type": "string",
                        "description": "Base URL.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Application name.\n"
                    },
                    "prowlarrUrl": {
                        "type": "string",
                        "description": "Prowlarr URL.\n"
                    },
                    "syncCategories": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Sync categories.\n"
                    },
                    "syncLevel": {
                        "type": "string",
                        "description": "Sync level.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Applications/syncProfile:SyncProfile": {
            "description": "\u003c!-- subcategory:Applications --\u003eSync Profile resource.\nFor more information refer to [Sync Profiles](https://wiki.servarr.com/prowlarr/settings#sync-profiles) documentation.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.applications.SyncProfile(\"example\", {\n    enableAutomaticSearch: true,\n    enableInteractiveSearch: true,\n    enableRss: true,\n    minimumSeeders: 1,\n    name: \"Example\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.applications.SyncProfile(\"example\",\n    enable_automatic_search=True,\n    enable_interactive_search=True,\n    enable_rss=True,\n    minimum_seeders=1,\n    name=\"Example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Applications.SyncProfile(\"example\", new()\n    {\n        EnableAutomaticSearch = true,\n        EnableInteractiveSearch = true,\n        EnableRss = true,\n        MinimumSeeders = 1,\n        Name = \"Example\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Applications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Applications.NewSyncProfile(ctx, \"example\", \u0026Applications.SyncProfileArgs{\n\t\t\tEnableAutomaticSearch:   pulumi.Bool(true),\n\t\t\tEnableInteractiveSearch: pulumi.Bool(true),\n\t\t\tEnableRss:               pulumi.Bool(true),\n\t\t\tMinimumSeeders:          pulumi.Int(1),\n\t\t\tName:                    pulumi.String(\"Example\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Applications.SyncProfile;\nimport com.pulumi.prowlarr.Applications.SyncProfileArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new SyncProfile(\"example\", SyncProfileArgs.builder()        \n            .enableAutomaticSearch(true)\n            .enableInteractiveSearch(true)\n            .enableRss(true)\n            .minimumSeeders(1)\n            .name(\"Example\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Applications:SyncProfile\n    properties:\n      enableAutomaticSearch: true\n      enableInteractiveSearch: true\n      enableRss: true\n      minimumSeeders: 1\n      name: Example\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Applications/syncProfile:SyncProfile example 1\n```\n\n ",
            "properties": {
                "enableAutomaticSearch": {
                    "type": "boolean",
                    "description": "Enable automatic search flag.\n"
                },
                "enableInteractiveSearch": {
                    "type": "boolean",
                    "description": "Enable interactive search flag.\n"
                },
                "enableRss": {
                    "type": "boolean",
                    "description": "Enable RSS flag.\n"
                },
                "minimumSeeders": {
                    "type": "integer",
                    "description": "Minimum seeders.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name.\n"
                }
            },
            "required": [
                "enableAutomaticSearch",
                "enableInteractiveSearch",
                "enableRss",
                "minimumSeeders",
                "name"
            ],
            "inputProperties": {
                "enableAutomaticSearch": {
                    "type": "boolean",
                    "description": "Enable automatic search flag.\n"
                },
                "enableInteractiveSearch": {
                    "type": "boolean",
                    "description": "Enable interactive search flag.\n"
                },
                "enableRss": {
                    "type": "boolean",
                    "description": "Enable RSS flag.\n"
                },
                "minimumSeeders": {
                    "type": "integer",
                    "description": "Minimum seeders.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name.\n"
                }
            },
            "requiredInputs": [
                "enableAutomaticSearch",
                "enableInteractiveSearch",
                "enableRss",
                "minimumSeeders",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SyncProfile resources.\n",
                "properties": {
                    "enableAutomaticSearch": {
                        "type": "boolean",
                        "description": "Enable automatic search flag.\n"
                    },
                    "enableInteractiveSearch": {
                        "type": "boolean",
                        "description": "Enable interactive search flag.\n"
                    },
                    "enableRss": {
                        "type": "boolean",
                        "description": "Enable RSS flag.\n"
                    },
                    "minimumSeeders": {
                        "type": "integer",
                        "description": "Minimum seeders.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:DownloadClients/downloadClient:DownloadClient": {
            "description": "\u003c!-- subcategory:Download Clients --\u003eGeneric Download Client resource. When possible use a specific resource instead.\nFor more information refer to [Download Client](https://wiki.servarr.com/prowlarr/settings#download-clients).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.downloadclients.DownloadClient(\"example\", {\n    configContract: \"TransmissionSettings\",\n    enable: true,\n    host: \"transmission\",\n    implementation: \"Transmission\",\n    name: \"Example\",\n    port: 9091,\n    priority: 1,\n    protocol: \"torrent\",\n    urlBase: \"/transmission/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.download_clients.DownloadClient(\"example\",\n    config_contract=\"TransmissionSettings\",\n    enable=True,\n    host=\"transmission\",\n    implementation=\"Transmission\",\n    name=\"Example\",\n    port=9091,\n    priority=1,\n    protocol=\"torrent\",\n    url_base=\"/transmission/\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.DownloadClients.DownloadClient(\"example\", new()\n    {\n        ConfigContract = \"TransmissionSettings\",\n        Enable = true,\n        Host = \"transmission\",\n        Implementation = \"Transmission\",\n        Name = \"Example\",\n        Port = 9091,\n        Priority = 1,\n        Protocol = \"torrent\",\n        UrlBase = \"/transmission/\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/DownloadClients\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := DownloadClients.NewDownloadClient(ctx, \"example\", \u0026DownloadClients.DownloadClientArgs{\n\t\t\tConfigContract: pulumi.String(\"TransmissionSettings\"),\n\t\t\tEnable:         pulumi.Bool(true),\n\t\t\tHost:           pulumi.String(\"transmission\"),\n\t\t\tImplementation: pulumi.String(\"Transmission\"),\n\t\t\tName:           pulumi.String(\"Example\"),\n\t\t\tPort:           pulumi.Int(9091),\n\t\t\tPriority:       pulumi.Int(1),\n\t\t\tProtocol:       pulumi.String(\"torrent\"),\n\t\t\tUrlBase:        pulumi.String(\"/transmission/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClient;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DownloadClient(\"example\", DownloadClientArgs.builder()        \n            .configContract(\"TransmissionSettings\")\n            .enable(true)\n            .host(\"transmission\")\n            .implementation(\"Transmission\")\n            .name(\"Example\")\n            .port(9091)\n            .priority(1)\n            .protocol(\"torrent\")\n            .urlBase(\"/transmission/\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:DownloadClients:DownloadClient\n    properties:\n      configContract: TransmissionSettings\n      enable: true\n      host: transmission\n      implementation: Transmission\n      name: Example\n      port: 9091\n      priority: 1\n      protocol: torrent\n      urlBase: /transmission/\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:DownloadClients/downloadClient:DownloadClient example 1\n```\n\n ",
            "properties": {
                "addPaused": {
                    "type": "boolean",
                    "description": "Add paused flag.\n"
                },
                "addStopped": {
                    "type": "boolean",
                    "description": "Add stopped flag.\n"
                },
                "additionalTags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Additional tags, `0` TitleSlug, `1` Quality, `2` Language, `3` ReleaseGroup, `4` Year, `5` Indexer, `6` Network.\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "apiUrl": {
                    "type": "string",
                    "description": "API URL.\n"
                },
                "appId": {
                    "type": "string",
                    "description": "App ID.\n"
                },
                "appToken": {
                    "type": "string",
                    "description": "App Token.\n",
                    "secret": true
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prowlarr:DownloadClients/DownloadClientCategory:DownloadClientCategory"
                    },
                    "description": "List of mapped categories.\n"
                },
                "category": {
                    "type": "string",
                    "description": "Category.\n"
                },
                "configContract": {
                    "type": "string",
                    "description": "DownloadClient configuration template.\n"
                },
                "destination": {
                    "type": "string",
                    "description": "Destination.\n"
                },
                "destinationDirectory": {
                    "type": "string",
                    "description": "Movie directory.\n"
                },
                "directory": {
                    "type": "string",
                    "description": "Directory.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "fieldTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Field tags.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "implementation": {
                    "type": "string",
                    "description": "DownloadClient implementation name.\n"
                },
                "initialState": {
                    "type": "integer",
                    "description": "Initial state. `0` Start, `1` ForceStart, `2` Pause.\n"
                },
                "intialState": {
                    "type": "integer",
                    "description": "Initial state, with Stop support. `0` Start, `1` ForceStart, `2` Pause, `3` Stop.\n"
                },
                "itemPriority": {
                    "type": "integer",
                    "description": "Priority. `0` Last, `1` First.\n"
                },
                "magnetFileExtension": {
                    "type": "string",
                    "description": "Magnet file extension.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "nzbFolder": {
                    "type": "string",
                    "description": "NZB folder.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "postImTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Post import tags.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol. Valid values are 'usenet' and 'torrent'.\n"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "Read only flag.\n"
                },
                "rpcPath": {
                    "type": "string",
                    "description": "RPC path.\n"
                },
                "saveMagnetFiles": {
                    "type": "boolean",
                    "description": "Save magnet files flag.\n"
                },
                "secretToken": {
                    "type": "string",
                    "description": "Secret token.\n",
                    "secret": true
                },
                "sequentialOrder": {
                    "type": "boolean",
                    "description": "Sequential order flag.\n"
                },
                "startOnAdd": {
                    "type": "boolean",
                    "description": "Start on add flag.\n"
                },
                "strmFolder": {
                    "type": "string",
                    "description": "STRM folder.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "torrentFolder": {
                    "type": "string",
                    "description": "Torrent folder.\n"
                },
                "tvImportedCategory": {
                    "type": "string",
                    "description": "TV imported category.\n"
                },
                "urlBase": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "required": [
                "addPaused",
                "addStopped",
                "additionalTags",
                "apiKey",
                "apiUrl",
                "appId",
                "appToken",
                "categories",
                "category",
                "configContract",
                "destination",
                "destinationDirectory",
                "directory",
                "enable",
                "fieldTags",
                "host",
                "implementation",
                "initialState",
                "intialState",
                "itemPriority",
                "magnetFileExtension",
                "name",
                "nzbFolder",
                "password",
                "port",
                "postImTags",
                "priority",
                "protocol",
                "readOnly",
                "rpcPath",
                "saveMagnetFiles",
                "secretToken",
                "sequentialOrder",
                "startOnAdd",
                "strmFolder",
                "tags",
                "torrentFolder",
                "tvImportedCategory",
                "urlBase",
                "useSsl",
                "username"
            ],
            "inputProperties": {
                "addPaused": {
                    "type": "boolean",
                    "description": "Add paused flag.\n"
                },
                "addStopped": {
                    "type": "boolean",
                    "description": "Add stopped flag.\n"
                },
                "additionalTags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Additional tags, `0` TitleSlug, `1` Quality, `2` Language, `3` ReleaseGroup, `4` Year, `5` Indexer, `6` Network.\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "apiUrl": {
                    "type": "string",
                    "description": "API URL.\n"
                },
                "appId": {
                    "type": "string",
                    "description": "App ID.\n"
                },
                "appToken": {
                    "type": "string",
                    "description": "App Token.\n",
                    "secret": true
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prowlarr:DownloadClients/DownloadClientCategory:DownloadClientCategory"
                    },
                    "description": "List of mapped categories.\n"
                },
                "category": {
                    "type": "string",
                    "description": "Category.\n"
                },
                "configContract": {
                    "type": "string",
                    "description": "DownloadClient configuration template.\n"
                },
                "destination": {
                    "type": "string",
                    "description": "Destination.\n"
                },
                "destinationDirectory": {
                    "type": "string",
                    "description": "Movie directory.\n"
                },
                "directory": {
                    "type": "string",
                    "description": "Directory.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "fieldTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Field tags.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "implementation": {
                    "type": "string",
                    "description": "DownloadClient implementation name.\n"
                },
                "initialState": {
                    "type": "integer",
                    "description": "Initial state. `0` Start, `1` ForceStart, `2` Pause.\n"
                },
                "intialState": {
                    "type": "integer",
                    "description": "Initial state, with Stop support. `0` Start, `1` ForceStart, `2` Pause, `3` Stop.\n"
                },
                "itemPriority": {
                    "type": "integer",
                    "description": "Priority. `0` Last, `1` First.\n"
                },
                "magnetFileExtension": {
                    "type": "string",
                    "description": "Magnet file extension.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "nzbFolder": {
                    "type": "string",
                    "description": "NZB folder.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "postImTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Post import tags.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol. Valid values are 'usenet' and 'torrent'.\n"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "Read only flag.\n"
                },
                "rpcPath": {
                    "type": "string",
                    "description": "RPC path.\n"
                },
                "saveMagnetFiles": {
                    "type": "boolean",
                    "description": "Save magnet files flag.\n"
                },
                "secretToken": {
                    "type": "string",
                    "description": "Secret token.\n",
                    "secret": true
                },
                "sequentialOrder": {
                    "type": "boolean",
                    "description": "Sequential order flag.\n"
                },
                "startOnAdd": {
                    "type": "boolean",
                    "description": "Start on add flag.\n"
                },
                "strmFolder": {
                    "type": "string",
                    "description": "STRM folder.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "torrentFolder": {
                    "type": "string",
                    "description": "Torrent folder.\n"
                },
                "tvImportedCategory": {
                    "type": "string",
                    "description": "TV imported category.\n"
                },
                "urlBase": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "requiredInputs": [
                "configContract",
                "implementation",
                "name",
                "protocol"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DownloadClient resources.\n",
                "properties": {
                    "addPaused": {
                        "type": "boolean",
                        "description": "Add paused flag.\n"
                    },
                    "addStopped": {
                        "type": "boolean",
                        "description": "Add stopped flag.\n"
                    },
                    "additionalTags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Additional tags, `0` TitleSlug, `1` Quality, `2` Language, `3` ReleaseGroup, `4` Year, `5` Indexer, `6` Network.\n"
                    },
                    "apiKey": {
                        "type": "string",
                        "description": "API key.\n",
                        "secret": true
                    },
                    "apiUrl": {
                        "type": "string",
                        "description": "API URL.\n"
                    },
                    "appId": {
                        "type": "string",
                        "description": "App ID.\n"
                    },
                    "appToken": {
                        "type": "string",
                        "description": "App Token.\n",
                        "secret": true
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:DownloadClients/DownloadClientCategory:DownloadClientCategory"
                        },
                        "description": "List of mapped categories.\n"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category.\n"
                    },
                    "configContract": {
                        "type": "string",
                        "description": "DownloadClient configuration template.\n"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Destination.\n"
                    },
                    "destinationDirectory": {
                        "type": "string",
                        "description": "Movie directory.\n"
                    },
                    "directory": {
                        "type": "string",
                        "description": "Directory.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable flag.\n"
                    },
                    "fieldTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Field tags.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "host.\n"
                    },
                    "implementation": {
                        "type": "string",
                        "description": "DownloadClient implementation name.\n"
                    },
                    "initialState": {
                        "type": "integer",
                        "description": "Initial state. `0` Start, `1` ForceStart, `2` Pause.\n"
                    },
                    "intialState": {
                        "type": "integer",
                        "description": "Initial state, with Stop support. `0` Start, `1` ForceStart, `2` Pause, `3` Stop.\n"
                    },
                    "itemPriority": {
                        "type": "integer",
                        "description": "Priority. `0` Last, `1` First.\n"
                    },
                    "magnetFileExtension": {
                        "type": "string",
                        "description": "Magnet file extension.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Download Client name.\n"
                    },
                    "nzbFolder": {
                        "type": "string",
                        "description": "NZB folder.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password.\n",
                        "secret": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port.\n"
                    },
                    "postImTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Post import tags.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority.\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "Protocol. Valid values are 'usenet' and 'torrent'.\n"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "description": "Read only flag.\n"
                    },
                    "rpcPath": {
                        "type": "string",
                        "description": "RPC path.\n"
                    },
                    "saveMagnetFiles": {
                        "type": "boolean",
                        "description": "Save magnet files flag.\n"
                    },
                    "secretToken": {
                        "type": "string",
                        "description": "Secret token.\n",
                        "secret": true
                    },
                    "sequentialOrder": {
                        "type": "boolean",
                        "description": "Sequential order flag.\n"
                    },
                    "startOnAdd": {
                        "type": "boolean",
                        "description": "Start on add flag.\n"
                    },
                    "strmFolder": {
                        "type": "string",
                        "description": "STRM folder.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "torrentFolder": {
                        "type": "string",
                        "description": "Torrent folder.\n"
                    },
                    "tvImportedCategory": {
                        "type": "string",
                        "description": "TV imported category.\n"
                    },
                    "urlBase": {
                        "type": "string",
                        "description": "Base URL.\n"
                    },
                    "useSsl": {
                        "type": "boolean",
                        "description": "Use SSL flag.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:DownloadClients/downloadClientAria2:DownloadClientAria2": {
            "description": "\u003c!-- subcategory:Download Clients --\u003eDownload Client Aria2 resource.\nFor more information refer to [Download Client](https://wiki.servarr.com/prowlarr/settings#download-clients) and [Aria2](https://wiki.servarr.com/prowlarr/supported#aria2).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.downloadclients.DownloadClientAria2(\"example\", {\n    enable: true,\n    host: \"aria2\",\n    name: \"Example\",\n    port: 6800,\n    priority: 1,\n    rpcPath: \"/aria2/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.download_clients.DownloadClientAria2(\"example\",\n    enable=True,\n    host=\"aria2\",\n    name=\"Example\",\n    port=6800,\n    priority=1,\n    rpc_path=\"/aria2/\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.DownloadClients.DownloadClientAria2(\"example\", new()\n    {\n        Enable = true,\n        Host = \"aria2\",\n        Name = \"Example\",\n        Port = 6800,\n        Priority = 1,\n        RpcPath = \"/aria2/\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/DownloadClients\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := DownloadClients.NewDownloadClientAria2(ctx, \"example\", \u0026DownloadClients.DownloadClientAria2Args{\n\t\t\tEnable:   pulumi.Bool(true),\n\t\t\tHost:     pulumi.String(\"aria2\"),\n\t\t\tName:     pulumi.String(\"Example\"),\n\t\t\tPort:     pulumi.Int(6800),\n\t\t\tPriority: pulumi.Int(1),\n\t\t\tRpcPath:  pulumi.String(\"/aria2/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientAria2;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientAria2Args;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DownloadClientAria2(\"example\", DownloadClientAria2Args.builder()        \n            .enable(true)\n            .host(\"aria2\")\n            .name(\"Example\")\n            .port(6800)\n            .priority(1)\n            .rpcPath(\"/aria2/\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:DownloadClients:DownloadClientAria2\n    properties:\n      enable: true\n      host: aria2\n      name: Example\n      port: 6800\n      priority: 1\n      rpcPath: /aria2/\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:DownloadClients/downloadClientAria2:DownloadClientAria2 example 1\n```\n\n ",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prowlarr:DownloadClients/DownloadClientAria2Category:DownloadClientAria2Category"
                    },
                    "description": "List of mapped categories.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "rpcPath": {
                    "type": "string",
                    "description": "RPC path.\n"
                },
                "secretToken": {
                    "type": "string",
                    "description": "Secret token.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                }
            },
            "required": [
                "categories",
                "enable",
                "host",
                "name",
                "port",
                "priority",
                "rpcPath",
                "secretToken",
                "tags",
                "useSsl"
            ],
            "inputProperties": {
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "rpcPath": {
                    "type": "string",
                    "description": "RPC path.\n"
                },
                "secretToken": {
                    "type": "string",
                    "description": "Secret token.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DownloadClientAria2 resources.\n",
                "properties": {
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:DownloadClients/DownloadClientAria2Category:DownloadClientAria2Category"
                        },
                        "description": "List of mapped categories.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable flag.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "host.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Download Client name.\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority.\n"
                    },
                    "rpcPath": {
                        "type": "string",
                        "description": "RPC path.\n"
                    },
                    "secretToken": {
                        "type": "string",
                        "description": "Secret token.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "useSsl": {
                        "type": "boolean",
                        "description": "Use SSL flag.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:DownloadClients/downloadClientDeluge:DownloadClientDeluge": {
            "description": "\u003c!-- subcategory:Download Clients --\u003eDownload Client Deluge resource.\nFor more information refer to [Download Client](https://wiki.servarr.com/prowlarr/settings#download-clients) and [Deluge](https://wiki.servarr.com/prowlarr/supported#deluge).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.downloadclients.DownloadClientDeluge(\"example\", {\n    enable: true,\n    host: \"deluge\",\n    name: \"Example\",\n    port: 9091,\n    priority: 1,\n    urlBase: \"/deluge/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.download_clients.DownloadClientDeluge(\"example\",\n    enable=True,\n    host=\"deluge\",\n    name=\"Example\",\n    port=9091,\n    priority=1,\n    url_base=\"/deluge/\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.DownloadClients.DownloadClientDeluge(\"example\", new()\n    {\n        Enable = true,\n        Host = \"deluge\",\n        Name = \"Example\",\n        Port = 9091,\n        Priority = 1,\n        UrlBase = \"/deluge/\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/DownloadClients\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := DownloadClients.NewDownloadClientDeluge(ctx, \"example\", \u0026DownloadClients.DownloadClientDelugeArgs{\n\t\t\tEnable:   pulumi.Bool(true),\n\t\t\tHost:     pulumi.String(\"deluge\"),\n\t\t\tName:     pulumi.String(\"Example\"),\n\t\t\tPort:     pulumi.Int(9091),\n\t\t\tPriority: pulumi.Int(1),\n\t\t\tUrlBase:  pulumi.String(\"/deluge/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientDeluge;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientDelugeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DownloadClientDeluge(\"example\", DownloadClientDelugeArgs.builder()        \n            .enable(true)\n            .host(\"deluge\")\n            .name(\"Example\")\n            .port(9091)\n            .priority(1)\n            .urlBase(\"/deluge/\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:DownloadClients:DownloadClientDeluge\n    properties:\n      enable: true\n      host: deluge\n      name: Example\n      port: 9091\n      priority: 1\n      urlBase: /deluge/\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:DownloadClients/downloadClientDeluge:DownloadClientDeluge example 1\n```\n\n ",
            "properties": {
                "addPaused": {
                    "type": "boolean",
                    "description": "Add paused flag.\n"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prowlarr:DownloadClients/DownloadClientDelugeCategory:DownloadClientDelugeCategory"
                    },
                    "description": "List of mapped categories.\n"
                },
                "category": {
                    "type": "string",
                    "description": "Category.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "itemPriority": {
                    "type": "integer",
                    "description": "Older Movie priority. `0` Last, `1` First.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "urlBase": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "required": [
                "addPaused",
                "categories",
                "category",
                "enable",
                "host",
                "itemPriority",
                "name",
                "password",
                "port",
                "priority",
                "tags",
                "urlBase",
                "useSsl",
                "username"
            ],
            "inputProperties": {
                "addPaused": {
                    "type": "boolean",
                    "description": "Add paused flag.\n"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prowlarr:DownloadClients/DownloadClientDelugeCategory:DownloadClientDelugeCategory"
                    },
                    "description": "List of mapped categories.\n"
                },
                "category": {
                    "type": "string",
                    "description": "Category.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "itemPriority": {
                    "type": "integer",
                    "description": "Older Movie priority. `0` Last, `1` First.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "urlBase": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DownloadClientDeluge resources.\n",
                "properties": {
                    "addPaused": {
                        "type": "boolean",
                        "description": "Add paused flag.\n"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:DownloadClients/DownloadClientDelugeCategory:DownloadClientDelugeCategory"
                        },
                        "description": "List of mapped categories.\n"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable flag.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "host.\n"
                    },
                    "itemPriority": {
                        "type": "integer",
                        "description": "Older Movie priority. `0` Last, `1` First.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Download Client name.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password.\n",
                        "secret": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "urlBase": {
                        "type": "string",
                        "description": "Base URL.\n"
                    },
                    "useSsl": {
                        "type": "boolean",
                        "description": "Use SSL flag.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:DownloadClients/downloadClientFlood:DownloadClientFlood": {
            "description": "\u003c!-- subcategory:Download Clients --\u003eDownload Client Flood resource.\nFor more information refer to [Download Client](https://wiki.servarr.com/prowlarr/settings#download-clients) and [Flood](https://wiki.servarr.com/prowlarr/supported#flood).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.downloadclients.DownloadClientFlood(\"example\", {\n    addPaused: true,\n    additionalTags: [\n        0,\n        1,\n    ],\n    enable: true,\n    fieldTags: [\"prowlarr\"],\n    host: \"flood\",\n    name: \"Example\",\n    port: 9091,\n    priority: 1,\n    urlBase: \"/flood/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.download_clients.DownloadClientFlood(\"example\",\n    add_paused=True,\n    additional_tags=[\n        0,\n        1,\n    ],\n    enable=True,\n    field_tags=[\"prowlarr\"],\n    host=\"flood\",\n    name=\"Example\",\n    port=9091,\n    priority=1,\n    url_base=\"/flood/\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.DownloadClients.DownloadClientFlood(\"example\", new()\n    {\n        AddPaused = true,\n        AdditionalTags = new[]\n        {\n            0,\n            1,\n        },\n        Enable = true,\n        FieldTags = new[]\n        {\n            \"prowlarr\",\n        },\n        Host = \"flood\",\n        Name = \"Example\",\n        Port = 9091,\n        Priority = 1,\n        UrlBase = \"/flood/\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/DownloadClients\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := DownloadClients.NewDownloadClientFlood(ctx, \"example\", \u0026DownloadClients.DownloadClientFloodArgs{\n\t\t\tAddPaused: pulumi.Bool(true),\n\t\t\tAdditionalTags: pulumi.IntArray{\n\t\t\t\tpulumi.Int(0),\n\t\t\t\tpulumi.Int(1),\n\t\t\t},\n\t\t\tEnable: pulumi.Bool(true),\n\t\t\tFieldTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"prowlarr\"),\n\t\t\t},\n\t\t\tHost:     pulumi.String(\"flood\"),\n\t\t\tName:     pulumi.String(\"Example\"),\n\t\t\tPort:     pulumi.Int(9091),\n\t\t\tPriority: pulumi.Int(1),\n\t\t\tUrlBase:  pulumi.String(\"/flood/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientFlood;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientFloodArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DownloadClientFlood(\"example\", DownloadClientFloodArgs.builder()        \n            .addPaused(true)\n            .additionalTags(            \n                0,\n                1)\n            .enable(true)\n            .fieldTags(\"prowlarr\")\n            .host(\"flood\")\n            .name(\"Example\")\n            .port(9091)\n            .priority(1)\n            .urlBase(\"/flood/\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:DownloadClients:DownloadClientFlood\n    properties:\n      addPaused: true\n      additionalTags:\n        - 0\n        - 1\n      enable: true\n      fieldTags:\n        - prowlarr\n      host: flood\n      name: Example\n      port: 9091\n      priority: 1\n      urlBase: /flood/\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:DownloadClients/downloadClientFlood:DownloadClientFlood example 1\n```\n\n ",
            "properties": {
                "addPaused": {
                    "type": "boolean",
                    "description": "Add paused flag.\n"
                },
                "additionalTags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Additional tags, `0` TitleSlug, `1` Quality, `2` Language, `3` ReleaseGroup, `4` Year, `5` Indexer, `6` Network.\n"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prowlarr:DownloadClients/DownloadClientFloodCategory:DownloadClientFloodCategory"
                    },
                    "description": "List of mapped categories.\n"
                },
                "destination": {
                    "type": "string",
                    "description": "Destination.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "fieldTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Field tags.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "urlBase": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "required": [
                "addPaused",
                "additionalTags",
                "categories",
                "destination",
                "enable",
                "fieldTags",
                "host",
                "name",
                "password",
                "port",
                "priority",
                "tags",
                "urlBase",
                "useSsl",
                "username"
            ],
            "inputProperties": {
                "addPaused": {
                    "type": "boolean",
                    "description": "Add paused flag.\n"
                },
                "additionalTags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Additional tags, `0` TitleSlug, `1` Quality, `2` Language, `3` ReleaseGroup, `4` Year, `5` Indexer, `6` Network.\n"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prowlarr:DownloadClients/DownloadClientFloodCategory:DownloadClientFloodCategory"
                    },
                    "description": "List of mapped categories.\n"
                },
                "destination": {
                    "type": "string",
                    "description": "Destination.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "fieldTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Field tags.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "urlBase": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DownloadClientFlood resources.\n",
                "properties": {
                    "addPaused": {
                        "type": "boolean",
                        "description": "Add paused flag.\n"
                    },
                    "additionalTags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Additional tags, `0` TitleSlug, `1` Quality, `2` Language, `3` ReleaseGroup, `4` Year, `5` Indexer, `6` Network.\n"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:DownloadClients/DownloadClientFloodCategory:DownloadClientFloodCategory"
                        },
                        "description": "List of mapped categories.\n"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Destination.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable flag.\n"
                    },
                    "fieldTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Field tags.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "host.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Download Client name.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password.\n",
                        "secret": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "urlBase": {
                        "type": "string",
                        "description": "Base URL.\n"
                    },
                    "useSsl": {
                        "type": "boolean",
                        "description": "Use SSL flag.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:DownloadClients/downloadClientFreebox:DownloadClientFreebox": {
            "description": "\u003c!-- subcategory:Download Clients --\u003eDownload Client Freebox resource.\nFor more information refer to [Download Client](https://wiki.servarr.com/prowlarr/settings#download-clients) and [Freebox](https://wiki.servarr.com/prowlarr/supported#torrentfreeboxdownload).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.downloadclients.DownloadClientFreebox(\"example\", {\n    apiUrl: \"/api/v1/\",\n    appId: \"freebox\",\n    appToken: \"Token123\",\n    enable: true,\n    host: \"mafreebox.freebox.fr\",\n    name: \"Example\",\n    port: 443,\n    priority: 1,\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.download_clients.DownloadClientFreebox(\"example\",\n    api_url=\"/api/v1/\",\n    app_id=\"freebox\",\n    app_token=\"Token123\",\n    enable=True,\n    host=\"mafreebox.freebox.fr\",\n    name=\"Example\",\n    port=443,\n    priority=1)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.DownloadClients.DownloadClientFreebox(\"example\", new()\n    {\n        ApiUrl = \"/api/v1/\",\n        AppId = \"freebox\",\n        AppToken = \"Token123\",\n        Enable = true,\n        Host = \"mafreebox.freebox.fr\",\n        Name = \"Example\",\n        Port = 443,\n        Priority = 1,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/DownloadClients\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := DownloadClients.NewDownloadClientFreebox(ctx, \"example\", \u0026DownloadClients.DownloadClientFreeboxArgs{\n\t\t\tApiUrl:   pulumi.String(\"/api/v1/\"),\n\t\t\tAppId:    pulumi.String(\"freebox\"),\n\t\t\tAppToken: pulumi.String(\"Token123\"),\n\t\t\tEnable:   pulumi.Bool(true),\n\t\t\tHost:     pulumi.String(\"mafreebox.freebox.fr\"),\n\t\t\tName:     pulumi.String(\"Example\"),\n\t\t\tPort:     pulumi.Int(443),\n\t\t\tPriority: pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientFreebox;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientFreeboxArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DownloadClientFreebox(\"example\", DownloadClientFreeboxArgs.builder()        \n            .apiUrl(\"/api/v1/\")\n            .appId(\"freebox\")\n            .appToken(\"Token123\")\n            .enable(true)\n            .host(\"mafreebox.freebox.fr\")\n            .name(\"Example\")\n            .port(443)\n            .priority(1)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:DownloadClients:DownloadClientFreebox\n    properties:\n      apiUrl: /api/v1/\n      appId: freebox\n      appToken: Token123\n      enable: true\n      host: mafreebox.freebox.fr\n      name: Example\n      port: 443\n      priority: 1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:DownloadClients/downloadClientFreebox:DownloadClientFreebox example 1\n```\n\n ",
            "properties": {
                "addPaused": {
                    "type": "boolean",
                    "description": "Add paused flag.\n"
                },
                "apiUrl": {
                    "type": "string",
                    "description": "API URL.\n"
                },
                "appId": {
                    "type": "string",
                    "description": "App ID.\n"
                },
                "appToken": {
                    "type": "string",
                    "description": "App Token.\n",
                    "secret": true
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prowlarr:DownloadClients/DownloadClientFreeboxCategory:DownloadClientFreeboxCategory"
                    },
                    "description": "List of mapped categories.\n"
                },
                "category": {
                    "type": "string",
                    "description": "category.\n"
                },
                "destinationDirectory": {
                    "type": "string",
                    "description": "Movie directory.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "itemPriority": {
                    "type": "integer",
                    "description": "Recent Movie priority. `0` Last, `1` First.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                }
            },
            "required": [
                "addPaused",
                "apiUrl",
                "appId",
                "appToken",
                "categories",
                "category",
                "destinationDirectory",
                "enable",
                "host",
                "itemPriority",
                "name",
                "port",
                "priority",
                "tags",
                "useSsl"
            ],
            "inputProperties": {
                "addPaused": {
                    "type": "boolean",
                    "description": "Add paused flag.\n"
                },
                "apiUrl": {
                    "type": "string",
                    "description": "API URL.\n"
                },
                "appId": {
                    "type": "string",
                    "description": "App ID.\n"
                },
                "appToken": {
                    "type": "string",
                    "description": "App Token.\n",
                    "secret": true
                },
                "category": {
                    "type": "string",
                    "description": "category.\n"
                },
                "destinationDirectory": {
                    "type": "string",
                    "description": "Movie directory.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "itemPriority": {
                    "type": "integer",
                    "description": "Recent Movie priority. `0` Last, `1` First.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                }
            },
            "requiredInputs": [
                "apiUrl",
                "appId",
                "appToken",
                "host",
                "name",
                "port"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DownloadClientFreebox resources.\n",
                "properties": {
                    "addPaused": {
                        "type": "boolean",
                        "description": "Add paused flag.\n"
                    },
                    "apiUrl": {
                        "type": "string",
                        "description": "API URL.\n"
                    },
                    "appId": {
                        "type": "string",
                        "description": "App ID.\n"
                    },
                    "appToken": {
                        "type": "string",
                        "description": "App Token.\n",
                        "secret": true
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:DownloadClients/DownloadClientFreeboxCategory:DownloadClientFreeboxCategory"
                        },
                        "description": "List of mapped categories.\n"
                    },
                    "category": {
                        "type": "string",
                        "description": "category.\n"
                    },
                    "destinationDirectory": {
                        "type": "string",
                        "description": "Movie directory.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable flag.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "host.\n"
                    },
                    "itemPriority": {
                        "type": "integer",
                        "description": "Recent Movie priority. `0` Last, `1` First.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Download Client name.\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "useSsl": {
                        "type": "boolean",
                        "description": "Use SSL flag.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:DownloadClients/downloadClientHadouken:DownloadClientHadouken": {
            "description": "\u003c!-- subcategory:Download Clients --\u003eDownload Client Hadouken resource.\nFor more information refer to [Download Client](https://wiki.servarr.com/prowlarr/settings#download-clients) and [Hadouken](https://wiki.servarr.com/prowlarr/supported#hadouken).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.downloadclients.DownloadClientHadouken(\"example\", {\n    enable: true,\n    host: \"hadouken\",\n    name: \"Example\",\n    password: \"password\",\n    port: 9091,\n    priority: 1,\n    urlBase: \"/hadouken/\",\n    username: \"username\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.download_clients.DownloadClientHadouken(\"example\",\n    enable=True,\n    host=\"hadouken\",\n    name=\"Example\",\n    password=\"password\",\n    port=9091,\n    priority=1,\n    url_base=\"/hadouken/\",\n    username=\"username\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.DownloadClients.DownloadClientHadouken(\"example\", new()\n    {\n        Enable = true,\n        Host = \"hadouken\",\n        Name = \"Example\",\n        Password = \"password\",\n        Port = 9091,\n        Priority = 1,\n        UrlBase = \"/hadouken/\",\n        Username = \"username\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/DownloadClients\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := DownloadClients.NewDownloadClientHadouken(ctx, \"example\", \u0026DownloadClients.DownloadClientHadoukenArgs{\n\t\t\tEnable:   pulumi.Bool(true),\n\t\t\tHost:     pulumi.String(\"hadouken\"),\n\t\t\tName:     pulumi.String(\"Example\"),\n\t\t\tPassword: pulumi.String(\"password\"),\n\t\t\tPort:     pulumi.Int(9091),\n\t\t\tPriority: pulumi.Int(1),\n\t\t\tUrlBase:  pulumi.String(\"/hadouken/\"),\n\t\t\tUsername: pulumi.String(\"username\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientHadouken;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientHadoukenArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DownloadClientHadouken(\"example\", DownloadClientHadoukenArgs.builder()        \n            .enable(true)\n            .host(\"hadouken\")\n            .name(\"Example\")\n            .password(\"password\")\n            .port(9091)\n            .priority(1)\n            .urlBase(\"/hadouken/\")\n            .username(\"username\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:DownloadClients:DownloadClientHadouken\n    properties:\n      enable: true\n      host: hadouken\n      name: Example\n      password: password\n      port: 9091\n      priority: 1\n      urlBase: /hadouken/\n      username: username\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:DownloadClients/downloadClientHadouken:DownloadClientHadouken example 1\n```\n\n ",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prowlarr:DownloadClients/DownloadClientHadoukenCategory:DownloadClientHadoukenCategory"
                    },
                    "description": "List of mapped categories.\n"
                },
                "category": {
                    "type": "string",
                    "description": "Category.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "urlBase": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "required": [
                "categories",
                "category",
                "enable",
                "host",
                "name",
                "password",
                "port",
                "priority",
                "tags",
                "urlBase",
                "useSsl",
                "username"
            ],
            "inputProperties": {
                "category": {
                    "type": "string",
                    "description": "Category.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "urlBase": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "requiredInputs": [
                "name",
                "password",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DownloadClientHadouken resources.\n",
                "properties": {
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:DownloadClients/DownloadClientHadoukenCategory:DownloadClientHadoukenCategory"
                        },
                        "description": "List of mapped categories.\n"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable flag.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "host.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Download Client name.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password.\n",
                        "secret": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "urlBase": {
                        "type": "string",
                        "description": "Base URL.\n"
                    },
                    "useSsl": {
                        "type": "boolean",
                        "description": "Use SSL flag.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:DownloadClients/downloadClientNzbget:DownloadClientNzbget": {
            "description": "\u003c!-- subcategory:Download Clients --\u003eDownload Client NZBGet resource.\nFor more information refer to [Download Client](https://wiki.servarr.com/prowlarr/settings#download-clients) and [NZBGet](https://wiki.servarr.com/prowlarr/supported#nzbget).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.downloadclients.DownloadClientNzbget(\"example\", {\n    enable: true,\n    host: \"nzbget\",\n    name: \"Example\",\n    port: 6789,\n    priority: 1,\n    urlBase: \"/nzbget/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.download_clients.DownloadClientNzbget(\"example\",\n    enable=True,\n    host=\"nzbget\",\n    name=\"Example\",\n    port=6789,\n    priority=1,\n    url_base=\"/nzbget/\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.DownloadClients.DownloadClientNzbget(\"example\", new()\n    {\n        Enable = true,\n        Host = \"nzbget\",\n        Name = \"Example\",\n        Port = 6789,\n        Priority = 1,\n        UrlBase = \"/nzbget/\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/DownloadClients\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := DownloadClients.NewDownloadClientNzbget(ctx, \"example\", \u0026DownloadClients.DownloadClientNzbgetArgs{\n\t\t\tEnable:   pulumi.Bool(true),\n\t\t\tHost:     pulumi.String(\"nzbget\"),\n\t\t\tName:     pulumi.String(\"Example\"),\n\t\t\tPort:     pulumi.Int(6789),\n\t\t\tPriority: pulumi.Int(1),\n\t\t\tUrlBase:  pulumi.String(\"/nzbget/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientNzbget;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientNzbgetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DownloadClientNzbget(\"example\", DownloadClientNzbgetArgs.builder()        \n            .enable(true)\n            .host(\"nzbget\")\n            .name(\"Example\")\n            .port(6789)\n            .priority(1)\n            .urlBase(\"/nzbget/\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:DownloadClients:DownloadClientNzbget\n    properties:\n      enable: true\n      host: nzbget\n      name: Example\n      port: 6789\n      priority: 1\n      urlBase: /nzbget/\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:DownloadClients/downloadClientNzbget:DownloadClientNzbget example 1\n```\n\n ",
            "properties": {
                "addPaused": {
                    "type": "boolean",
                    "description": "Add paused flag.\n"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prowlarr:DownloadClients/DownloadClientNzbgetCategory:DownloadClientNzbgetCategory"
                    },
                    "description": "List of mapped categories.\n"
                },
                "category": {
                    "type": "string",
                    "description": "Category.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "itemPriority": {
                    "type": "integer",
                    "description": "Recent Movie priority. `-100` VeryLow, `-50` Low, `0` Normal, `50` High, `100` VeryHigh, `900` Force.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "urlBase": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "required": [
                "addPaused",
                "categories",
                "category",
                "enable",
                "host",
                "itemPriority",
                "name",
                "password",
                "port",
                "priority",
                "tags",
                "urlBase",
                "useSsl",
                "username"
            ],
            "inputProperties": {
                "addPaused": {
                    "type": "boolean",
                    "description": "Add paused flag.\n"
                },
                "category": {
                    "type": "string",
                    "description": "Category.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "itemPriority": {
                    "type": "integer",
                    "description": "Recent Movie priority. `-100` VeryLow, `-50` Low, `0` Normal, `50` High, `100` VeryHigh, `900` Force.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "urlBase": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DownloadClientNzbget resources.\n",
                "properties": {
                    "addPaused": {
                        "type": "boolean",
                        "description": "Add paused flag.\n"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:DownloadClients/DownloadClientNzbgetCategory:DownloadClientNzbgetCategory"
                        },
                        "description": "List of mapped categories.\n"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable flag.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "host.\n"
                    },
                    "itemPriority": {
                        "type": "integer",
                        "description": "Recent Movie priority. `-100` VeryLow, `-50` Low, `0` Normal, `50` High, `100` VeryHigh, `900` Force.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Download Client name.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password.\n",
                        "secret": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "urlBase": {
                        "type": "string",
                        "description": "Base URL.\n"
                    },
                    "useSsl": {
                        "type": "boolean",
                        "description": "Use SSL flag.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:DownloadClients/downloadClientNzbvortex:DownloadClientNzbvortex": {
            "description": "\u003c!-- subcategory:Download Clients --\u003eDownload Client Nzbvortex resource.\nFor more information refer to [Download Client](https://wiki.servarr.com/prowlarr/settings#download-clients) and [Nzbvortex](https://wiki.servarr.com/prowlarr/supported#nzbvortex).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.downloadclients.DownloadClientNzbvortex(\"example\", {\n    enable: true,\n    host: \"nzbvortex\",\n    name: \"Example\",\n    port: 6789,\n    priority: 1,\n    urlBase: \"/nzbvortex/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.download_clients.DownloadClientNzbvortex(\"example\",\n    enable=True,\n    host=\"nzbvortex\",\n    name=\"Example\",\n    port=6789,\n    priority=1,\n    url_base=\"/nzbvortex/\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.DownloadClients.DownloadClientNzbvortex(\"example\", new()\n    {\n        Enable = true,\n        Host = \"nzbvortex\",\n        Name = \"Example\",\n        Port = 6789,\n        Priority = 1,\n        UrlBase = \"/nzbvortex/\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/DownloadClients\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := DownloadClients.NewDownloadClientNzbvortex(ctx, \"example\", \u0026DownloadClients.DownloadClientNzbvortexArgs{\n\t\t\tEnable:   pulumi.Bool(true),\n\t\t\tHost:     pulumi.String(\"nzbvortex\"),\n\t\t\tName:     pulumi.String(\"Example\"),\n\t\t\tPort:     pulumi.Int(6789),\n\t\t\tPriority: pulumi.Int(1),\n\t\t\tUrlBase:  pulumi.String(\"/nzbvortex/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientNzbvortex;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientNzbvortexArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DownloadClientNzbvortex(\"example\", DownloadClientNzbvortexArgs.builder()        \n            .enable(true)\n            .host(\"nzbvortex\")\n            .name(\"Example\")\n            .port(6789)\n            .priority(1)\n            .urlBase(\"/nzbvortex/\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:DownloadClients:DownloadClientNzbvortex\n    properties:\n      enable: true\n      host: nzbvortex\n      name: Example\n      port: 6789\n      priority: 1\n      urlBase: /nzbvortex/\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:DownloadClients/downloadClientNzbvortex:DownloadClientNzbvortex example 1\n```\n\n ",
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prowlarr:DownloadClients/DownloadClientNzbvortexCategory:DownloadClientNzbvortexCategory"
                    },
                    "description": "List of mapped categories.\n"
                },
                "category": {
                    "type": "string",
                    "description": "Category.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "itemPriority": {
                    "type": "integer",
                    "description": "Recent Movie priority. `-1` Low, `0` Normal, `1` High.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "urlBase": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                }
            },
            "required": [
                "apiKey",
                "categories",
                "category",
                "enable",
                "host",
                "itemPriority",
                "name",
                "port",
                "priority",
                "tags",
                "urlBase",
                "useSsl"
            ],
            "inputProperties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n"
                },
                "category": {
                    "type": "string",
                    "description": "Category.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "itemPriority": {
                    "type": "integer",
                    "description": "Recent Movie priority. `-1` Low, `0` Normal, `1` High.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "urlBase": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                }
            },
            "requiredInputs": [
                "apiKey",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DownloadClientNzbvortex resources.\n",
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "description": "API key.\n"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:DownloadClients/DownloadClientNzbvortexCategory:DownloadClientNzbvortexCategory"
                        },
                        "description": "List of mapped categories.\n"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable flag.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "host.\n"
                    },
                    "itemPriority": {
                        "type": "integer",
                        "description": "Recent Movie priority. `-1` Low, `0` Normal, `1` High.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Download Client name.\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "urlBase": {
                        "type": "string",
                        "description": "Base URL.\n"
                    },
                    "useSsl": {
                        "type": "boolean",
                        "description": "Use SSL flag.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:DownloadClients/downloadClientPneumatic:DownloadClientPneumatic": {
            "description": "\u003c!-- subcategory:Download Clients --\u003eDownload Client Pneumatic resource.\nFor more information refer to [Download Client](https://wiki.servarr.com/prowlarr/settings#download-clients) and [Pneumatic](https://wiki.servarr.com/prowlarr/supported#pneumatic).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.downloadclients.DownloadClientPneumatic(\"example\", {\n    enable: true,\n    name: \"Example\",\n    nzbFolder: \"/nzb/\",\n    priority: 1,\n    strmFolder: \"/strm/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.download_clients.DownloadClientPneumatic(\"example\",\n    enable=True,\n    name=\"Example\",\n    nzb_folder=\"/nzb/\",\n    priority=1,\n    strm_folder=\"/strm/\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.DownloadClients.DownloadClientPneumatic(\"example\", new()\n    {\n        Enable = true,\n        Name = \"Example\",\n        NzbFolder = \"/nzb/\",\n        Priority = 1,\n        StrmFolder = \"/strm/\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/DownloadClients\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := DownloadClients.NewDownloadClientPneumatic(ctx, \"example\", \u0026DownloadClients.DownloadClientPneumaticArgs{\n\t\t\tEnable:     pulumi.Bool(true),\n\t\t\tName:       pulumi.String(\"Example\"),\n\t\t\tNzbFolder:  pulumi.String(\"/nzb/\"),\n\t\t\tPriority:   pulumi.Int(1),\n\t\t\tStrmFolder: pulumi.String(\"/strm/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientPneumatic;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientPneumaticArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DownloadClientPneumatic(\"example\", DownloadClientPneumaticArgs.builder()        \n            .enable(true)\n            .name(\"Example\")\n            .nzbFolder(\"/nzb/\")\n            .priority(1)\n            .strmFolder(\"/strm/\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:DownloadClients:DownloadClientPneumatic\n    properties:\n      enable: true\n      name: Example\n      nzbFolder: /nzb/\n      priority: 1\n      strmFolder: /strm/\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:DownloadClients/downloadClientPneumatic:DownloadClientPneumatic example 1\n```\n\n ",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prowlarr:DownloadClients/DownloadClientPneumaticCategory:DownloadClientPneumaticCategory"
                    },
                    "description": "List of mapped categories.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "nzbFolder": {
                    "type": "string",
                    "description": "NZB folder.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "strmFolder": {
                    "type": "string",
                    "description": "STRM folder.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "required": [
                "categories",
                "enable",
                "name",
                "nzbFolder",
                "priority",
                "strmFolder",
                "tags"
            ],
            "inputProperties": {
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "nzbFolder": {
                    "type": "string",
                    "description": "NZB folder.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "strmFolder": {
                    "type": "string",
                    "description": "STRM folder.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "requiredInputs": [
                "name",
                "nzbFolder",
                "strmFolder"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DownloadClientPneumatic resources.\n",
                "properties": {
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:DownloadClients/DownloadClientPneumaticCategory:DownloadClientPneumaticCategory"
                        },
                        "description": "List of mapped categories.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable flag.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Download Client name.\n"
                    },
                    "nzbFolder": {
                        "type": "string",
                        "description": "NZB folder.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority.\n"
                    },
                    "strmFolder": {
                        "type": "string",
                        "description": "STRM folder.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:DownloadClients/downloadClientQbittorrent:DownloadClientQbittorrent": {
            "description": "\u003c!-- subcategory:Download Clients --\u003eDownload Client qBittorrent resource.\nFor more information refer to [Download Client](https://wiki.servarr.com/prowlarr/settings#download-clients) and [qBittorrent](https://wiki.servarr.com/prowlarr/supported#qbittorrent).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.downloadclients.DownloadClientQbittorrent(\"example\", {\n    category: \"tv-prowlarr\",\n    enable: true,\n    host: \"qbittorrent\",\n    name: \"Example\",\n    port: 9091,\n    priority: 1,\n    urlBase: \"/qbittorrent/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.download_clients.DownloadClientQbittorrent(\"example\",\n    category=\"tv-prowlarr\",\n    enable=True,\n    host=\"qbittorrent\",\n    name=\"Example\",\n    port=9091,\n    priority=1,\n    url_base=\"/qbittorrent/\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.DownloadClients.DownloadClientQbittorrent(\"example\", new()\n    {\n        Category = \"tv-prowlarr\",\n        Enable = true,\n        Host = \"qbittorrent\",\n        Name = \"Example\",\n        Port = 9091,\n        Priority = 1,\n        UrlBase = \"/qbittorrent/\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/DownloadClients\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := DownloadClients.NewDownloadClientQbittorrent(ctx, \"example\", \u0026DownloadClients.DownloadClientQbittorrentArgs{\n\t\t\tCategory: pulumi.String(\"tv-prowlarr\"),\n\t\t\tEnable:   pulumi.Bool(true),\n\t\t\tHost:     pulumi.String(\"qbittorrent\"),\n\t\t\tName:     pulumi.String(\"Example\"),\n\t\t\tPort:     pulumi.Int(9091),\n\t\t\tPriority: pulumi.Int(1),\n\t\t\tUrlBase:  pulumi.String(\"/qbittorrent/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientQbittorrent;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientQbittorrentArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DownloadClientQbittorrent(\"example\", DownloadClientQbittorrentArgs.builder()        \n            .category(\"tv-prowlarr\")\n            .enable(true)\n            .host(\"qbittorrent\")\n            .name(\"Example\")\n            .port(9091)\n            .priority(1)\n            .urlBase(\"/qbittorrent/\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:DownloadClients:DownloadClientQbittorrent\n    properties:\n      category: tv-prowlarr\n      enable: true\n      host: qbittorrent\n      name: Example\n      port: 9091\n      priority: 1\n      urlBase: /qbittorrent/\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:DownloadClients/downloadClientQbittorrent:DownloadClientQbittorrent example 1\n```\n\n ",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prowlarr:DownloadClients/DownloadClientQbittorrentCategory:DownloadClientQbittorrentCategory"
                    },
                    "description": "List of mapped categories.\n"
                },
                "category": {
                    "type": "string",
                    "description": "Category.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "initialState": {
                    "type": "integer",
                    "description": "Initial state, with Stop support. `0` Start, `1` ForceStart, `2` Pause.\n"
                },
                "itemPriority": {
                    "type": "integer",
                    "description": "Older Movie priority. `0` Last, `1` First.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "sequentialOrder": {
                    "type": "boolean",
                    "description": "Sequential order flag.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "urlBase": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "required": [
                "categories",
                "category",
                "enable",
                "host",
                "initialState",
                "itemPriority",
                "name",
                "password",
                "port",
                "priority",
                "sequentialOrder",
                "tags",
                "urlBase",
                "useSsl",
                "username"
            ],
            "inputProperties": {
                "category": {
                    "type": "string",
                    "description": "Category.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "initialState": {
                    "type": "integer",
                    "description": "Initial state, with Stop support. `0` Start, `1` ForceStart, `2` Pause.\n"
                },
                "itemPriority": {
                    "type": "integer",
                    "description": "Older Movie priority. `0` Last, `1` First.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "sequentialOrder": {
                    "type": "boolean",
                    "description": "Sequential order flag.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "urlBase": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DownloadClientQbittorrent resources.\n",
                "properties": {
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:DownloadClients/DownloadClientQbittorrentCategory:DownloadClientQbittorrentCategory"
                        },
                        "description": "List of mapped categories.\n"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable flag.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "host.\n"
                    },
                    "initialState": {
                        "type": "integer",
                        "description": "Initial state, with Stop support. `0` Start, `1` ForceStart, `2` Pause.\n"
                    },
                    "itemPriority": {
                        "type": "integer",
                        "description": "Older Movie priority. `0` Last, `1` First.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Download Client name.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password.\n",
                        "secret": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority.\n"
                    },
                    "sequentialOrder": {
                        "type": "boolean",
                        "description": "Sequential order flag.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "urlBase": {
                        "type": "string",
                        "description": "Base URL.\n"
                    },
                    "useSsl": {
                        "type": "boolean",
                        "description": "Use SSL flag.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:DownloadClients/downloadClientRtorrent:DownloadClientRtorrent": {
            "description": "\u003c!-- subcategory:Download Clients --\u003eDownload Client RTorrent resource.\nFor more information refer to [Download Client](https://wiki.servarr.com/prowlarr/settings#download-clients) and [RTorrent](https://wiki.servarr.com/prowlarr/supported#rtorrent).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.downloadclients.DownloadClientRtorrent(\"example\", {\n    enable: true,\n    host: \"rtorrent\",\n    name: \"Example\",\n    port: 9091,\n    priority: 1,\n    urlBase: \"/rtorrent/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.download_clients.DownloadClientRtorrent(\"example\",\n    enable=True,\n    host=\"rtorrent\",\n    name=\"Example\",\n    port=9091,\n    priority=1,\n    url_base=\"/rtorrent/\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.DownloadClients.DownloadClientRtorrent(\"example\", new()\n    {\n        Enable = true,\n        Host = \"rtorrent\",\n        Name = \"Example\",\n        Port = 9091,\n        Priority = 1,\n        UrlBase = \"/rtorrent/\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/DownloadClients\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := DownloadClients.NewDownloadClientRtorrent(ctx, \"example\", \u0026DownloadClients.DownloadClientRtorrentArgs{\n\t\t\tEnable:   pulumi.Bool(true),\n\t\t\tHost:     pulumi.String(\"rtorrent\"),\n\t\t\tName:     pulumi.String(\"Example\"),\n\t\t\tPort:     pulumi.Int(9091),\n\t\t\tPriority: pulumi.Int(1),\n\t\t\tUrlBase:  pulumi.String(\"/rtorrent/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientRtorrent;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientRtorrentArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DownloadClientRtorrent(\"example\", DownloadClientRtorrentArgs.builder()        \n            .enable(true)\n            .host(\"rtorrent\")\n            .name(\"Example\")\n            .port(9091)\n            .priority(1)\n            .urlBase(\"/rtorrent/\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:DownloadClients:DownloadClientRtorrent\n    properties:\n      enable: true\n      host: rtorrent\n      name: Example\n      port: 9091\n      priority: 1\n      urlBase: /rtorrent/\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:DownloadClients/downloadClientRtorrent:DownloadClientRtorrent example 1\n```\n\n ",
            "properties": {
                "addStopped": {
                    "type": "boolean",
                    "description": "Add stopped flag.\n"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prowlarr:DownloadClients/DownloadClientRtorrentCategory:DownloadClientRtorrentCategory"
                    },
                    "description": "List of mapped categories.\n"
                },
                "category": {
                    "type": "string",
                    "description": "Category.\n"
                },
                "directory": {
                    "type": "string",
                    "description": "Directory.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "itemPriority": {
                    "type": "integer",
                    "description": "Recent Movie priority. `0` VeryLow, `1` Low, `2` Normal, `3` High.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "urlBase": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "required": [
                "addStopped",
                "categories",
                "category",
                "directory",
                "enable",
                "host",
                "itemPriority",
                "name",
                "password",
                "port",
                "priority",
                "tags",
                "urlBase",
                "useSsl",
                "username"
            ],
            "inputProperties": {
                "addStopped": {
                    "type": "boolean",
                    "description": "Add stopped flag.\n"
                },
                "category": {
                    "type": "string",
                    "description": "Category.\n"
                },
                "directory": {
                    "type": "string",
                    "description": "Directory.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "itemPriority": {
                    "type": "integer",
                    "description": "Recent Movie priority. `0` VeryLow, `1` Low, `2` Normal, `3` High.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "urlBase": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DownloadClientRtorrent resources.\n",
                "properties": {
                    "addStopped": {
                        "type": "boolean",
                        "description": "Add stopped flag.\n"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:DownloadClients/DownloadClientRtorrentCategory:DownloadClientRtorrentCategory"
                        },
                        "description": "List of mapped categories.\n"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category.\n"
                    },
                    "directory": {
                        "type": "string",
                        "description": "Directory.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable flag.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "host.\n"
                    },
                    "itemPriority": {
                        "type": "integer",
                        "description": "Recent Movie priority. `0` VeryLow, `1` Low, `2` Normal, `3` High.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Download Client name.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password.\n",
                        "secret": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "urlBase": {
                        "type": "string",
                        "description": "Base URL.\n"
                    },
                    "useSsl": {
                        "type": "boolean",
                        "description": "Use SSL flag.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:DownloadClients/downloadClientSabnzbd:DownloadClientSabnzbd": {
            "description": "\u003c!-- subcategory:Download Clients --\u003eDownload Client Sabnzbd resource.\nFor more information refer to [Download Client](https://wiki.servarr.com/prowlarr/settings#download-clients) and [Sabnzbd](https://wiki.servarr.com/prowlarr/supported#sabnzbd).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.downloadclients.DownloadClientSabnzbd(\"example\", {\n    apiKey: \"test\",\n    enable: true,\n    host: \"sabnzbd\",\n    name: \"Example\",\n    port: 9091,\n    priority: 1,\n    urlBase: \"/sabnzbd/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.download_clients.DownloadClientSabnzbd(\"example\",\n    api_key=\"test\",\n    enable=True,\n    host=\"sabnzbd\",\n    name=\"Example\",\n    port=9091,\n    priority=1,\n    url_base=\"/sabnzbd/\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.DownloadClients.DownloadClientSabnzbd(\"example\", new()\n    {\n        ApiKey = \"test\",\n        Enable = true,\n        Host = \"sabnzbd\",\n        Name = \"Example\",\n        Port = 9091,\n        Priority = 1,\n        UrlBase = \"/sabnzbd/\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/DownloadClients\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := DownloadClients.NewDownloadClientSabnzbd(ctx, \"example\", \u0026DownloadClients.DownloadClientSabnzbdArgs{\n\t\t\tApiKey:   pulumi.String(\"test\"),\n\t\t\tEnable:   pulumi.Bool(true),\n\t\t\tHost:     pulumi.String(\"sabnzbd\"),\n\t\t\tName:     pulumi.String(\"Example\"),\n\t\t\tPort:     pulumi.Int(9091),\n\t\t\tPriority: pulumi.Int(1),\n\t\t\tUrlBase:  pulumi.String(\"/sabnzbd/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientSabnzbd;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientSabnzbdArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DownloadClientSabnzbd(\"example\", DownloadClientSabnzbdArgs.builder()        \n            .apiKey(\"test\")\n            .enable(true)\n            .host(\"sabnzbd\")\n            .name(\"Example\")\n            .port(9091)\n            .priority(1)\n            .urlBase(\"/sabnzbd/\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:DownloadClients:DownloadClientSabnzbd\n    properties:\n      apiKey: test\n      enable: true\n      host: sabnzbd\n      name: Example\n      port: 9091\n      priority: 1\n      urlBase: /sabnzbd/\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:DownloadClients/downloadClientSabnzbd:DownloadClientSabnzbd example 1\n```\n\n ",
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prowlarr:DownloadClients/DownloadClientSabnzbdCategory:DownloadClientSabnzbdCategory"
                    },
                    "description": "List of mapped categories.\n"
                },
                "category": {
                    "type": "string",
                    "description": "Category.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "itemPriority": {
                    "type": "integer",
                    "description": "Recent Movie priority. `-100` Default, `-2` Paused, `-1` Low, `0` Normal, `1` High, `2` Force.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "urlBase": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "required": [
                "apiKey",
                "categories",
                "category",
                "enable",
                "host",
                "itemPriority",
                "name",
                "password",
                "port",
                "priority",
                "tags",
                "urlBase",
                "useSsl",
                "username"
            ],
            "inputProperties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "category": {
                    "type": "string",
                    "description": "Category.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "itemPriority": {
                    "type": "integer",
                    "description": "Recent Movie priority. `-100` Default, `-2` Paused, `-1` Low, `0` Normal, `1` High, `2` Force.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "urlBase": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DownloadClientSabnzbd resources.\n",
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "description": "API key.\n",
                        "secret": true
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:DownloadClients/DownloadClientSabnzbdCategory:DownloadClientSabnzbdCategory"
                        },
                        "description": "List of mapped categories.\n"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable flag.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "host.\n"
                    },
                    "itemPriority": {
                        "type": "integer",
                        "description": "Recent Movie priority. `-100` Default, `-2` Paused, `-1` Low, `0` Normal, `1` High, `2` Force.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Download Client name.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password.\n",
                        "secret": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "urlBase": {
                        "type": "string",
                        "description": "Base URL.\n"
                    },
                    "useSsl": {
                        "type": "boolean",
                        "description": "Use SSL flag.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:DownloadClients/downloadClientTorrentBlackhole:DownloadClientTorrentBlackhole": {
            "description": "\u003c!-- subcategory:Download Clients --\u003eDownload Client Torrent Blackhole resource.\nFor more information refer to [Download Client](https://wiki.servarr.com/prowlarr/settings#download-clients) and [TorrentBlackhole](https://wiki.servarr.com/prowlarr/supported#torrentblackhole).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.downloadclients.DownloadClientTorrentBlackhole(\"example\", {\n    enable: true,\n    magnetFileExtension: \".magnet\",\n    name: \"Example\",\n    priority: 1,\n    torrentFolder: \"/torrent/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.download_clients.DownloadClientTorrentBlackhole(\"example\",\n    enable=True,\n    magnet_file_extension=\".magnet\",\n    name=\"Example\",\n    priority=1,\n    torrent_folder=\"/torrent/\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.DownloadClients.DownloadClientTorrentBlackhole(\"example\", new()\n    {\n        Enable = true,\n        MagnetFileExtension = \".magnet\",\n        Name = \"Example\",\n        Priority = 1,\n        TorrentFolder = \"/torrent/\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/DownloadClients\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := DownloadClients.NewDownloadClientTorrentBlackhole(ctx, \"example\", \u0026DownloadClients.DownloadClientTorrentBlackholeArgs{\n\t\t\tEnable:              pulumi.Bool(true),\n\t\t\tMagnetFileExtension: pulumi.String(\".magnet\"),\n\t\t\tName:                pulumi.String(\"Example\"),\n\t\t\tPriority:            pulumi.Int(1),\n\t\t\tTorrentFolder:       pulumi.String(\"/torrent/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientTorrentBlackhole;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientTorrentBlackholeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DownloadClientTorrentBlackhole(\"example\", DownloadClientTorrentBlackholeArgs.builder()        \n            .enable(true)\n            .magnetFileExtension(\".magnet\")\n            .name(\"Example\")\n            .priority(1)\n            .torrentFolder(\"/torrent/\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:DownloadClients:DownloadClientTorrentBlackhole\n    properties:\n      enable: true\n      magnetFileExtension: .magnet\n      name: Example\n      priority: 1\n      torrentFolder: /torrent/\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:DownloadClients/downloadClientTorrentBlackhole:DownloadClientTorrentBlackhole example 1\n```\n\n ",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prowlarr:DownloadClients/DownloadClientTorrentBlackholeCategory:DownloadClientTorrentBlackholeCategory"
                    },
                    "description": "List of mapped categories.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "magnetFileExtension": {
                    "type": "string",
                    "description": "Magnet file extension.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "saveMagnetFiles": {
                    "type": "boolean",
                    "description": "Save magnet files flag.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "torrentFolder": {
                    "type": "string",
                    "description": "Torrent folder.\n"
                }
            },
            "required": [
                "categories",
                "enable",
                "magnetFileExtension",
                "name",
                "priority",
                "saveMagnetFiles",
                "tags",
                "torrentFolder"
            ],
            "inputProperties": {
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "magnetFileExtension": {
                    "type": "string",
                    "description": "Magnet file extension.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "saveMagnetFiles": {
                    "type": "boolean",
                    "description": "Save magnet files flag.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "torrentFolder": {
                    "type": "string",
                    "description": "Torrent folder.\n"
                }
            },
            "requiredInputs": [
                "name",
                "torrentFolder"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DownloadClientTorrentBlackhole resources.\n",
                "properties": {
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:DownloadClients/DownloadClientTorrentBlackholeCategory:DownloadClientTorrentBlackholeCategory"
                        },
                        "description": "List of mapped categories.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable flag.\n"
                    },
                    "magnetFileExtension": {
                        "type": "string",
                        "description": "Magnet file extension.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Download Client name.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority.\n"
                    },
                    "saveMagnetFiles": {
                        "type": "boolean",
                        "description": "Save magnet files flag.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "torrentFolder": {
                        "type": "string",
                        "description": "Torrent folder.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:DownloadClients/downloadClientTorrentDownloadStation:DownloadClientTorrentDownloadStation": {
            "description": "\u003c!-- subcategory:Download Clients --\u003eDownload Client TorrentDownloadStation resource.\nFor more information refer to [Download Client](https://wiki.servarr.com/prowlarr/settings#download-clients) and [TorrentDownloadStation](https://wiki.servarr.com/prowlarr/supported#torrentdownloadstation).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.downloadclients.DownloadClientTorrentDownloadStation(\"example\", {\n    enable: true,\n    host: \"downloadstation\",\n    name: \"Example\",\n    port: 5000,\n    priority: 1,\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.download_clients.DownloadClientTorrentDownloadStation(\"example\",\n    enable=True,\n    host=\"downloadstation\",\n    name=\"Example\",\n    port=5000,\n    priority=1)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.DownloadClients.DownloadClientTorrentDownloadStation(\"example\", new()\n    {\n        Enable = true,\n        Host = \"downloadstation\",\n        Name = \"Example\",\n        Port = 5000,\n        Priority = 1,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/DownloadClients\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := DownloadClients.NewDownloadClientTorrentDownloadStation(ctx, \"example\", \u0026DownloadClients.DownloadClientTorrentDownloadStationArgs{\n\t\t\tEnable:   pulumi.Bool(true),\n\t\t\tHost:     pulumi.String(\"downloadstation\"),\n\t\t\tName:     pulumi.String(\"Example\"),\n\t\t\tPort:     pulumi.Int(5000),\n\t\t\tPriority: pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientTorrentDownloadStation;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientTorrentDownloadStationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DownloadClientTorrentDownloadStation(\"example\", DownloadClientTorrentDownloadStationArgs.builder()        \n            .enable(true)\n            .host(\"downloadstation\")\n            .name(\"Example\")\n            .port(5000)\n            .priority(1)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:DownloadClients:DownloadClientTorrentDownloadStation\n    properties:\n      enable: true\n      host: downloadstation\n      name: Example\n      port: 5000\n      priority: 1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:DownloadClients/downloadClientTorrentDownloadStation:DownloadClientTorrentDownloadStation example 1\n```\n\n ",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prowlarr:DownloadClients/DownloadClientTorrentDownloadStationCategory:DownloadClientTorrentDownloadStationCategory"
                    },
                    "description": "List of mapped categories.\n"
                },
                "category": {
                    "type": "string",
                    "description": "Category.\n"
                },
                "directory": {
                    "type": "string",
                    "description": "Directory.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "required": [
                "categories",
                "category",
                "directory",
                "enable",
                "host",
                "name",
                "password",
                "port",
                "priority",
                "tags",
                "useSsl",
                "username"
            ],
            "inputProperties": {
                "category": {
                    "type": "string",
                    "description": "Category.\n"
                },
                "directory": {
                    "type": "string",
                    "description": "Directory.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DownloadClientTorrentDownloadStation resources.\n",
                "properties": {
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:DownloadClients/DownloadClientTorrentDownloadStationCategory:DownloadClientTorrentDownloadStationCategory"
                        },
                        "description": "List of mapped categories.\n"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category.\n"
                    },
                    "directory": {
                        "type": "string",
                        "description": "Directory.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable flag.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "host.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Download Client name.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password.\n",
                        "secret": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "useSsl": {
                        "type": "boolean",
                        "description": "Use SSL flag.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:DownloadClients/downloadClientTransmission:DownloadClientTransmission": {
            "description": "\u003c!-- subcategory:Download Clients --\u003eDownload Client Transmission resource.\nFor more information refer to [Download Client](https://wiki.servarr.com/prowlarr/settings#download-clients) and [Transmission](https://wiki.servarr.com/prowlarr/supported#transmission).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.downloadclients.DownloadClientTransmission(\"example\", {\n    enable: true,\n    host: \"transmission\",\n    name: \"Example\",\n    port: 9091,\n    priority: 1,\n    urlBase: \"/transmission/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.download_clients.DownloadClientTransmission(\"example\",\n    enable=True,\n    host=\"transmission\",\n    name=\"Example\",\n    port=9091,\n    priority=1,\n    url_base=\"/transmission/\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.DownloadClients.DownloadClientTransmission(\"example\", new()\n    {\n        Enable = true,\n        Host = \"transmission\",\n        Name = \"Example\",\n        Port = 9091,\n        Priority = 1,\n        UrlBase = \"/transmission/\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/DownloadClients\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := DownloadClients.NewDownloadClientTransmission(ctx, \"example\", \u0026DownloadClients.DownloadClientTransmissionArgs{\n\t\t\tEnable:   pulumi.Bool(true),\n\t\t\tHost:     pulumi.String(\"transmission\"),\n\t\t\tName:     pulumi.String(\"Example\"),\n\t\t\tPort:     pulumi.Int(9091),\n\t\t\tPriority: pulumi.Int(1),\n\t\t\tUrlBase:  pulumi.String(\"/transmission/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientTransmission;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientTransmissionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DownloadClientTransmission(\"example\", DownloadClientTransmissionArgs.builder()        \n            .enable(true)\n            .host(\"transmission\")\n            .name(\"Example\")\n            .port(9091)\n            .priority(1)\n            .urlBase(\"/transmission/\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:DownloadClients:DownloadClientTransmission\n    properties:\n      enable: true\n      host: transmission\n      name: Example\n      port: 9091\n      priority: 1\n      urlBase: /transmission/\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:DownloadClients/downloadClientTransmission:DownloadClientTransmission example 1\n```\n\n ",
            "properties": {
                "addPaused": {
                    "type": "boolean",
                    "description": "Add paused flag.\n"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prowlarr:DownloadClients/DownloadClientTransmissionCategory:DownloadClientTransmissionCategory"
                    },
                    "description": "List of mapped categories.\n"
                },
                "category": {
                    "type": "string",
                    "description": "Category.\n"
                },
                "directory": {
                    "type": "string",
                    "description": "Directory.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "itemPriority": {
                    "type": "integer",
                    "description": "Priority. `0` Last, `1` First.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "urlBase": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "required": [
                "addPaused",
                "categories",
                "category",
                "directory",
                "enable",
                "host",
                "itemPriority",
                "name",
                "password",
                "port",
                "priority",
                "tags",
                "urlBase",
                "useSsl",
                "username"
            ],
            "inputProperties": {
                "addPaused": {
                    "type": "boolean",
                    "description": "Add paused flag.\n"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prowlarr:DownloadClients/DownloadClientTransmissionCategory:DownloadClientTransmissionCategory"
                    },
                    "description": "List of mapped categories.\n"
                },
                "category": {
                    "type": "string",
                    "description": "Category.\n"
                },
                "directory": {
                    "type": "string",
                    "description": "Directory.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "itemPriority": {
                    "type": "integer",
                    "description": "Priority. `0` Last, `1` First.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "urlBase": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DownloadClientTransmission resources.\n",
                "properties": {
                    "addPaused": {
                        "type": "boolean",
                        "description": "Add paused flag.\n"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:DownloadClients/DownloadClientTransmissionCategory:DownloadClientTransmissionCategory"
                        },
                        "description": "List of mapped categories.\n"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category.\n"
                    },
                    "directory": {
                        "type": "string",
                        "description": "Directory.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable flag.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "host.\n"
                    },
                    "itemPriority": {
                        "type": "integer",
                        "description": "Priority. `0` Last, `1` First.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Download Client name.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password.\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "urlBase": {
                        "type": "string",
                        "description": "Base URL.\n"
                    },
                    "useSsl": {
                        "type": "boolean",
                        "description": "Use SSL flag.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:DownloadClients/downloadClientUsenetBlackhole:DownloadClientUsenetBlackhole": {
            "description": "\u003c!-- subcategory:Download Clients --\u003eDownload Client Usenet Blackhole resource.\nFor more information refer to [Download Client](https://wiki.servarr.com/prowlarr/settings#download-clients) and [UsenetBlackhole](https://wiki.servarr.com/prowlarr/supported#usenetblackhole).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientUsenetBlackhole;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientUsenetBlackholeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DownloadClientUsenetBlackhole(\"example\", DownloadClientUsenetBlackholeArgs.builder()        \n            .enable(true)\n            .name(\"Example\")\n            .nzbFolder(\"/nzb/\")\n            .priority(1)\n            .watchFolder(\"/watch/\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:DownloadClients:DownloadClientUsenetBlackhole\n    properties:\n      enable: true\n      name: Example\n      nzbFolder: /nzb/\n      priority: 1\n      watchFolder: /watch/\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:DownloadClients/downloadClientUsenetBlackhole:DownloadClientUsenetBlackhole example 1\n```\n\n ",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prowlarr:DownloadClients/DownloadClientUsenetBlackholeCategory:DownloadClientUsenetBlackholeCategory"
                    },
                    "description": "List of mapped categories.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "nzbFolder": {
                    "type": "string",
                    "description": "Usenet folder.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "required": [
                "categories",
                "enable",
                "name",
                "nzbFolder",
                "priority",
                "tags"
            ],
            "inputProperties": {
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "nzbFolder": {
                    "type": "string",
                    "description": "Usenet folder.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "requiredInputs": [
                "name",
                "nzbFolder"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DownloadClientUsenetBlackhole resources.\n",
                "properties": {
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:DownloadClients/DownloadClientUsenetBlackholeCategory:DownloadClientUsenetBlackholeCategory"
                        },
                        "description": "List of mapped categories.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable flag.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Download Client name.\n"
                    },
                    "nzbFolder": {
                        "type": "string",
                        "description": "Usenet folder.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:DownloadClients/downloadClientUsenetDownloadStation:DownloadClientUsenetDownloadStation": {
            "description": "\u003c!-- subcategory:Download Clients --\u003eDownload Client UsenetDownloadStation resource.\nFor more information refer to [Download Client](https://wiki.servarr.com/prowlarr/settings#download-clients) and [UsenetDownloadStation](https://wiki.servarr.com/prowlarr/supported#usenetdownloadstation).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.downloadclients.DownloadClientUsenetDownloadStation(\"example\", {\n    enable: true,\n    host: \"downloadstation\",\n    name: \"Example\",\n    port: 5000,\n    priority: 1,\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.download_clients.DownloadClientUsenetDownloadStation(\"example\",\n    enable=True,\n    host=\"downloadstation\",\n    name=\"Example\",\n    port=5000,\n    priority=1)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.DownloadClients.DownloadClientUsenetDownloadStation(\"example\", new()\n    {\n        Enable = true,\n        Host = \"downloadstation\",\n        Name = \"Example\",\n        Port = 5000,\n        Priority = 1,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/DownloadClients\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := DownloadClients.NewDownloadClientUsenetDownloadStation(ctx, \"example\", \u0026DownloadClients.DownloadClientUsenetDownloadStationArgs{\n\t\t\tEnable:   pulumi.Bool(true),\n\t\t\tHost:     pulumi.String(\"downloadstation\"),\n\t\t\tName:     pulumi.String(\"Example\"),\n\t\t\tPort:     pulumi.Int(5000),\n\t\t\tPriority: pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientUsenetDownloadStation;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientUsenetDownloadStationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DownloadClientUsenetDownloadStation(\"example\", DownloadClientUsenetDownloadStationArgs.builder()        \n            .enable(true)\n            .host(\"downloadstation\")\n            .name(\"Example\")\n            .port(5000)\n            .priority(1)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:DownloadClients:DownloadClientUsenetDownloadStation\n    properties:\n      enable: true\n      host: downloadstation\n      name: Example\n      port: 5000\n      priority: 1\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:DownloadClients/downloadClientUsenetDownloadStation:DownloadClientUsenetDownloadStation example 1\n```\n\n ",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prowlarr:DownloadClients/DownloadClientUsenetDownloadStationCategory:DownloadClientUsenetDownloadStationCategory"
                    },
                    "description": "List of mapped categories.\n"
                },
                "category": {
                    "type": "string",
                    "description": "Category.\n"
                },
                "directory": {
                    "type": "string",
                    "description": "Directory.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "required": [
                "categories",
                "category",
                "directory",
                "enable",
                "host",
                "name",
                "password",
                "port",
                "priority",
                "tags",
                "useSsl",
                "username"
            ],
            "inputProperties": {
                "category": {
                    "type": "string",
                    "description": "Category.\n"
                },
                "directory": {
                    "type": "string",
                    "description": "Directory.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DownloadClientUsenetDownloadStation resources.\n",
                "properties": {
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:DownloadClients/DownloadClientUsenetDownloadStationCategory:DownloadClientUsenetDownloadStationCategory"
                        },
                        "description": "List of mapped categories.\n"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category.\n"
                    },
                    "directory": {
                        "type": "string",
                        "description": "Directory.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable flag.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "host.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Download Client name.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password.\n",
                        "secret": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "useSsl": {
                        "type": "boolean",
                        "description": "Use SSL flag.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:DownloadClients/downloadClientUtorrent:DownloadClientUtorrent": {
            "description": "\u003c!-- subcategory:Download Clients --\u003eDownload Client uTorrent resource.\nFor more information refer to [Download Client](https://wiki.servarr.com/prowlarr/settings#download-clients) and [uTorrent](https://wiki.servarr.com/prowlarr/supported#utorrent).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.downloadclients.DownloadClientUtorrent(\"example\", {\n    category: \"tv-prowlarr\",\n    enable: true,\n    host: \"utorrent\",\n    name: \"Example\",\n    port: 9091,\n    priority: 1,\n    urlBase: \"/utorrent/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.download_clients.DownloadClientUtorrent(\"example\",\n    category=\"tv-prowlarr\",\n    enable=True,\n    host=\"utorrent\",\n    name=\"Example\",\n    port=9091,\n    priority=1,\n    url_base=\"/utorrent/\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.DownloadClients.DownloadClientUtorrent(\"example\", new()\n    {\n        Category = \"tv-prowlarr\",\n        Enable = true,\n        Host = \"utorrent\",\n        Name = \"Example\",\n        Port = 9091,\n        Priority = 1,\n        UrlBase = \"/utorrent/\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/DownloadClients\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := DownloadClients.NewDownloadClientUtorrent(ctx, \"example\", \u0026DownloadClients.DownloadClientUtorrentArgs{\n\t\t\tCategory: pulumi.String(\"tv-prowlarr\"),\n\t\t\tEnable:   pulumi.Bool(true),\n\t\t\tHost:     pulumi.String(\"utorrent\"),\n\t\t\tName:     pulumi.String(\"Example\"),\n\t\t\tPort:     pulumi.Int(9091),\n\t\t\tPriority: pulumi.Int(1),\n\t\t\tUrlBase:  pulumi.String(\"/utorrent/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientUtorrent;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientUtorrentArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DownloadClientUtorrent(\"example\", DownloadClientUtorrentArgs.builder()        \n            .category(\"tv-prowlarr\")\n            .enable(true)\n            .host(\"utorrent\")\n            .name(\"Example\")\n            .port(9091)\n            .priority(1)\n            .urlBase(\"/utorrent/\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:DownloadClients:DownloadClientUtorrent\n    properties:\n      category: tv-prowlarr\n      enable: true\n      host: utorrent\n      name: Example\n      port: 9091\n      priority: 1\n      urlBase: /utorrent/\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:DownloadClients/downloadClientUtorrent:DownloadClientUtorrent example 1\n```\n\n ",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prowlarr:DownloadClients/DownloadClientUtorrentCategory:DownloadClientUtorrentCategory"
                    },
                    "description": "List of mapped categories.\n"
                },
                "category": {
                    "type": "string",
                    "description": "Category.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "intialState": {
                    "type": "integer",
                    "description": "Initial state, with Stop support. `0` Start, `1` ForceStart, `2` Pause, `3` Stop.\n"
                },
                "itemPriority": {
                    "type": "integer",
                    "description": "Older Movie priority. `0` Last, `1` First.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "urlBase": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "required": [
                "categories",
                "category",
                "enable",
                "host",
                "intialState",
                "itemPriority",
                "name",
                "password",
                "port",
                "priority",
                "tags",
                "urlBase",
                "useSsl",
                "username"
            ],
            "inputProperties": {
                "category": {
                    "type": "string",
                    "description": "Category.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "intialState": {
                    "type": "integer",
                    "description": "Initial state, with Stop support. `0` Start, `1` ForceStart, `2` Pause, `3` Stop.\n"
                },
                "itemPriority": {
                    "type": "integer",
                    "description": "Older Movie priority. `0` Last, `1` First.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "urlBase": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DownloadClientUtorrent resources.\n",
                "properties": {
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:DownloadClients/DownloadClientUtorrentCategory:DownloadClientUtorrentCategory"
                        },
                        "description": "List of mapped categories.\n"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable flag.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "host.\n"
                    },
                    "intialState": {
                        "type": "integer",
                        "description": "Initial state, with Stop support. `0` Start, `1` ForceStart, `2` Pause, `3` Stop.\n"
                    },
                    "itemPriority": {
                        "type": "integer",
                        "description": "Older Movie priority. `0` Last, `1` First.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Download Client name.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password.\n",
                        "secret": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "urlBase": {
                        "type": "string",
                        "description": "Base URL.\n"
                    },
                    "useSsl": {
                        "type": "boolean",
                        "description": "Use SSL flag.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:DownloadClients/downloadClientVuze:DownloadClientVuze": {
            "description": "\u003c!-- subcategory:Download Clients --\u003eDownload Client Vuze resource.\nFor more information refer to [Download Client](https://wiki.servarr.com/prowlarr/settings#download-clients) and [Vuze](https://wiki.servarr.com/prowlarr/supported#vuze).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.downloadclients.DownloadClientVuze(\"example\", {\n    enable: true,\n    host: \"vuze\",\n    name: \"Example\",\n    port: 9091,\n    priority: 1,\n    urlBase: \"/vuze/\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.download_clients.DownloadClientVuze(\"example\",\n    enable=True,\n    host=\"vuze\",\n    name=\"Example\",\n    port=9091,\n    priority=1,\n    url_base=\"/vuze/\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.DownloadClients.DownloadClientVuze(\"example\", new()\n    {\n        Enable = true,\n        Host = \"vuze\",\n        Name = \"Example\",\n        Port = 9091,\n        Priority = 1,\n        UrlBase = \"/vuze/\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/DownloadClients\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := DownloadClients.NewDownloadClientVuze(ctx, \"example\", \u0026DownloadClients.DownloadClientVuzeArgs{\n\t\t\tEnable:   pulumi.Bool(true),\n\t\t\tHost:     pulumi.String(\"vuze\"),\n\t\t\tName:     pulumi.String(\"Example\"),\n\t\t\tPort:     pulumi.Int(9091),\n\t\t\tPriority: pulumi.Int(1),\n\t\t\tUrlBase:  pulumi.String(\"/vuze/\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientVuze;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientVuzeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new DownloadClientVuze(\"example\", DownloadClientVuzeArgs.builder()        \n            .enable(true)\n            .host(\"vuze\")\n            .name(\"Example\")\n            .port(9091)\n            .priority(1)\n            .urlBase(\"/vuze/\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:DownloadClients:DownloadClientVuze\n    properties:\n      enable: true\n      host: vuze\n      name: Example\n      port: 9091\n      priority: 1\n      urlBase: /vuze/\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:DownloadClients/downloadClientVuze:DownloadClientVuze example 1\n```\n\n ",
            "properties": {
                "addPaused": {
                    "type": "boolean",
                    "description": "Add paused flag.\n"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prowlarr:DownloadClients/DownloadClientVuzeCategory:DownloadClientVuzeCategory"
                    },
                    "description": "List of mapped categories.\n"
                },
                "category": {
                    "type": "string",
                    "description": "Category.\n"
                },
                "directory": {
                    "type": "string",
                    "description": "Directory.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "itemPriority": {
                    "type": "integer",
                    "description": "Older Movie priority. `0` Last, `1` First.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "urlBase": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "required": [
                "addPaused",
                "categories",
                "category",
                "directory",
                "enable",
                "host",
                "itemPriority",
                "name",
                "password",
                "port",
                "priority",
                "tags",
                "urlBase",
                "useSsl",
                "username"
            ],
            "inputProperties": {
                "addPaused": {
                    "type": "boolean",
                    "description": "Add paused flag.\n"
                },
                "category": {
                    "type": "string",
                    "description": "Category.\n"
                },
                "directory": {
                    "type": "string",
                    "description": "Directory.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "itemPriority": {
                    "type": "integer",
                    "description": "Older Movie priority. `0` Last, `1` First.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Download Client name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "urlBase": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DownloadClientVuze resources.\n",
                "properties": {
                    "addPaused": {
                        "type": "boolean",
                        "description": "Add paused flag.\n"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:DownloadClients/DownloadClientVuzeCategory:DownloadClientVuzeCategory"
                        },
                        "description": "List of mapped categories.\n"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category.\n"
                    },
                    "directory": {
                        "type": "string",
                        "description": "Directory.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable flag.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "host.\n"
                    },
                    "itemPriority": {
                        "type": "integer",
                        "description": "Older Movie priority. `0` Last, `1` First.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Download Client name.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password.\n",
                        "secret": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "urlBase": {
                        "type": "string",
                        "description": "Base URL.\n"
                    },
                    "useSsl": {
                        "type": "boolean",
                        "description": "Use SSL flag.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:IndexerProxies/indexerProxy:IndexerProxy": {
            "description": "\u003c!-- subcategory:Indexer Proxies --\u003eGeneric Indexer Proxy resource. When possible use a specific resource instead.\nFor more information refer to [Indexer Proxy](https://wiki.servarr.com/prowlarr/settings#indexer-proxies).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.indexerproxies.IndexerProxy(\"example\", {\n    configContract: \"FlareSolverrSettings\",\n    host: \"http://localhost:8191/\",\n    implementation: \"FlareSolverr\",\n    name: \"Example\",\n    requestTimeout: 60,\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.indexer_proxies.IndexerProxy(\"example\",\n    config_contract=\"FlareSolverrSettings\",\n    host=\"http://localhost:8191/\",\n    implementation=\"FlareSolverr\",\n    name=\"Example\",\n    request_timeout=60)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.IndexerProxies.IndexerProxy(\"example\", new()\n    {\n        ConfigContract = \"FlareSolverrSettings\",\n        Host = \"http://localhost:8191/\",\n        Implementation = \"FlareSolverr\",\n        Name = \"Example\",\n        RequestTimeout = 60,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/IndexerProxies\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := IndexerProxies.NewIndexerProxy(ctx, \"example\", \u0026IndexerProxies.IndexerProxyArgs{\n\t\t\tConfigContract: pulumi.String(\"FlareSolverrSettings\"),\n\t\t\tHost:           pulumi.String(\"http://localhost:8191/\"),\n\t\t\tImplementation: pulumi.String(\"FlareSolverr\"),\n\t\t\tName:           pulumi.String(\"Example\"),\n\t\t\tRequestTimeout: pulumi.Int(60),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.IndexerProxies.IndexerProxy;\nimport com.pulumi.prowlarr.IndexerProxies.IndexerProxyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new IndexerProxy(\"example\", IndexerProxyArgs.builder()        \n            .configContract(\"FlareSolverrSettings\")\n            .host(\"http://localhost:8191/\")\n            .implementation(\"FlareSolverr\")\n            .name(\"Example\")\n            .requestTimeout(60)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:IndexerProxies:IndexerProxy\n    properties:\n      configContract: FlareSolverrSettings\n      host: http://localhost:8191/\n      implementation: FlareSolverr\n      name: Example\n      requestTimeout: 60\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:IndexerProxies/indexerProxy:IndexerProxy example 1\n```\n\n ",
            "properties": {
                "configContract": {
                    "type": "string",
                    "description": "IndexerProxy configuration template.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "implementation": {
                    "type": "string",
                    "description": "IndexerProxy implementation name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indexer Proxy name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "requestTimeout": {
                    "type": "integer",
                    "description": "Request timeout.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "required": [
                "configContract",
                "host",
                "implementation",
                "name",
                "password",
                "port",
                "requestTimeout",
                "tags",
                "username"
            ],
            "inputProperties": {
                "configContract": {
                    "type": "string",
                    "description": "IndexerProxy configuration template.\n"
                },
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "implementation": {
                    "type": "string",
                    "description": "IndexerProxy implementation name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indexer Proxy name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "requestTimeout": {
                    "type": "integer",
                    "description": "Request timeout.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "requiredInputs": [
                "configContract",
                "implementation",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IndexerProxy resources.\n",
                "properties": {
                    "configContract": {
                        "type": "string",
                        "description": "IndexerProxy configuration template.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "host.\n"
                    },
                    "implementation": {
                        "type": "string",
                        "description": "IndexerProxy implementation name.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Indexer Proxy name.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password.\n",
                        "secret": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port.\n"
                    },
                    "requestTimeout": {
                        "type": "integer",
                        "description": "Request timeout.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:IndexerProxies/indexerProxyFlaresolverr:IndexerProxyFlaresolverr": {
            "description": "\u003c!-- subcategory:Indexer Proxies --\u003eIndexer Proxy Flaresolverr resource.\nFor more information refer to [Indexer Proxy](https://wiki.servarr.com/prowlarr/settings#indexer-proxies) and [Flaresolverr](https://wiki.servarr.com/prowlarr/supported#flaresolverr).\n",
            "properties": {
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indexer Proxy name.\n"
                },
                "requestTimeout": {
                    "type": "integer",
                    "description": "Request timeout.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "required": [
                "host",
                "name",
                "requestTimeout",
                "tags"
            ],
            "inputProperties": {
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indexer Proxy name.\n"
                },
                "requestTimeout": {
                    "type": "integer",
                    "description": "Request timeout.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "requiredInputs": [
                "host",
                "name",
                "requestTimeout"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IndexerProxyFlaresolverr resources.\n",
                "properties": {
                    "host": {
                        "type": "string",
                        "description": "host.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Indexer Proxy name.\n"
                    },
                    "requestTimeout": {
                        "type": "integer",
                        "description": "Request timeout.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:IndexerProxies/indexerProxyHttp:IndexerProxyHttp": {
            "description": "\u003c!-- subcategory:Indexer Proxies --\u003eIndexer Proxy HTTP resource.\nFor more information refer to [Indexer Proxy](https://wiki.servarr.com/prowlarr/settings#indexer-proxies) and [HTTP](https://wiki.servarr.com/prowlarr/supported#http).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.indexerproxies.IndexerProxyHttp(\"example\", {\n    host: \"localhost\",\n    name: \"Example\",\n    password: \"Pass\",\n    port: 8080,\n    username: \"User\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.indexer_proxies.IndexerProxyHttp(\"example\",\n    host=\"localhost\",\n    name=\"Example\",\n    password=\"Pass\",\n    port=8080,\n    username=\"User\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.IndexerProxies.IndexerProxyHttp(\"example\", new()\n    {\n        Host = \"localhost\",\n        Name = \"Example\",\n        Password = \"Pass\",\n        Port = 8080,\n        Username = \"User\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/IndexerProxies\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := IndexerProxies.NewIndexerProxyHttp(ctx, \"example\", \u0026IndexerProxies.IndexerProxyHttpArgs{\n\t\t\tHost:     pulumi.String(\"localhost\"),\n\t\t\tName:     pulumi.String(\"Example\"),\n\t\t\tPassword: pulumi.String(\"Pass\"),\n\t\t\tPort:     pulumi.Int(8080),\n\t\t\tUsername: pulumi.String(\"User\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.IndexerProxies.IndexerProxyHttp;\nimport com.pulumi.prowlarr.IndexerProxies.IndexerProxyHttpArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new IndexerProxyHttp(\"example\", IndexerProxyHttpArgs.builder()        \n            .host(\"localhost\")\n            .name(\"Example\")\n            .password(\"Pass\")\n            .port(8080)\n            .username(\"User\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:IndexerProxies:IndexerProxyHttp\n    properties:\n      host: localhost\n      name: Example\n      password: Pass\n      port: 8080\n      username: User\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:IndexerProxies/indexerProxyHttp:IndexerProxyHttp example 1\n```\n\n ",
            "properties": {
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indexer Proxy name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "required": [
                "host",
                "name",
                "password",
                "port",
                "tags",
                "username"
            ],
            "inputProperties": {
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indexer Proxy name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "requiredInputs": [
                "host",
                "name",
                "password",
                "port",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IndexerProxyHttp resources.\n",
                "properties": {
                    "host": {
                        "type": "string",
                        "description": "host.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Indexer Proxy name.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password.\n",
                        "secret": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:IndexerProxies/indexerProxySocks4:IndexerProxySocks4": {
            "description": "\u003c!-- subcategory:Indexer Proxies --\u003eIndexer Proxy Socks4 resource.\nFor more information refer to [Indexer Proxy](https://wiki.servarr.com/prowlarr/settings#indexer-proxies) and [Socks4](https://wiki.servarr.com/prowlarr/supported#socks4).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.indexerproxies.IndexerProxySocks4(\"example\", {\n    host: \"localhost\",\n    name: \"Example\",\n    password: \"Pass\",\n    port: 8080,\n    username: \"User\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.indexer_proxies.IndexerProxySocks4(\"example\",\n    host=\"localhost\",\n    name=\"Example\",\n    password=\"Pass\",\n    port=8080,\n    username=\"User\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.IndexerProxies.IndexerProxySocks4(\"example\", new()\n    {\n        Host = \"localhost\",\n        Name = \"Example\",\n        Password = \"Pass\",\n        Port = 8080,\n        Username = \"User\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/IndexerProxies\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := IndexerProxies.NewIndexerProxySocks4(ctx, \"example\", \u0026IndexerProxies.IndexerProxySocks4Args{\n\t\t\tHost:     pulumi.String(\"localhost\"),\n\t\t\tName:     pulumi.String(\"Example\"),\n\t\t\tPassword: pulumi.String(\"Pass\"),\n\t\t\tPort:     pulumi.Int(8080),\n\t\t\tUsername: pulumi.String(\"User\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.IndexerProxies.IndexerProxySocks4;\nimport com.pulumi.prowlarr.IndexerProxies.IndexerProxySocks4Args;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new IndexerProxySocks4(\"example\", IndexerProxySocks4Args.builder()        \n            .host(\"localhost\")\n            .name(\"Example\")\n            .password(\"Pass\")\n            .port(8080)\n            .username(\"User\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:IndexerProxies:IndexerProxySocks4\n    properties:\n      host: localhost\n      name: Example\n      password: Pass\n      port: 8080\n      username: User\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:IndexerProxies/indexerProxySocks4:IndexerProxySocks4 example 1\n```\n\n ",
            "properties": {
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indexer Proxy name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "required": [
                "host",
                "name",
                "password",
                "port",
                "tags",
                "username"
            ],
            "inputProperties": {
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indexer Proxy name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "requiredInputs": [
                "host",
                "name",
                "password",
                "port",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IndexerProxySocks4 resources.\n",
                "properties": {
                    "host": {
                        "type": "string",
                        "description": "host.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Indexer Proxy name.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password.\n",
                        "secret": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:IndexerProxies/indexerProxySocks5:IndexerProxySocks5": {
            "description": "\u003c!-- subcategory:Indexer Proxies --\u003eIndexer Proxy Socks5 resource.\nFor more information refer to [Indexer Proxy](https://wiki.servarr.com/prowlarr/settings#indexer-proxies) and [Socks5](https://wiki.servarr.com/prowlarr/supported#socks5).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.indexerproxies.IndexerProxySocks5(\"example\", {\n    host: \"localhost\",\n    name: \"Example\",\n    password: \"Pass\",\n    port: 8080,\n    username: \"User\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.indexer_proxies.IndexerProxySocks5(\"example\",\n    host=\"localhost\",\n    name=\"Example\",\n    password=\"Pass\",\n    port=8080,\n    username=\"User\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.IndexerProxies.IndexerProxySocks5(\"example\", new()\n    {\n        Host = \"localhost\",\n        Name = \"Example\",\n        Password = \"Pass\",\n        Port = 8080,\n        Username = \"User\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/IndexerProxies\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := IndexerProxies.NewIndexerProxySocks5(ctx, \"example\", \u0026IndexerProxies.IndexerProxySocks5Args{\n\t\t\tHost:     pulumi.String(\"localhost\"),\n\t\t\tName:     pulumi.String(\"Example\"),\n\t\t\tPassword: pulumi.String(\"Pass\"),\n\t\t\tPort:     pulumi.Int(8080),\n\t\t\tUsername: pulumi.String(\"User\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.IndexerProxies.IndexerProxySocks5;\nimport com.pulumi.prowlarr.IndexerProxies.IndexerProxySocks5Args;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new IndexerProxySocks5(\"example\", IndexerProxySocks5Args.builder()        \n            .host(\"localhost\")\n            .name(\"Example\")\n            .password(\"Pass\")\n            .port(8080)\n            .username(\"User\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:IndexerProxies:IndexerProxySocks5\n    properties:\n      host: localhost\n      name: Example\n      password: Pass\n      port: 8080\n      username: User\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:IndexerProxies/indexerProxySocks5:IndexerProxySocks5 example 1\n```\n\n ",
            "properties": {
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indexer Proxy name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "required": [
                "host",
                "name",
                "password",
                "port",
                "tags",
                "username"
            ],
            "inputProperties": {
                "host": {
                    "type": "string",
                    "description": "host.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indexer Proxy name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "requiredInputs": [
                "host",
                "name",
                "password",
                "port",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IndexerProxySocks5 resources.\n",
                "properties": {
                    "host": {
                        "type": "string",
                        "description": "host.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Indexer Proxy name.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password.\n",
                        "secret": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Indexers/indexer:Indexer": {
            "description": "\u003c!-- subcategory:Indexers --\u003eGeneric Indexer resource.\nFor more information refer to [Indexer](https://wiki.servarr.com/prowlarr/indexers) documentation.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Indexers.Indexer;\nimport com.pulumi.prowlarr.Indexers.IndexerArgs;\nimport com.pulumi.prowlarr.Indexers.inputs.IndexerFieldArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Indexer(\"example\", IndexerArgs.builder()        \n            .configContract(\"HDBitsSettings\")\n            .enable(true)\n            .fields(            \n                IndexerFieldArgs.builder()\n                    .name(\"username\")\n                    .text_value(\"test\")\n                    .build(),\n                IndexerFieldArgs.builder()\n                    .name(\"apiKey\")\n                    .text_value(\"test\")\n                    .build(),\n                IndexerFieldArgs.builder()\n                    .name(\"codecs\")\n                    .set_value(                    \n                        1,\n                        5)\n                    .build(),\n                IndexerFieldArgs.builder()\n                    .name(\"mediums\")\n                    .set_value(                    \n                        1,\n                        3)\n                    .build(),\n                IndexerFieldArgs.builder()\n                    .name(\"torrentBaseSettings.seedRatio\")\n                    .number_value(0.5)\n                    .build(),\n                IndexerFieldArgs.builder()\n                    .name(\"torrentBaseSettings.seedTime\")\n                    .number_value(5)\n                    .build())\n            .implementation(\"HDBits\")\n            .name(\"HDBits\")\n            .protocol(\"torrent\")\n            .tags(            \n                1,\n                2,\n                5)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Indexers:Indexer\n    properties:\n      configContract: HDBitsSettings\n      enable: true\n      fields:\n        - name: username\n          text_value: test\n        - name: apiKey\n          text_value: test\n        - name: codecs\n          set_value:\n            - 1\n            - 5\n        - name: mediums\n          set_value:\n            - 1\n            - 3\n        - name: torrentBaseSettings.seedRatio\n          number_value: 0.5\n        - name: torrentBaseSettings.seedTime\n          number_value: 5\n      implementation: HDBits\n      name: HDBits\n      protocol: torrent\n      tags:\n        - 1\n        - 2\n        - 5\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Indexers/indexer:Indexer example 1\n```\n\n ",
            "properties": {
                "appProfileId": {
                    "type": "integer",
                    "description": "Application profile ID.\n"
                },
                "configContract": {
                    "type": "string",
                    "description": "Indexer configuration template.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prowlarr:Indexers/IndexerField:IndexerField"
                    },
                    "description": "Set of configuration fields.\n"
                },
                "implementation": {
                    "type": "string",
                    "description": "Indexer implementation name.\n"
                },
                "language": {
                    "type": "string",
                    "description": "Language.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indexer name.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "privacy": {
                    "type": "string",
                    "description": "Privacy.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol. Valid values are 'usenet' and 'torrent'.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "required": [
                "appProfileId",
                "configContract",
                "enable",
                "fields",
                "implementation",
                "language",
                "name",
                "priority",
                "privacy",
                "protocol",
                "tags"
            ],
            "inputProperties": {
                "appProfileId": {
                    "type": "integer",
                    "description": "Application profile ID.\n"
                },
                "configContract": {
                    "type": "string",
                    "description": "Indexer configuration template.\n"
                },
                "enable": {
                    "type": "boolean",
                    "description": "Enable flag.\n"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/prowlarr:Indexers/IndexerField:IndexerField"
                    },
                    "description": "Set of configuration fields.\n"
                },
                "implementation": {
                    "type": "string",
                    "description": "Indexer implementation name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Indexer name.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol. Valid values are 'usenet' and 'torrent'.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "requiredInputs": [
                "configContract",
                "fields",
                "implementation",
                "name",
                "protocol"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Indexer resources.\n",
                "properties": {
                    "appProfileId": {
                        "type": "integer",
                        "description": "Application profile ID.\n"
                    },
                    "configContract": {
                        "type": "string",
                        "description": "Indexer configuration template.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable flag.\n"
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:Indexers/IndexerField:IndexerField"
                        },
                        "description": "Set of configuration fields.\n"
                    },
                    "implementation": {
                        "type": "string",
                        "description": "Indexer implementation name.\n"
                    },
                    "language": {
                        "type": "string",
                        "description": "Language.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Indexer name.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority.\n"
                    },
                    "privacy": {
                        "type": "string",
                        "description": "Privacy.\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "Protocol. Valid values are 'usenet' and 'torrent'.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Notifications/notification:Notification": {
            "description": "\u003c!-- subcategory:Notifications --\u003eGeneric Notification resource. When possible use a specific resource instead.\nFor more information refer to [Notification](https://wiki.servarr.com/prowlarr/settings#connect).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.notifications.Notification(\"example\", {\n    configContract: \"CustomScriptSettings\",\n    implementation: \"CustomScript\",\n    includeHealthWarnings: false,\n    name: \"Example\",\n    onApplicationUpdate: false,\n    onHealthIssue: false,\n    path: \"/scripts/prowlarr.sh\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.notifications.Notification(\"example\",\n    config_contract=\"CustomScriptSettings\",\n    implementation=\"CustomScript\",\n    include_health_warnings=False,\n    name=\"Example\",\n    on_application_update=False,\n    on_health_issue=False,\n    path=\"/scripts/prowlarr.sh\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Notifications.Notification(\"example\", new()\n    {\n        ConfigContract = \"CustomScriptSettings\",\n        Implementation = \"CustomScript\",\n        IncludeHealthWarnings = false,\n        Name = \"Example\",\n        OnApplicationUpdate = false,\n        OnHealthIssue = false,\n        Path = \"/scripts/prowlarr.sh\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Notifications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Notifications.NewNotification(ctx, \"example\", \u0026Notifications.NotificationArgs{\n\t\t\tConfigContract:        pulumi.String(\"CustomScriptSettings\"),\n\t\t\tImplementation:        pulumi.String(\"CustomScript\"),\n\t\t\tIncludeHealthWarnings: pulumi.Bool(false),\n\t\t\tName:                  pulumi.String(\"Example\"),\n\t\t\tOnApplicationUpdate:   pulumi.Bool(false),\n\t\t\tOnHealthIssue:         pulumi.Bool(false),\n\t\t\tPath:                  pulumi.String(\"/scripts/prowlarr.sh\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Notifications.Notification;\nimport com.pulumi.prowlarr.Notifications.NotificationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Notification(\"example\", NotificationArgs.builder()        \n            .configContract(\"CustomScriptSettings\")\n            .implementation(\"CustomScript\")\n            .includeHealthWarnings(false)\n            .name(\"Example\")\n            .onApplicationUpdate(false)\n            .onHealthIssue(false)\n            .path(\"/scripts/prowlarr.sh\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Notifications:Notification\n    properties:\n      configContract: CustomScriptSettings\n      implementation: CustomScript\n      includeHealthWarnings: false\n      name: Example\n      onApplicationUpdate: false\n      onHealthIssue: false\n      path: /scripts/prowlarr.sh\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Notifications/notification:Notification example 1\n```\n\n ",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Access token.\n"
                },
                "accessTokenSecret": {
                    "type": "string",
                    "description": "Access token secret.\n"
                },
                "alwaysUpdate": {
                    "type": "boolean",
                    "description": "Always update flag.\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n"
                },
                "appToken": {
                    "type": "string",
                    "description": "App token.\n"
                },
                "arguments": {
                    "type": "string",
                    "description": "Arguments.\n"
                },
                "authPassword": {
                    "type": "string",
                    "description": "Auth password.\n",
                    "secret": true
                },
                "authToken": {
                    "type": "string",
                    "description": "Auth token.\n"
                },
                "authUser": {
                    "type": "string",
                    "description": "Auth user.\n"
                },
                "authUsername": {
                    "type": "string",
                    "description": "Auth username.\n"
                },
                "author": {
                    "type": "string",
                    "description": "Author.\n"
                },
                "avatar": {
                    "type": "string",
                    "description": "Avatar.\n"
                },
                "baseUrl": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "bccs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Bcc.\n"
                },
                "botToken": {
                    "type": "string",
                    "description": "Bot token.\n"
                },
                "ccs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Cc.\n"
                },
                "channel": {
                    "type": "string",
                    "description": "Channel.\n"
                },
                "channelTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Channel tags.\n"
                },
                "chatId": {
                    "type": "string",
                    "description": "Chat ID.\n"
                },
                "cleanLibrary": {
                    "type": "boolean",
                    "description": "Clean library flag.\n"
                },
                "clickUrl": {
                    "type": "string",
                    "description": "Click URL.\n"
                },
                "configContract": {
                    "type": "string",
                    "description": "Notification configuration template.\n"
                },
                "configurationKey": {
                    "type": "string",
                    "description": "Configuration key.\n",
                    "secret": true
                },
                "consumerKey": {
                    "type": "string",
                    "description": "Consumer key.\n"
                },
                "consumerSecret": {
                    "type": "string",
                    "description": "Consumer secret.\n"
                },
                "deviceIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Device IDs.\n"
                },
                "deviceNames": {
                    "type": "string",
                    "description": "Device names.\n"
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Devices.\n"
                },
                "directMessage": {
                    "type": "boolean",
                    "description": "Direct message flag.\n"
                },
                "displayTime": {
                    "type": "integer",
                    "description": "Display time.\n"
                },
                "event": {
                    "type": "string",
                    "description": "Event.\n"
                },
                "expire": {
                    "type": "integer",
                    "description": "Expire.\n"
                },
                "expires": {
                    "type": "string",
                    "description": "Expires.\n"
                },
                "fieldTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Devices.\n"
                },
                "from": {
                    "type": "string",
                    "description": "From.\n"
                },
                "grabFields": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Grab fields. `0` Overview, `1` Rating, `2` Genres, `3` Quality, `4` Group, `5` Size, `6` Links, `7` Release, `8` Poster, `9` Fanart.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host.\n"
                },
                "icon": {
                    "type": "string",
                    "description": "Icon.\n"
                },
                "implementation": {
                    "type": "string",
                    "description": "Notification implementation name.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "instanceName": {
                    "type": "string",
                    "description": "Instance name.\n"
                },
                "key": {
                    "type": "string",
                    "description": "Key.\n"
                },
                "mapFrom": {
                    "type": "string",
                    "description": "Map From.\n"
                },
                "mapTo": {
                    "type": "string",
                    "description": "Map To.\n"
                },
                "mention": {
                    "type": "string",
                    "description": "Mention.\n"
                },
                "method": {
                    "type": "integer",
                    "description": "Method. `1` POST, `2` PUT.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Notification name.\n"
                },
                "notificationType": {
                    "type": "integer",
                    "description": "Notification type. `0` Info, `1` Success, `2` Warning, `3` Failure.\n"
                },
                "notify": {
                    "type": "boolean",
                    "description": "Notify flag.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "password": {
                    "type": "string",
                    "description": "password.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "receiverId": {
                    "type": "string",
                    "description": "Receiver ID.\n"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Recipients.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "Refresh token.\n"
                },
                "requireEncryption": {
                    "type": "boolean",
                    "description": "Require encryption flag.\n"
                },
                "retry": {
                    "type": "integer",
                    "description": "Retry.\n"
                },
                "sendSilently": {
                    "type": "boolean",
                    "description": "Add silently flag.\n"
                },
                "senderDomain": {
                    "type": "string",
                    "description": "Sender domain.\n"
                },
                "senderId": {
                    "type": "string",
                    "description": "Sender ID.\n"
                },
                "senderNumber": {
                    "type": "string",
                    "description": "Sender Number.\n",
                    "secret": true
                },
                "server": {
                    "type": "string",
                    "description": "server.\n"
                },
                "serverUrl": {
                    "type": "string",
                    "description": "Server url.\n"
                },
                "signIn": {
                    "type": "string",
                    "description": "Sign in.\n"
                },
                "sound": {
                    "type": "string",
                    "description": "Sound.\n"
                },
                "statelessUrls": {
                    "type": "string",
                    "description": "Comma separated stateless URLs.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "token": {
                    "type": "string",
                    "description": "Token.\n"
                },
                "topicId": {
                    "type": "string",
                    "description": "Topic ID.\n"
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Devices.\n"
                },
                "tos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "To.\n"
                },
                "updateLibrary": {
                    "type": "boolean",
                    "description": "Update library flag.\n"
                },
                "url": {
                    "type": "string",
                    "description": "URL.\n"
                },
                "useEuEndpoint": {
                    "type": "boolean",
                    "description": "Use EU endpoint flag.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "userKey": {
                    "type": "string",
                    "description": "User key.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                },
                "webHookUrl": {
                    "type": "string",
                    "description": "Web hook url.\n"
                }
            },
            "required": [
                "accessToken",
                "accessTokenSecret",
                "alwaysUpdate",
                "apiKey",
                "appToken",
                "arguments",
                "authPassword",
                "authToken",
                "authUser",
                "authUsername",
                "author",
                "avatar",
                "baseUrl",
                "bccs",
                "botToken",
                "ccs",
                "channel",
                "channelTags",
                "chatId",
                "cleanLibrary",
                "clickUrl",
                "configContract",
                "configurationKey",
                "consumerKey",
                "consumerSecret",
                "deviceIds",
                "deviceNames",
                "devices",
                "directMessage",
                "displayTime",
                "event",
                "expire",
                "expires",
                "fieldTags",
                "from",
                "grabFields",
                "host",
                "icon",
                "implementation",
                "includeHealthWarnings",
                "includeManualGrabs",
                "instanceName",
                "key",
                "mapFrom",
                "mapTo",
                "mention",
                "method",
                "name",
                "notificationType",
                "notify",
                "onApplicationUpdate",
                "onGrab",
                "onHealthIssue",
                "onHealthRestored",
                "password",
                "path",
                "port",
                "priority",
                "receiverId",
                "recipients",
                "refreshToken",
                "requireEncryption",
                "retry",
                "sendSilently",
                "senderDomain",
                "senderId",
                "senderNumber",
                "server",
                "serverUrl",
                "signIn",
                "sound",
                "statelessUrls",
                "tags",
                "tos",
                "token",
                "topicId",
                "topics",
                "updateLibrary",
                "url",
                "useEuEndpoint",
                "useSsl",
                "userKey",
                "username",
                "webHookUrl"
            ],
            "inputProperties": {
                "accessToken": {
                    "type": "string",
                    "description": "Access token.\n"
                },
                "accessTokenSecret": {
                    "type": "string",
                    "description": "Access token secret.\n"
                },
                "alwaysUpdate": {
                    "type": "boolean",
                    "description": "Always update flag.\n"
                },
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n"
                },
                "appToken": {
                    "type": "string",
                    "description": "App token.\n"
                },
                "arguments": {
                    "type": "string",
                    "description": "Arguments.\n"
                },
                "authPassword": {
                    "type": "string",
                    "description": "Auth password.\n",
                    "secret": true
                },
                "authToken": {
                    "type": "string",
                    "description": "Auth token.\n"
                },
                "authUser": {
                    "type": "string",
                    "description": "Auth user.\n"
                },
                "authUsername": {
                    "type": "string",
                    "description": "Auth username.\n"
                },
                "author": {
                    "type": "string",
                    "description": "Author.\n"
                },
                "avatar": {
                    "type": "string",
                    "description": "Avatar.\n"
                },
                "baseUrl": {
                    "type": "string",
                    "description": "Base URL.\n"
                },
                "bccs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Bcc.\n"
                },
                "botToken": {
                    "type": "string",
                    "description": "Bot token.\n"
                },
                "ccs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Cc.\n"
                },
                "channel": {
                    "type": "string",
                    "description": "Channel.\n"
                },
                "channelTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Channel tags.\n"
                },
                "chatId": {
                    "type": "string",
                    "description": "Chat ID.\n"
                },
                "cleanLibrary": {
                    "type": "boolean",
                    "description": "Clean library flag.\n"
                },
                "clickUrl": {
                    "type": "string",
                    "description": "Click URL.\n"
                },
                "configContract": {
                    "type": "string",
                    "description": "Notification configuration template.\n"
                },
                "configurationKey": {
                    "type": "string",
                    "description": "Configuration key.\n",
                    "secret": true
                },
                "consumerKey": {
                    "type": "string",
                    "description": "Consumer key.\n"
                },
                "consumerSecret": {
                    "type": "string",
                    "description": "Consumer secret.\n"
                },
                "deviceIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Device IDs.\n"
                },
                "deviceNames": {
                    "type": "string",
                    "description": "Device names.\n"
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Devices.\n"
                },
                "directMessage": {
                    "type": "boolean",
                    "description": "Direct message flag.\n"
                },
                "displayTime": {
                    "type": "integer",
                    "description": "Display time.\n"
                },
                "event": {
                    "type": "string",
                    "description": "Event.\n"
                },
                "expire": {
                    "type": "integer",
                    "description": "Expire.\n"
                },
                "expires": {
                    "type": "string",
                    "description": "Expires.\n"
                },
                "fieldTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Devices.\n"
                },
                "from": {
                    "type": "string",
                    "description": "From.\n"
                },
                "grabFields": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Grab fields. `0` Overview, `1` Rating, `2` Genres, `3` Quality, `4` Group, `5` Size, `6` Links, `7` Release, `8` Poster, `9` Fanart.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host.\n"
                },
                "icon": {
                    "type": "string",
                    "description": "Icon.\n"
                },
                "implementation": {
                    "type": "string",
                    "description": "Notification implementation name.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "instanceName": {
                    "type": "string",
                    "description": "Instance name.\n"
                },
                "key": {
                    "type": "string",
                    "description": "Key.\n"
                },
                "mapFrom": {
                    "type": "string",
                    "description": "Map From.\n"
                },
                "mapTo": {
                    "type": "string",
                    "description": "Map To.\n"
                },
                "mention": {
                    "type": "string",
                    "description": "Mention.\n"
                },
                "method": {
                    "type": "integer",
                    "description": "Method. `1` POST, `2` PUT.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Notification name.\n"
                },
                "notificationType": {
                    "type": "integer",
                    "description": "Notification type. `0` Info, `1` Success, `2` Warning, `3` Failure.\n"
                },
                "notify": {
                    "type": "boolean",
                    "description": "Notify flag.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "password": {
                    "type": "string",
                    "description": "password.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.\n"
                },
                "receiverId": {
                    "type": "string",
                    "description": "Receiver ID.\n"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Recipients.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "Refresh token.\n"
                },
                "requireEncryption": {
                    "type": "boolean",
                    "description": "Require encryption flag.\n"
                },
                "retry": {
                    "type": "integer",
                    "description": "Retry.\n"
                },
                "sendSilently": {
                    "type": "boolean",
                    "description": "Add silently flag.\n"
                },
                "senderDomain": {
                    "type": "string",
                    "description": "Sender domain.\n"
                },
                "senderId": {
                    "type": "string",
                    "description": "Sender ID.\n"
                },
                "senderNumber": {
                    "type": "string",
                    "description": "Sender Number.\n",
                    "secret": true
                },
                "server": {
                    "type": "string",
                    "description": "server.\n"
                },
                "serverUrl": {
                    "type": "string",
                    "description": "Server url.\n"
                },
                "signIn": {
                    "type": "string",
                    "description": "Sign in.\n"
                },
                "sound": {
                    "type": "string",
                    "description": "Sound.\n"
                },
                "statelessUrls": {
                    "type": "string",
                    "description": "Comma separated stateless URLs.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "token": {
                    "type": "string",
                    "description": "Token.\n"
                },
                "topicId": {
                    "type": "string",
                    "description": "Topic ID.\n"
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Devices.\n"
                },
                "tos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "To.\n"
                },
                "updateLibrary": {
                    "type": "boolean",
                    "description": "Update library flag.\n"
                },
                "url": {
                    "type": "string",
                    "description": "URL.\n"
                },
                "useEuEndpoint": {
                    "type": "boolean",
                    "description": "Use EU endpoint flag.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                },
                "userKey": {
                    "type": "string",
                    "description": "User key.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                },
                "webHookUrl": {
                    "type": "string",
                    "description": "Web hook url.\n"
                }
            },
            "requiredInputs": [
                "configContract",
                "implementation",
                "includeHealthWarnings",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Notification resources.\n",
                "properties": {
                    "accessToken": {
                        "type": "string",
                        "description": "Access token.\n"
                    },
                    "accessTokenSecret": {
                        "type": "string",
                        "description": "Access token secret.\n"
                    },
                    "alwaysUpdate": {
                        "type": "boolean",
                        "description": "Always update flag.\n"
                    },
                    "apiKey": {
                        "type": "string",
                        "description": "API key.\n"
                    },
                    "appToken": {
                        "type": "string",
                        "description": "App token.\n"
                    },
                    "arguments": {
                        "type": "string",
                        "description": "Arguments.\n"
                    },
                    "authPassword": {
                        "type": "string",
                        "description": "Auth password.\n",
                        "secret": true
                    },
                    "authToken": {
                        "type": "string",
                        "description": "Auth token.\n"
                    },
                    "authUser": {
                        "type": "string",
                        "description": "Auth user.\n"
                    },
                    "authUsername": {
                        "type": "string",
                        "description": "Auth username.\n"
                    },
                    "author": {
                        "type": "string",
                        "description": "Author.\n"
                    },
                    "avatar": {
                        "type": "string",
                        "description": "Avatar.\n"
                    },
                    "baseUrl": {
                        "type": "string",
                        "description": "Base URL.\n"
                    },
                    "bccs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Bcc.\n"
                    },
                    "botToken": {
                        "type": "string",
                        "description": "Bot token.\n"
                    },
                    "ccs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Cc.\n"
                    },
                    "channel": {
                        "type": "string",
                        "description": "Channel.\n"
                    },
                    "channelTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Channel tags.\n"
                    },
                    "chatId": {
                        "type": "string",
                        "description": "Chat ID.\n"
                    },
                    "cleanLibrary": {
                        "type": "boolean",
                        "description": "Clean library flag.\n"
                    },
                    "clickUrl": {
                        "type": "string",
                        "description": "Click URL.\n"
                    },
                    "configContract": {
                        "type": "string",
                        "description": "Notification configuration template.\n"
                    },
                    "configurationKey": {
                        "type": "string",
                        "description": "Configuration key.\n",
                        "secret": true
                    },
                    "consumerKey": {
                        "type": "string",
                        "description": "Consumer key.\n"
                    },
                    "consumerSecret": {
                        "type": "string",
                        "description": "Consumer secret.\n"
                    },
                    "deviceIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Device IDs.\n"
                    },
                    "deviceNames": {
                        "type": "string",
                        "description": "Device names.\n"
                    },
                    "devices": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Devices.\n"
                    },
                    "directMessage": {
                        "type": "boolean",
                        "description": "Direct message flag.\n"
                    },
                    "displayTime": {
                        "type": "integer",
                        "description": "Display time.\n"
                    },
                    "event": {
                        "type": "string",
                        "description": "Event.\n"
                    },
                    "expire": {
                        "type": "integer",
                        "description": "Expire.\n"
                    },
                    "expires": {
                        "type": "string",
                        "description": "Expires.\n"
                    },
                    "fieldTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Devices.\n"
                    },
                    "from": {
                        "type": "string",
                        "description": "From.\n"
                    },
                    "grabFields": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Grab fields. `0` Overview, `1` Rating, `2` Genres, `3` Quality, `4` Group, `5` Size, `6` Links, `7` Release, `8` Poster, `9` Fanart.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "Host.\n"
                    },
                    "icon": {
                        "type": "string",
                        "description": "Icon.\n"
                    },
                    "implementation": {
                        "type": "string",
                        "description": "Notification implementation name.\n"
                    },
                    "includeHealthWarnings": {
                        "type": "boolean",
                        "description": "Include health warnings.\n"
                    },
                    "includeManualGrabs": {
                        "type": "boolean",
                        "description": "Include manual grab flag.\n"
                    },
                    "instanceName": {
                        "type": "string",
                        "description": "Instance name.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "Key.\n"
                    },
                    "mapFrom": {
                        "type": "string",
                        "description": "Map From.\n"
                    },
                    "mapTo": {
                        "type": "string",
                        "description": "Map To.\n"
                    },
                    "mention": {
                        "type": "string",
                        "description": "Mention.\n"
                    },
                    "method": {
                        "type": "integer",
                        "description": "Method. `1` POST, `2` PUT.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Notification name.\n"
                    },
                    "notificationType": {
                        "type": "integer",
                        "description": "Notification type. `0` Info, `1` Success, `2` Warning, `3` Failure.\n"
                    },
                    "notify": {
                        "type": "boolean",
                        "description": "Notify flag.\n"
                    },
                    "onApplicationUpdate": {
                        "type": "boolean",
                        "description": "On application update flag.\n"
                    },
                    "onGrab": {
                        "type": "boolean",
                        "description": "On release grab flag.\n"
                    },
                    "onHealthIssue": {
                        "type": "boolean",
                        "description": "On health issue flag.\n"
                    },
                    "onHealthRestored": {
                        "type": "boolean",
                        "description": "On health restored flag.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "password.\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Path.\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority.\n"
                    },
                    "receiverId": {
                        "type": "string",
                        "description": "Receiver ID.\n"
                    },
                    "recipients": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Recipients.\n"
                    },
                    "refreshToken": {
                        "type": "string",
                        "description": "Refresh token.\n"
                    },
                    "requireEncryption": {
                        "type": "boolean",
                        "description": "Require encryption flag.\n"
                    },
                    "retry": {
                        "type": "integer",
                        "description": "Retry.\n"
                    },
                    "sendSilently": {
                        "type": "boolean",
                        "description": "Add silently flag.\n"
                    },
                    "senderDomain": {
                        "type": "string",
                        "description": "Sender domain.\n"
                    },
                    "senderId": {
                        "type": "string",
                        "description": "Sender ID.\n"
                    },
                    "senderNumber": {
                        "type": "string",
                        "description": "Sender Number.\n",
                        "secret": true
                    },
                    "server": {
                        "type": "string",
                        "description": "server.\n"
                    },
                    "serverUrl": {
                        "type": "string",
                        "description": "Server url.\n"
                    },
                    "signIn": {
                        "type": "string",
                        "description": "Sign in.\n"
                    },
                    "sound": {
                        "type": "string",
                        "description": "Sound.\n"
                    },
                    "statelessUrls": {
                        "type": "string",
                        "description": "Comma separated stateless URLs.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "token": {
                        "type": "string",
                        "description": "Token.\n"
                    },
                    "topicId": {
                        "type": "string",
                        "description": "Topic ID.\n"
                    },
                    "topics": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Devices.\n"
                    },
                    "tos": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "To.\n"
                    },
                    "updateLibrary": {
                        "type": "boolean",
                        "description": "Update library flag.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "URL.\n"
                    },
                    "useEuEndpoint": {
                        "type": "boolean",
                        "description": "Use EU endpoint flag.\n"
                    },
                    "useSsl": {
                        "type": "boolean",
                        "description": "Use SSL flag.\n"
                    },
                    "userKey": {
                        "type": "string",
                        "description": "User key.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username.\n"
                    },
                    "webHookUrl": {
                        "type": "string",
                        "description": "Web hook url.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Notifications/notificationApprise:NotificationApprise": {
            "description": "\u003c!-- subcategory:Notifications --\u003eNotification Apprise resource.\nFor more information refer to [Notification](https://wiki.servarr.com/prowlarr/settings#connect) and [Apprise](https://wiki.servarr.com/prowlarr/supported#apprise).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.notifications.NotificationApprise(\"example\", {\n    authPassword: \"Pass\",\n    authUsername: \"User\",\n    configurationKey: \"ConfigKey\",\n    fieldTags: [\n        \"test\",\n        \"test1\",\n    ],\n    includeHealthWarnings: false,\n    name: \"Example\",\n    onApplicationUpdate: false,\n    onHealthIssue: false,\n    serverUrl: \"http://localhost:8000\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.notifications.NotificationApprise(\"example\",\n    auth_password=\"Pass\",\n    auth_username=\"User\",\n    configuration_key=\"ConfigKey\",\n    field_tags=[\n        \"test\",\n        \"test1\",\n    ],\n    include_health_warnings=False,\n    name=\"Example\",\n    on_application_update=False,\n    on_health_issue=False,\n    server_url=\"http://localhost:8000\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Notifications.NotificationApprise(\"example\", new()\n    {\n        AuthPassword = \"Pass\",\n        AuthUsername = \"User\",\n        ConfigurationKey = \"ConfigKey\",\n        FieldTags = new[]\n        {\n            \"test\",\n            \"test1\",\n        },\n        IncludeHealthWarnings = false,\n        Name = \"Example\",\n        OnApplicationUpdate = false,\n        OnHealthIssue = false,\n        ServerUrl = \"http://localhost:8000\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Notifications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Notifications.NewNotificationApprise(ctx, \"example\", \u0026Notifications.NotificationAppriseArgs{\n\t\t\tAuthPassword:     pulumi.String(\"Pass\"),\n\t\t\tAuthUsername:     pulumi.String(\"User\"),\n\t\t\tConfigurationKey: pulumi.String(\"ConfigKey\"),\n\t\t\tFieldTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"test\"),\n\t\t\t\tpulumi.String(\"test1\"),\n\t\t\t},\n\t\t\tIncludeHealthWarnings: pulumi.Bool(false),\n\t\t\tName:                  pulumi.String(\"Example\"),\n\t\t\tOnApplicationUpdate:   pulumi.Bool(false),\n\t\t\tOnHealthIssue:         pulumi.Bool(false),\n\t\t\tServerUrl:             pulumi.String(\"http://localhost:8000\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Notifications.NotificationApprise;\nimport com.pulumi.prowlarr.Notifications.NotificationAppriseArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new NotificationApprise(\"example\", NotificationAppriseArgs.builder()        \n            .authPassword(\"Pass\")\n            .authUsername(\"User\")\n            .configurationKey(\"ConfigKey\")\n            .fieldTags(            \n                \"test\",\n                \"test1\")\n            .includeHealthWarnings(false)\n            .name(\"Example\")\n            .onApplicationUpdate(false)\n            .onHealthIssue(false)\n            .serverUrl(\"http://localhost:8000\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Notifications:NotificationApprise\n    properties:\n      authPassword: Pass\n      authUsername: User\n      configurationKey: ConfigKey\n      fieldTags:\n        - test\n        - test1\n      includeHealthWarnings: false\n      name: Example\n      onApplicationUpdate: false\n      onHealthIssue: false\n      serverUrl: http://localhost:8000\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Notifications/notificationApprise:NotificationApprise example 1\n```\n\n ",
            "properties": {
                "authPassword": {
                    "type": "string",
                    "description": "AuthPassword.\n",
                    "secret": true
                },
                "authUsername": {
                    "type": "string",
                    "description": "AuthUsername.\n"
                },
                "configurationKey": {
                    "type": "string",
                    "description": "ConfigurationKey.\n",
                    "secret": true
                },
                "fieldTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags and emojis.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationApprise name.\n"
                },
                "notificationType": {
                    "type": "integer",
                    "description": "Notification type. `0` Info, `1` Success, `2` Warning, `3` Failure.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "serverUrl": {
                    "type": "string",
                    "description": "Server URL.\n"
                },
                "statelessUrls": {
                    "type": "string",
                    "description": "Comma separated stateless URLs.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "required": [
                "authPassword",
                "authUsername",
                "configurationKey",
                "fieldTags",
                "includeHealthWarnings",
                "includeManualGrabs",
                "name",
                "notificationType",
                "onApplicationUpdate",
                "onGrab",
                "onHealthIssue",
                "onHealthRestored",
                "serverUrl",
                "statelessUrls",
                "tags"
            ],
            "inputProperties": {
                "authPassword": {
                    "type": "string",
                    "description": "AuthPassword.\n",
                    "secret": true
                },
                "authUsername": {
                    "type": "string",
                    "description": "AuthUsername.\n"
                },
                "configurationKey": {
                    "type": "string",
                    "description": "ConfigurationKey.\n",
                    "secret": true
                },
                "fieldTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags and emojis.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationApprise name.\n"
                },
                "notificationType": {
                    "type": "integer",
                    "description": "Notification type. `0` Info, `1` Success, `2` Warning, `3` Failure.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "serverUrl": {
                    "type": "string",
                    "description": "Server URL.\n"
                },
                "statelessUrls": {
                    "type": "string",
                    "description": "Comma separated stateless URLs.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NotificationApprise resources.\n",
                "properties": {
                    "authPassword": {
                        "type": "string",
                        "description": "AuthPassword.\n",
                        "secret": true
                    },
                    "authUsername": {
                        "type": "string",
                        "description": "AuthUsername.\n"
                    },
                    "configurationKey": {
                        "type": "string",
                        "description": "ConfigurationKey.\n",
                        "secret": true
                    },
                    "fieldTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tags and emojis.\n"
                    },
                    "includeHealthWarnings": {
                        "type": "boolean",
                        "description": "Include health warnings.\n"
                    },
                    "includeManualGrabs": {
                        "type": "boolean",
                        "description": "Include manual grab flag.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "NotificationApprise name.\n"
                    },
                    "notificationType": {
                        "type": "integer",
                        "description": "Notification type. `0` Info, `1` Success, `2` Warning, `3` Failure.\n"
                    },
                    "onApplicationUpdate": {
                        "type": "boolean",
                        "description": "On application update flag.\n"
                    },
                    "onGrab": {
                        "type": "boolean",
                        "description": "On release grab flag.\n"
                    },
                    "onHealthIssue": {
                        "type": "boolean",
                        "description": "On health issue flag.\n"
                    },
                    "onHealthRestored": {
                        "type": "boolean",
                        "description": "On health restored flag.\n"
                    },
                    "serverUrl": {
                        "type": "string",
                        "description": "Server URL.\n"
                    },
                    "statelessUrls": {
                        "type": "string",
                        "description": "Comma separated stateless URLs.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Notifications/notificationBoxcar:NotificationBoxcar": {
            "description": "\u003c!-- subcategory:Notifications --\u003eNotification Boxcar resource.\nFor more information refer to [Notification](https://wiki.servarr.com/prowlarr/settings#connect) and [Boxcar](https://wiki.servarr.com/prowlarr/supported#boxcar).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.notifications.NotificationBoxcar(\"example\", {\n    includeHealthWarnings: false,\n    name: \"Example\",\n    onApplicationUpdate: false,\n    onHealthIssue: false,\n    token: \"Token\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.notifications.NotificationBoxcar(\"example\",\n    include_health_warnings=False,\n    name=\"Example\",\n    on_application_update=False,\n    on_health_issue=False,\n    token=\"Token\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Notifications.NotificationBoxcar(\"example\", new()\n    {\n        IncludeHealthWarnings = false,\n        Name = \"Example\",\n        OnApplicationUpdate = false,\n        OnHealthIssue = false,\n        Token = \"Token\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Notifications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Notifications.NewNotificationBoxcar(ctx, \"example\", \u0026Notifications.NotificationBoxcarArgs{\n\t\t\tIncludeHealthWarnings: pulumi.Bool(false),\n\t\t\tName:                  pulumi.String(\"Example\"),\n\t\t\tOnApplicationUpdate:   pulumi.Bool(false),\n\t\t\tOnHealthIssue:         pulumi.Bool(false),\n\t\t\tToken:                 pulumi.String(\"Token\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Notifications.NotificationBoxcar;\nimport com.pulumi.prowlarr.Notifications.NotificationBoxcarArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new NotificationBoxcar(\"example\", NotificationBoxcarArgs.builder()        \n            .includeHealthWarnings(false)\n            .name(\"Example\")\n            .onApplicationUpdate(false)\n            .onHealthIssue(false)\n            .token(\"Token\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Notifications:NotificationBoxcar\n    properties:\n      includeHealthWarnings: false\n      name: Example\n      onApplicationUpdate: false\n      onHealthIssue: false\n      token: Token\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Notifications/notificationBoxcar:NotificationBoxcar example 1\n```\n\n ",
            "properties": {
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationBoxcar name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "token": {
                    "type": "string",
                    "description": "Token.\n",
                    "secret": true
                }
            },
            "required": [
                "includeHealthWarnings",
                "includeManualGrabs",
                "name",
                "onApplicationUpdate",
                "onGrab",
                "onHealthIssue",
                "onHealthRestored",
                "tags",
                "token"
            ],
            "inputProperties": {
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationBoxcar name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "token": {
                    "type": "string",
                    "description": "Token.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "name",
                "token"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NotificationBoxcar resources.\n",
                "properties": {
                    "includeHealthWarnings": {
                        "type": "boolean",
                        "description": "Include health warnings.\n"
                    },
                    "includeManualGrabs": {
                        "type": "boolean",
                        "description": "Include manual grab flag.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "NotificationBoxcar name.\n"
                    },
                    "onApplicationUpdate": {
                        "type": "boolean",
                        "description": "On application update flag.\n"
                    },
                    "onGrab": {
                        "type": "boolean",
                        "description": "On release grab flag.\n"
                    },
                    "onHealthIssue": {
                        "type": "boolean",
                        "description": "On health issue flag.\n"
                    },
                    "onHealthRestored": {
                        "type": "boolean",
                        "description": "On health restored flag.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "token": {
                        "type": "string",
                        "description": "Token.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Notifications/notificationCustomScript:NotificationCustomScript": {
            "description": "\u003c!-- subcategory:Notifications --\u003eNotification Custom Script resource.\nFor more information refer to [Notification](https://wiki.servarr.com/prowlarr/settings#connect) and [Custom Script](https://wiki.servarr.com/prowlarr/supported#customscript).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.notifications.NotificationCustomScript(\"example\", {\n    includeHealthWarnings: false,\n    name: \"Example\",\n    onApplicationUpdate: false,\n    onHealthIssue: false,\n    path: \"/scripts/prowlarr.sh\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.notifications.NotificationCustomScript(\"example\",\n    include_health_warnings=False,\n    name=\"Example\",\n    on_application_update=False,\n    on_health_issue=False,\n    path=\"/scripts/prowlarr.sh\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Notifications.NotificationCustomScript(\"example\", new()\n    {\n        IncludeHealthWarnings = false,\n        Name = \"Example\",\n        OnApplicationUpdate = false,\n        OnHealthIssue = false,\n        Path = \"/scripts/prowlarr.sh\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Notifications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Notifications.NewNotificationCustomScript(ctx, \"example\", \u0026Notifications.NotificationCustomScriptArgs{\n\t\t\tIncludeHealthWarnings: pulumi.Bool(false),\n\t\t\tName:                  pulumi.String(\"Example\"),\n\t\t\tOnApplicationUpdate:   pulumi.Bool(false),\n\t\t\tOnHealthIssue:         pulumi.Bool(false),\n\t\t\tPath:                  pulumi.String(\"/scripts/prowlarr.sh\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Notifications.NotificationCustomScript;\nimport com.pulumi.prowlarr.Notifications.NotificationCustomScriptArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new NotificationCustomScript(\"example\", NotificationCustomScriptArgs.builder()        \n            .includeHealthWarnings(false)\n            .name(\"Example\")\n            .onApplicationUpdate(false)\n            .onHealthIssue(false)\n            .path(\"/scripts/prowlarr.sh\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Notifications:NotificationCustomScript\n    properties:\n      includeHealthWarnings: false\n      name: Example\n      onApplicationUpdate: false\n      onHealthIssue: false\n      path: /scripts/prowlarr.sh\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Notifications/notificationCustomScript:NotificationCustomScript example 1\n```\n\n ",
            "properties": {
                "arguments": {
                    "type": "string",
                    "description": "Arguments.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationCustomScript name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "required": [
                "arguments",
                "includeHealthWarnings",
                "name",
                "onApplicationUpdate",
                "onHealthIssue",
                "onHealthRestored",
                "path",
                "tags"
            ],
            "inputProperties": {
                "arguments": {
                    "type": "string",
                    "description": "Arguments.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationCustomScript name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "requiredInputs": [
                "includeHealthWarnings",
                "name",
                "path"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NotificationCustomScript resources.\n",
                "properties": {
                    "arguments": {
                        "type": "string",
                        "description": "Arguments.\n"
                    },
                    "includeHealthWarnings": {
                        "type": "boolean",
                        "description": "Include health warnings.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "NotificationCustomScript name.\n"
                    },
                    "onApplicationUpdate": {
                        "type": "boolean",
                        "description": "On application update flag.\n"
                    },
                    "onHealthIssue": {
                        "type": "boolean",
                        "description": "On health issue flag.\n"
                    },
                    "onHealthRestored": {
                        "type": "boolean",
                        "description": "On health restored flag.\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Path.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Notifications/notificationDiscord:NotificationDiscord": {
            "description": "\u003c!-- subcategory:Notifications --\u003eNotification Discord resource.\nFor more information refer to [Notification](https://wiki.servarr.com/prowlarr/settings#connect) and [Discord](https://wiki.servarr.com/prowlarr/supported#discord).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Notifications.NotificationDiscord;\nimport com.pulumi.prowlarr.Notifications.NotificationDiscordArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new NotificationDiscord(\"example\", NotificationDiscordArgs.builder()        \n            .avatar(\"https://i.imgur.com/oBPXx0D.png\")\n            .grabFields(            \n                0,\n                1,\n                2,\n                3,\n                4,\n                5,\n                6,\n                7,\n                8,\n                9)\n            .importFields(            \n                0,\n                1,\n                2,\n                3,\n                4,\n                5,\n                6,\n                7,\n                8,\n                9,\n                10,\n                11,\n                12)\n            .includeHealthWarnings(false)\n            .name(\"Example\")\n            .onApplicationUpdate(false)\n            .onHealthIssue(false)\n            .username(\"User\")\n            .webHookUrl(\"http://discord-web-hook.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Notifications:NotificationDiscord\n    properties:\n      avatar: https://i.imgur.com/oBPXx0D.png\n      grabFields:\n        - 0\n        - 1\n        - 2\n        - 3\n        - 4\n        - 5\n        - 6\n        - 7\n        - 8\n        - 9\n      importFields:\n        - 0\n        - 1\n        - 2\n        - 3\n        - 4\n        - 5\n        - 6\n        - 7\n        - 8\n        - 9\n        - 10\n        - 11\n        - 12\n      includeHealthWarnings: false\n      name: Example\n      onApplicationUpdate: false\n      onHealthIssue: false\n      username: User\n      webHookUrl: http://discord-web-hook.com\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Notifications/notificationDiscord:NotificationDiscord example 1\n```\n\n ",
            "properties": {
                "author": {
                    "type": "string",
                    "description": "Author.\n"
                },
                "avatar": {
                    "type": "string",
                    "description": "Avatar.\n"
                },
                "grabFields": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Grab fields. `0` Overview, `1` Rating, `2` Genres, `3` Quality, `4` Group, `5` Size, `6` Links, `7` Release, `8` Poster, `9` Fanart.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationDiscord name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                },
                "webHookUrl": {
                    "type": "string",
                    "description": "Web hook URL.\n"
                }
            },
            "required": [
                "author",
                "avatar",
                "grabFields",
                "includeHealthWarnings",
                "includeManualGrabs",
                "name",
                "onApplicationUpdate",
                "onGrab",
                "onHealthIssue",
                "onHealthRestored",
                "tags",
                "username",
                "webHookUrl"
            ],
            "inputProperties": {
                "author": {
                    "type": "string",
                    "description": "Author.\n"
                },
                "avatar": {
                    "type": "string",
                    "description": "Avatar.\n"
                },
                "grabFields": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "Grab fields. `0` Overview, `1` Rating, `2` Genres, `3` Quality, `4` Group, `5` Size, `6` Links, `7` Release, `8` Poster, `9` Fanart.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationDiscord name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                },
                "webHookUrl": {
                    "type": "string",
                    "description": "Web hook URL.\n"
                }
            },
            "requiredInputs": [
                "name",
                "webHookUrl"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NotificationDiscord resources.\n",
                "properties": {
                    "author": {
                        "type": "string",
                        "description": "Author.\n"
                    },
                    "avatar": {
                        "type": "string",
                        "description": "Avatar.\n"
                    },
                    "grabFields": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Grab fields. `0` Overview, `1` Rating, `2` Genres, `3` Quality, `4` Group, `5` Size, `6` Links, `7` Release, `8` Poster, `9` Fanart.\n"
                    },
                    "includeHealthWarnings": {
                        "type": "boolean",
                        "description": "Include health warnings.\n"
                    },
                    "includeManualGrabs": {
                        "type": "boolean",
                        "description": "Include manual grab flag.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "NotificationDiscord name.\n"
                    },
                    "onApplicationUpdate": {
                        "type": "boolean",
                        "description": "On application update flag.\n"
                    },
                    "onGrab": {
                        "type": "boolean",
                        "description": "On release grab flag.\n"
                    },
                    "onHealthIssue": {
                        "type": "boolean",
                        "description": "On health issue flag.\n"
                    },
                    "onHealthRestored": {
                        "type": "boolean",
                        "description": "On health restored flag.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username.\n"
                    },
                    "webHookUrl": {
                        "type": "string",
                        "description": "Web hook URL.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Notifications/notificationEmail:NotificationEmail": {
            "description": "\u003c!-- subcategory:Notifications --\u003eNotification Email resource.\nFor more information refer to [Notification](https://wiki.servarr.com/prowlarr/settings#connect) and [Email](https://wiki.servarr.com/prowlarr/supported#email).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.notifications.NotificationEmail(\"example\", {\n    from: \"from_email@example.com\",\n    includeHealthWarnings: false,\n    name: \"Example\",\n    onApplicationUpdate: false,\n    onHealthIssue: false,\n    port: 587,\n    server: \"http://email-server.net\",\n    tos: [\n        \"user1@example.com\",\n        \"user2@example.com\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.notifications.NotificationEmail(\"example\",\n    from_=\"from_email@example.com\",\n    include_health_warnings=False,\n    name=\"Example\",\n    on_application_update=False,\n    on_health_issue=False,\n    port=587,\n    server=\"http://email-server.net\",\n    tos=[\n        \"user1@example.com\",\n        \"user2@example.com\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Notifications.NotificationEmail(\"example\", new()\n    {\n        From = \"from_email@example.com\",\n        IncludeHealthWarnings = false,\n        Name = \"Example\",\n        OnApplicationUpdate = false,\n        OnHealthIssue = false,\n        Port = 587,\n        Server = \"http://email-server.net\",\n        Tos = new[]\n        {\n            \"user1@example.com\",\n            \"user2@example.com\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Notifications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Notifications.NewNotificationEmail(ctx, \"example\", \u0026Notifications.NotificationEmailArgs{\n\t\t\tFrom:                  pulumi.String(\"from_email@example.com\"),\n\t\t\tIncludeHealthWarnings: pulumi.Bool(false),\n\t\t\tName:                  pulumi.String(\"Example\"),\n\t\t\tOnApplicationUpdate:   pulumi.Bool(false),\n\t\t\tOnHealthIssue:         pulumi.Bool(false),\n\t\t\tPort:                  pulumi.Int(587),\n\t\t\tServer:                pulumi.String(\"http://email-server.net\"),\n\t\t\tTos: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"user1@example.com\"),\n\t\t\t\tpulumi.String(\"user2@example.com\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Notifications.NotificationEmail;\nimport com.pulumi.prowlarr.Notifications.NotificationEmailArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new NotificationEmail(\"example\", NotificationEmailArgs.builder()        \n            .from(\"from_email@example.com\")\n            .includeHealthWarnings(false)\n            .name(\"Example\")\n            .onApplicationUpdate(false)\n            .onHealthIssue(false)\n            .port(587)\n            .server(\"http://email-server.net\")\n            .tos(            \n                \"user1@example.com\",\n                \"user2@example.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Notifications:NotificationEmail\n    properties:\n      from: from_email@example.com\n      includeHealthWarnings: false\n      name: Example\n      onApplicationUpdate: false\n      onHealthIssue: false\n      port: 587\n      server: http://email-server.net\n      tos:\n        - user1@example.com\n        - user2@example.com\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Notifications/notificationEmail:NotificationEmail example 1\n```\n\n ",
            "properties": {
                "bccs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Bcc.\n"
                },
                "ccs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Cc.\n"
                },
                "from": {
                    "type": "string",
                    "description": "From.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationEmail name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "requireEncryption": {
                    "type": "boolean",
                    "description": "Require encryption flag.\n"
                },
                "server": {
                    "type": "string",
                    "description": "Server.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "tos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "To.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "required": [
                "bccs",
                "ccs",
                "from",
                "includeHealthWarnings",
                "includeManualGrabs",
                "name",
                "onApplicationUpdate",
                "onGrab",
                "onHealthIssue",
                "onHealthRestored",
                "password",
                "port",
                "requireEncryption",
                "server",
                "tags",
                "tos",
                "username"
            ],
            "inputProperties": {
                "bccs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Bcc.\n"
                },
                "ccs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Cc.\n"
                },
                "from": {
                    "type": "string",
                    "description": "From.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationEmail name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "requireEncryption": {
                    "type": "boolean",
                    "description": "Require encryption flag.\n"
                },
                "server": {
                    "type": "string",
                    "description": "Server.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "tos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "To.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "requiredInputs": [
                "from",
                "name",
                "server",
                "tos"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NotificationEmail resources.\n",
                "properties": {
                    "bccs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Bcc.\n"
                    },
                    "ccs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Cc.\n"
                    },
                    "from": {
                        "type": "string",
                        "description": "From.\n"
                    },
                    "includeHealthWarnings": {
                        "type": "boolean",
                        "description": "Include health warnings.\n"
                    },
                    "includeManualGrabs": {
                        "type": "boolean",
                        "description": "Include manual grab flag.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "NotificationEmail name.\n"
                    },
                    "onApplicationUpdate": {
                        "type": "boolean",
                        "description": "On application update flag.\n"
                    },
                    "onGrab": {
                        "type": "boolean",
                        "description": "On release grab flag.\n"
                    },
                    "onHealthIssue": {
                        "type": "boolean",
                        "description": "On health issue flag.\n"
                    },
                    "onHealthRestored": {
                        "type": "boolean",
                        "description": "On health restored flag.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password.\n",
                        "secret": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port.\n"
                    },
                    "requireEncryption": {
                        "type": "boolean",
                        "description": "Require encryption flag.\n"
                    },
                    "server": {
                        "type": "string",
                        "description": "Server.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "tos": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "To.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Notifications/notificationGotify:NotificationGotify": {
            "description": "\u003c!-- subcategory:Notifications --\u003eNotification Gotify resource.\nFor more information refer to [Notification](https://wiki.servarr.com/prowlarr/settings#connect) and [Gotify](https://wiki.servarr.com/prowlarr/supported#gotify).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.notifications.NotificationGotify(\"example\", {\n    appToken: \"Token\",\n    includeHealthWarnings: false,\n    name: \"Example\",\n    onApplicationUpdate: false,\n    onHealthIssue: false,\n    priority: 5,\n    server: \"http://gotify-server.net\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.notifications.NotificationGotify(\"example\",\n    app_token=\"Token\",\n    include_health_warnings=False,\n    name=\"Example\",\n    on_application_update=False,\n    on_health_issue=False,\n    priority=5,\n    server=\"http://gotify-server.net\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Notifications.NotificationGotify(\"example\", new()\n    {\n        AppToken = \"Token\",\n        IncludeHealthWarnings = false,\n        Name = \"Example\",\n        OnApplicationUpdate = false,\n        OnHealthIssue = false,\n        Priority = 5,\n        Server = \"http://gotify-server.net\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Notifications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Notifications.NewNotificationGotify(ctx, \"example\", \u0026Notifications.NotificationGotifyArgs{\n\t\t\tAppToken:              pulumi.String(\"Token\"),\n\t\t\tIncludeHealthWarnings: pulumi.Bool(false),\n\t\t\tName:                  pulumi.String(\"Example\"),\n\t\t\tOnApplicationUpdate:   pulumi.Bool(false),\n\t\t\tOnHealthIssue:         pulumi.Bool(false),\n\t\t\tPriority:              pulumi.Int(5),\n\t\t\tServer:                pulumi.String(\"http://gotify-server.net\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Notifications.NotificationGotify;\nimport com.pulumi.prowlarr.Notifications.NotificationGotifyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new NotificationGotify(\"example\", NotificationGotifyArgs.builder()        \n            .appToken(\"Token\")\n            .includeHealthWarnings(false)\n            .name(\"Example\")\n            .onApplicationUpdate(false)\n            .onHealthIssue(false)\n            .priority(5)\n            .server(\"http://gotify-server.net\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Notifications:NotificationGotify\n    properties:\n      appToken: Token\n      includeHealthWarnings: false\n      name: Example\n      onApplicationUpdate: false\n      onHealthIssue: false\n      priority: 5\n      server: http://gotify-server.net\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Notifications/notificationGotify:NotificationGotify example 1\n```\n\n ",
            "properties": {
                "appToken": {
                    "type": "string",
                    "description": "App token.\n",
                    "secret": true
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationGotify name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority. `0` Min, `2` Low, `5` Normal, `8` High.\n"
                },
                "server": {
                    "type": "string",
                    "description": "Server.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "required": [
                "appToken",
                "includeHealthWarnings",
                "includeManualGrabs",
                "name",
                "onApplicationUpdate",
                "onGrab",
                "onHealthIssue",
                "onHealthRestored",
                "priority",
                "server",
                "tags"
            ],
            "inputProperties": {
                "appToken": {
                    "type": "string",
                    "description": "App token.\n",
                    "secret": true
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationGotify name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority. `0` Min, `2` Low, `5` Normal, `8` High.\n"
                },
                "server": {
                    "type": "string",
                    "description": "Server.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "requiredInputs": [
                "appToken",
                "name",
                "server"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NotificationGotify resources.\n",
                "properties": {
                    "appToken": {
                        "type": "string",
                        "description": "App token.\n",
                        "secret": true
                    },
                    "includeHealthWarnings": {
                        "type": "boolean",
                        "description": "Include health warnings.\n"
                    },
                    "includeManualGrabs": {
                        "type": "boolean",
                        "description": "Include manual grab flag.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "NotificationGotify name.\n"
                    },
                    "onApplicationUpdate": {
                        "type": "boolean",
                        "description": "On application update flag.\n"
                    },
                    "onGrab": {
                        "type": "boolean",
                        "description": "On release grab flag.\n"
                    },
                    "onHealthIssue": {
                        "type": "boolean",
                        "description": "On health issue flag.\n"
                    },
                    "onHealthRestored": {
                        "type": "boolean",
                        "description": "On health restored flag.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority. `0` Min, `2` Low, `5` Normal, `8` High.\n"
                    },
                    "server": {
                        "type": "string",
                        "description": "Server.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Notifications/notificationJoin:NotificationJoin": {
            "description": "\u003c!-- subcategory:Notifications --\u003eNotification Join resource.\nFor more information refer to [Notification](https://wiki.servarr.com/prowlarr/settings#connect) and [Join](https://wiki.servarr.com/prowlarr/supported#join).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.notifications.NotificationJoin(\"example\", {\n    apiKey: \"Key\",\n    deviceNames: \"device1,device2\",\n    includeHealthWarnings: false,\n    name: \"Example\",\n    onApplicationUpdate: false,\n    onHealthIssue: false,\n    priority: 2,\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.notifications.NotificationJoin(\"example\",\n    api_key=\"Key\",\n    device_names=\"device1,device2\",\n    include_health_warnings=False,\n    name=\"Example\",\n    on_application_update=False,\n    on_health_issue=False,\n    priority=2)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Notifications.NotificationJoin(\"example\", new()\n    {\n        ApiKey = \"Key\",\n        DeviceNames = \"device1,device2\",\n        IncludeHealthWarnings = false,\n        Name = \"Example\",\n        OnApplicationUpdate = false,\n        OnHealthIssue = false,\n        Priority = 2,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Notifications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Notifications.NewNotificationJoin(ctx, \"example\", \u0026Notifications.NotificationJoinArgs{\n\t\t\tApiKey:                pulumi.String(\"Key\"),\n\t\t\tDeviceNames:           pulumi.String(\"device1,device2\"),\n\t\t\tIncludeHealthWarnings: pulumi.Bool(false),\n\t\t\tName:                  pulumi.String(\"Example\"),\n\t\t\tOnApplicationUpdate:   pulumi.Bool(false),\n\t\t\tOnHealthIssue:         pulumi.Bool(false),\n\t\t\tPriority:              pulumi.Int(2),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Notifications.NotificationJoin;\nimport com.pulumi.prowlarr.Notifications.NotificationJoinArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new NotificationJoin(\"example\", NotificationJoinArgs.builder()        \n            .apiKey(\"Key\")\n            .deviceNames(\"device1,device2\")\n            .includeHealthWarnings(false)\n            .name(\"Example\")\n            .onApplicationUpdate(false)\n            .onHealthIssue(false)\n            .priority(2)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Notifications:NotificationJoin\n    properties:\n      apiKey: Key\n      deviceNames: device1,device2\n      includeHealthWarnings: false\n      name: Example\n      onApplicationUpdate: false\n      onHealthIssue: false\n      priority: 2\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Notifications/notificationJoin:NotificationJoin example 1\n```\n\n ",
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "deviceNames": {
                    "type": "string",
                    "description": "Device names. Comma separated list.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationJoin name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority. `-2` Silent, `-1` Quiet, `0` Normal, `1` High, `2` Emergency.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "required": [
                "includeHealthWarnings",
                "includeManualGrabs",
                "name",
                "onApplicationUpdate",
                "onGrab",
                "onHealthIssue",
                "onHealthRestored",
                "priority",
                "tags"
            ],
            "inputProperties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "deviceNames": {
                    "type": "string",
                    "description": "Device names. Comma separated list.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationJoin name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority. `-2` Silent, `-1` Quiet, `0` Normal, `1` High, `2` Emergency.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NotificationJoin resources.\n",
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "description": "API key.\n",
                        "secret": true
                    },
                    "deviceNames": {
                        "type": "string",
                        "description": "Device names. Comma separated list.\n"
                    },
                    "includeHealthWarnings": {
                        "type": "boolean",
                        "description": "Include health warnings.\n"
                    },
                    "includeManualGrabs": {
                        "type": "boolean",
                        "description": "Include manual grab flag.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "NotificationJoin name.\n"
                    },
                    "onApplicationUpdate": {
                        "type": "boolean",
                        "description": "On application update flag.\n"
                    },
                    "onGrab": {
                        "type": "boolean",
                        "description": "On release grab flag.\n"
                    },
                    "onHealthIssue": {
                        "type": "boolean",
                        "description": "On health issue flag.\n"
                    },
                    "onHealthRestored": {
                        "type": "boolean",
                        "description": "On health restored flag.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority. `-2` Silent, `-1` Quiet, `0` Normal, `1` High, `2` Emergency.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Notifications/notificationMailgun:NotificationMailgun": {
            "description": "\u003c!-- subcategory:Notifications --\u003eNotification Mailgun resource.\nFor more information refer to [Notification](https://wiki.servarr.com/prowlarr/settings#connect) and [Mailgun](https://wiki.servarr.com/prowlarr/supported#mailgun).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.notifications.NotificationMailgun(\"example\", {\n    apiKey: \"APIkey\",\n    from: \"from_mailgun@example.com\",\n    includeHealthWarnings: false,\n    name: \"Example\",\n    onApplicationUpdate: false,\n    onHealthIssue: false,\n    recipients: [\n        \"user1@example.com\",\n        \"user2@example.com\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.notifications.NotificationMailgun(\"example\",\n    api_key=\"APIkey\",\n    from_=\"from_mailgun@example.com\",\n    include_health_warnings=False,\n    name=\"Example\",\n    on_application_update=False,\n    on_health_issue=False,\n    recipients=[\n        \"user1@example.com\",\n        \"user2@example.com\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Notifications.NotificationMailgun(\"example\", new()\n    {\n        ApiKey = \"APIkey\",\n        From = \"from_mailgun@example.com\",\n        IncludeHealthWarnings = false,\n        Name = \"Example\",\n        OnApplicationUpdate = false,\n        OnHealthIssue = false,\n        Recipients = new[]\n        {\n            \"user1@example.com\",\n            \"user2@example.com\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Notifications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Notifications.NewNotificationMailgun(ctx, \"example\", \u0026Notifications.NotificationMailgunArgs{\n\t\t\tApiKey:                pulumi.String(\"APIkey\"),\n\t\t\tFrom:                  pulumi.String(\"from_mailgun@example.com\"),\n\t\t\tIncludeHealthWarnings: pulumi.Bool(false),\n\t\t\tName:                  pulumi.String(\"Example\"),\n\t\t\tOnApplicationUpdate:   pulumi.Bool(false),\n\t\t\tOnHealthIssue:         pulumi.Bool(false),\n\t\t\tRecipients: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"user1@example.com\"),\n\t\t\t\tpulumi.String(\"user2@example.com\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Notifications.NotificationMailgun;\nimport com.pulumi.prowlarr.Notifications.NotificationMailgunArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new NotificationMailgun(\"example\", NotificationMailgunArgs.builder()        \n            .apiKey(\"APIkey\")\n            .from(\"from_mailgun@example.com\")\n            .includeHealthWarnings(false)\n            .name(\"Example\")\n            .onApplicationUpdate(false)\n            .onHealthIssue(false)\n            .recipients(            \n                \"user1@example.com\",\n                \"user2@example.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Notifications:NotificationMailgun\n    properties:\n      apiKey: APIkey\n      from: from_mailgun@example.com\n      includeHealthWarnings: false\n      name: Example\n      onApplicationUpdate: false\n      onHealthIssue: false\n      recipients:\n        - user1@example.com\n        - user2@example.com\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Notifications/notificationMailgun:NotificationMailgun example 1\n```\n\n ",
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "from": {
                    "type": "string",
                    "description": "From.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationMailgun name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Recipients.\n"
                },
                "senderDomain": {
                    "type": "string",
                    "description": "Sender domain.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "useEuEndpoint": {
                    "type": "boolean",
                    "description": "Use EU endpoint flag.\n"
                }
            },
            "required": [
                "apiKey",
                "from",
                "includeHealthWarnings",
                "name",
                "onApplicationUpdate",
                "onHealthIssue",
                "onHealthRestored",
                "recipients",
                "senderDomain",
                "tags",
                "useEuEndpoint"
            ],
            "inputProperties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "from": {
                    "type": "string",
                    "description": "From.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationMailgun name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Recipients.\n"
                },
                "senderDomain": {
                    "type": "string",
                    "description": "Sender domain.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "useEuEndpoint": {
                    "type": "boolean",
                    "description": "Use EU endpoint flag.\n"
                }
            },
            "requiredInputs": [
                "from",
                "name",
                "recipients"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NotificationMailgun resources.\n",
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "description": "API key.\n",
                        "secret": true
                    },
                    "from": {
                        "type": "string",
                        "description": "From.\n"
                    },
                    "includeHealthWarnings": {
                        "type": "boolean",
                        "description": "Include health warnings.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "NotificationMailgun name.\n"
                    },
                    "onApplicationUpdate": {
                        "type": "boolean",
                        "description": "On application update flag.\n"
                    },
                    "onHealthIssue": {
                        "type": "boolean",
                        "description": "On health issue flag.\n"
                    },
                    "onHealthRestored": {
                        "type": "boolean",
                        "description": "On health restored flag.\n"
                    },
                    "recipients": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Recipients.\n"
                    },
                    "senderDomain": {
                        "type": "string",
                        "description": "Sender domain.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "useEuEndpoint": {
                        "type": "boolean",
                        "description": "Use EU endpoint flag.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Notifications/notificationNotifiarr:NotificationNotifiarr": {
            "description": "\u003c!-- subcategory:Notifications --\u003eNotification Notifiarr resource.\nFor more information refer to [Notification](https://wiki.servarr.com/prowlarr/settings#connect) and [Notifiarr](https://wiki.servarr.com/prowlarr/supported#notifiarr).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.notifications.NotificationNotifiarr(\"example\", {\n    apiKey: \"Token\",\n    includeHealthWarnings: false,\n    name: \"Example\",\n    onApplicationUpdate: false,\n    onHealthIssue: false,\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.notifications.NotificationNotifiarr(\"example\",\n    api_key=\"Token\",\n    include_health_warnings=False,\n    name=\"Example\",\n    on_application_update=False,\n    on_health_issue=False)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Notifications.NotificationNotifiarr(\"example\", new()\n    {\n        ApiKey = \"Token\",\n        IncludeHealthWarnings = false,\n        Name = \"Example\",\n        OnApplicationUpdate = false,\n        OnHealthIssue = false,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Notifications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Notifications.NewNotificationNotifiarr(ctx, \"example\", \u0026Notifications.NotificationNotifiarrArgs{\n\t\t\tApiKey:                pulumi.String(\"Token\"),\n\t\t\tIncludeHealthWarnings: pulumi.Bool(false),\n\t\t\tName:                  pulumi.String(\"Example\"),\n\t\t\tOnApplicationUpdate:   pulumi.Bool(false),\n\t\t\tOnHealthIssue:         pulumi.Bool(false),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Notifications.NotificationNotifiarr;\nimport com.pulumi.prowlarr.Notifications.NotificationNotifiarrArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new NotificationNotifiarr(\"example\", NotificationNotifiarrArgs.builder()        \n            .apiKey(\"Token\")\n            .includeHealthWarnings(false)\n            .name(\"Example\")\n            .onApplicationUpdate(false)\n            .onHealthIssue(false)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Notifications:NotificationNotifiarr\n    properties:\n      apiKey: Token\n      includeHealthWarnings: false\n      name: Example\n      onApplicationUpdate: false\n      onHealthIssue: false\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Notifications/notificationNotifiarr:NotificationNotifiarr example 1\n```\n\n ",
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationNotifiarr name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "required": [
                "apiKey",
                "includeHealthWarnings",
                "includeManualGrabs",
                "name",
                "onApplicationUpdate",
                "onGrab",
                "onHealthIssue",
                "onHealthRestored",
                "tags"
            ],
            "inputProperties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationNotifiarr name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "requiredInputs": [
                "apiKey",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NotificationNotifiarr resources.\n",
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "description": "API key.\n",
                        "secret": true
                    },
                    "includeHealthWarnings": {
                        "type": "boolean",
                        "description": "Include health warnings.\n"
                    },
                    "includeManualGrabs": {
                        "type": "boolean",
                        "description": "Include manual grab flag.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "NotificationNotifiarr name.\n"
                    },
                    "onApplicationUpdate": {
                        "type": "boolean",
                        "description": "On application update flag.\n"
                    },
                    "onGrab": {
                        "type": "boolean",
                        "description": "On release grab flag.\n"
                    },
                    "onHealthIssue": {
                        "type": "boolean",
                        "description": "On health issue flag.\n"
                    },
                    "onHealthRestored": {
                        "type": "boolean",
                        "description": "On health restored flag.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Notifications/notificationNtfy:NotificationNtfy": {
            "description": "\u003c!-- subcategory:Notifications --\u003eNotification Ntfy resource.\nFor more information refer to [Notification](https://wiki.servarr.com/prowlarr/settings#connect) and [Ntfy](https://wiki.servarr.com/prowlarr/supported#ntfy).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.notifications.NotificationNtfy(\"example\", {\n    fieldTags: [\n        \"warning\",\n        \"skull\",\n    ],\n    includeHealthWarnings: false,\n    name: \"Example\",\n    onApplicationUpdate: false,\n    onHealthIssue: false,\n    password: \"Pass\",\n    priority: 1,\n    serverUrl: \"https://ntfy.sh\",\n    topics: [\n        \"Topic1234\",\n        \"Topic4321\",\n    ],\n    username: \"User\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.notifications.NotificationNtfy(\"example\",\n    field_tags=[\n        \"warning\",\n        \"skull\",\n    ],\n    include_health_warnings=False,\n    name=\"Example\",\n    on_application_update=False,\n    on_health_issue=False,\n    password=\"Pass\",\n    priority=1,\n    server_url=\"https://ntfy.sh\",\n    topics=[\n        \"Topic1234\",\n        \"Topic4321\",\n    ],\n    username=\"User\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Notifications.NotificationNtfy(\"example\", new()\n    {\n        FieldTags = new[]\n        {\n            \"warning\",\n            \"skull\",\n        },\n        IncludeHealthWarnings = false,\n        Name = \"Example\",\n        OnApplicationUpdate = false,\n        OnHealthIssue = false,\n        Password = \"Pass\",\n        Priority = 1,\n        ServerUrl = \"https://ntfy.sh\",\n        Topics = new[]\n        {\n            \"Topic1234\",\n            \"Topic4321\",\n        },\n        Username = \"User\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Notifications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Notifications.NewNotificationNtfy(ctx, \"example\", \u0026Notifications.NotificationNtfyArgs{\n\t\t\tFieldTags: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"warning\"),\n\t\t\t\tpulumi.String(\"skull\"),\n\t\t\t},\n\t\t\tIncludeHealthWarnings: pulumi.Bool(false),\n\t\t\tName:                  pulumi.String(\"Example\"),\n\t\t\tOnApplicationUpdate:   pulumi.Bool(false),\n\t\t\tOnHealthIssue:         pulumi.Bool(false),\n\t\t\tPassword:              pulumi.String(\"Pass\"),\n\t\t\tPriority:              pulumi.Int(1),\n\t\t\tServerUrl:             pulumi.String(\"https://ntfy.sh\"),\n\t\t\tTopics: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Topic1234\"),\n\t\t\t\tpulumi.String(\"Topic4321\"),\n\t\t\t},\n\t\t\tUsername: pulumi.String(\"User\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Notifications.NotificationNtfy;\nimport com.pulumi.prowlarr.Notifications.NotificationNtfyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new NotificationNtfy(\"example\", NotificationNtfyArgs.builder()        \n            .fieldTags(            \n                \"warning\",\n                \"skull\")\n            .includeHealthWarnings(false)\n            .name(\"Example\")\n            .onApplicationUpdate(false)\n            .onHealthIssue(false)\n            .password(\"Pass\")\n            .priority(1)\n            .serverUrl(\"https://ntfy.sh\")\n            .topics(            \n                \"Topic1234\",\n                \"Topic4321\")\n            .username(\"User\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Notifications:NotificationNtfy\n    properties:\n      fieldTags:\n        - warning\n        - skull\n      includeHealthWarnings: false\n      name: Example\n      onApplicationUpdate: false\n      onHealthIssue: false\n      password: Pass\n      priority: 1\n      serverUrl: https://ntfy.sh\n      topics:\n        - Topic1234\n        - Topic4321\n      username: User\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Notifications/notificationNtfy:NotificationNtfy example 1\n```\n\n ",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Access token.\n",
                    "secret": true
                },
                "clickUrl": {
                    "type": "string",
                    "description": "Click URL.\n"
                },
                "fieldTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags and emojis.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationNtfy name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority. `1` Min, `2` Low, `3` Default, `4` High, `5` Max.\n"
                },
                "serverUrl": {
                    "type": "string",
                    "description": "Server URL.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Topics.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "required": [
                "accessToken",
                "clickUrl",
                "fieldTags",
                "includeHealthWarnings",
                "includeManualGrabs",
                "name",
                "onApplicationUpdate",
                "onGrab",
                "onHealthIssue",
                "onHealthRestored",
                "password",
                "priority",
                "serverUrl",
                "tags",
                "topics",
                "username"
            ],
            "inputProperties": {
                "accessToken": {
                    "type": "string",
                    "description": "Access token.\n",
                    "secret": true
                },
                "clickUrl": {
                    "type": "string",
                    "description": "Click URL.\n"
                },
                "fieldTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags and emojis.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationNtfy name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority. `1` Min, `2` Low, `3` Default, `4` High, `5` Max.\n"
                },
                "serverUrl": {
                    "type": "string",
                    "description": "Server URL.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Topics.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "requiredInputs": [
                "name",
                "topics"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NotificationNtfy resources.\n",
                "properties": {
                    "accessToken": {
                        "type": "string",
                        "description": "Access token.\n",
                        "secret": true
                    },
                    "clickUrl": {
                        "type": "string",
                        "description": "Click URL.\n"
                    },
                    "fieldTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tags and emojis.\n"
                    },
                    "includeHealthWarnings": {
                        "type": "boolean",
                        "description": "Include health warnings.\n"
                    },
                    "includeManualGrabs": {
                        "type": "boolean",
                        "description": "Include manual grab flag.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "NotificationNtfy name.\n"
                    },
                    "onApplicationUpdate": {
                        "type": "boolean",
                        "description": "On application update flag.\n"
                    },
                    "onGrab": {
                        "type": "boolean",
                        "description": "On release grab flag.\n"
                    },
                    "onHealthIssue": {
                        "type": "boolean",
                        "description": "On health issue flag.\n"
                    },
                    "onHealthRestored": {
                        "type": "boolean",
                        "description": "On health restored flag.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password.\n",
                        "secret": true
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority. `1` Min, `2` Low, `3` Default, `4` High, `5` Max.\n"
                    },
                    "serverUrl": {
                        "type": "string",
                        "description": "Server URL.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "topics": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Topics.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Notifications/notificationProwl:NotificationProwl": {
            "description": "\u003c!-- subcategory:Notifications --\u003eNotification Prowl resource.\nFor more information refer to [Notification](https://wiki.servarr.com/prowlarr/settings#connect) and [Prowl](https://wiki.servarr.com/prowlarr/supported#prowl).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.notifications.NotificationProwl(\"example\", {\n    apiKey: \"APIKey\",\n    includeHealthWarnings: false,\n    name: \"Example\",\n    onApplicationUpdate: false,\n    onHealthIssue: false,\n    priority: -2,\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.notifications.NotificationProwl(\"example\",\n    api_key=\"APIKey\",\n    include_health_warnings=False,\n    name=\"Example\",\n    on_application_update=False,\n    on_health_issue=False,\n    priority=-2)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Notifications.NotificationProwl(\"example\", new()\n    {\n        ApiKey = \"APIKey\",\n        IncludeHealthWarnings = false,\n        Name = \"Example\",\n        OnApplicationUpdate = false,\n        OnHealthIssue = false,\n        Priority = -2,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Notifications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Notifications.NewNotificationProwl(ctx, \"example\", \u0026Notifications.NotificationProwlArgs{\n\t\t\tApiKey:                pulumi.String(\"APIKey\"),\n\t\t\tIncludeHealthWarnings: pulumi.Bool(false),\n\t\t\tName:                  pulumi.String(\"Example\"),\n\t\t\tOnApplicationUpdate:   pulumi.Bool(false),\n\t\t\tOnHealthIssue:         pulumi.Bool(false),\n\t\t\tPriority:              -2,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Notifications/notificationProwl:NotificationProwl example 1\n```\n\n ",
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationProwl name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.`-2` Very Low, `-1` Low, `0` Normal, `1` High, `2` Emergency.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "required": [
                "apiKey",
                "includeHealthWarnings",
                "includeManualGrabs",
                "name",
                "onApplicationUpdate",
                "onGrab",
                "onHealthIssue",
                "onHealthRestored",
                "priority",
                "tags"
            ],
            "inputProperties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationProwl name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority.`-2` Very Low, `-1` Low, `0` Normal, `1` High, `2` Emergency.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "requiredInputs": [
                "apiKey",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NotificationProwl resources.\n",
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "description": "API key.\n",
                        "secret": true
                    },
                    "includeHealthWarnings": {
                        "type": "boolean",
                        "description": "Include health warnings.\n"
                    },
                    "includeManualGrabs": {
                        "type": "boolean",
                        "description": "Include manual grab flag.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "NotificationProwl name.\n"
                    },
                    "onApplicationUpdate": {
                        "type": "boolean",
                        "description": "On application update flag.\n"
                    },
                    "onGrab": {
                        "type": "boolean",
                        "description": "On release grab flag.\n"
                    },
                    "onHealthIssue": {
                        "type": "boolean",
                        "description": "On health issue flag.\n"
                    },
                    "onHealthRestored": {
                        "type": "boolean",
                        "description": "On health restored flag.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority.`-2` Very Low, `-1` Low, `0` Normal, `1` High, `2` Emergency.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Notifications/notificationPushbullet:NotificationPushbullet": {
            "description": "\u003c!-- subcategory:Notifications --\u003eNotification Pushbullet resource.\nFor more information refer to [Notification](https://wiki.servarr.com/prowlarr/settings#connect) and [Pushbullet](https://wiki.servarr.com/prowlarr/supported#pushbullet).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.notifications.NotificationPushbullet(\"example\", {\n    apiKey: \"Token\",\n    deviceIds: [\"test\"],\n    includeHealthWarnings: false,\n    name: \"Example\",\n    onApplicationUpdate: false,\n    onHealthIssue: false,\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.notifications.NotificationPushbullet(\"example\",\n    api_key=\"Token\",\n    device_ids=[\"test\"],\n    include_health_warnings=False,\n    name=\"Example\",\n    on_application_update=False,\n    on_health_issue=False)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Notifications.NotificationPushbullet(\"example\", new()\n    {\n        ApiKey = \"Token\",\n        DeviceIds = new[]\n        {\n            \"test\",\n        },\n        IncludeHealthWarnings = false,\n        Name = \"Example\",\n        OnApplicationUpdate = false,\n        OnHealthIssue = false,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Notifications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Notifications.NewNotificationPushbullet(ctx, \"example\", \u0026Notifications.NotificationPushbulletArgs{\n\t\t\tApiKey: pulumi.String(\"Token\"),\n\t\t\tDeviceIds: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"test\"),\n\t\t\t},\n\t\t\tIncludeHealthWarnings: pulumi.Bool(false),\n\t\t\tName:                  pulumi.String(\"Example\"),\n\t\t\tOnApplicationUpdate:   pulumi.Bool(false),\n\t\t\tOnHealthIssue:         pulumi.Bool(false),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Notifications.NotificationPushbullet;\nimport com.pulumi.prowlarr.Notifications.NotificationPushbulletArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new NotificationPushbullet(\"example\", NotificationPushbulletArgs.builder()        \n            .apiKey(\"Token\")\n            .deviceIds(\"test\")\n            .includeHealthWarnings(false)\n            .name(\"Example\")\n            .onApplicationUpdate(false)\n            .onHealthIssue(false)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Notifications:NotificationPushbullet\n    properties:\n      apiKey: Token\n      deviceIds:\n        - test\n      includeHealthWarnings: false\n      name: Example\n      onApplicationUpdate: false\n      onHealthIssue: false\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Notifications/notificationPushbullet:NotificationPushbullet example 1\n```\n\n ",
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "channelTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of channel tags.\n"
                },
                "deviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of devices IDs.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationPushbullet name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "senderId": {
                    "type": "string",
                    "description": "Sender ID.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "required": [
                "apiKey",
                "channelTags",
                "deviceIds",
                "includeHealthWarnings",
                "includeManualGrabs",
                "name",
                "onApplicationUpdate",
                "onGrab",
                "onHealthIssue",
                "onHealthRestored",
                "senderId",
                "tags"
            ],
            "inputProperties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "channelTags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of channel tags.\n"
                },
                "deviceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of devices IDs.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationPushbullet name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "senderId": {
                    "type": "string",
                    "description": "Sender ID.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "requiredInputs": [
                "apiKey",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NotificationPushbullet resources.\n",
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "description": "API key.\n",
                        "secret": true
                    },
                    "channelTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of channel tags.\n"
                    },
                    "deviceIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of devices IDs.\n"
                    },
                    "includeHealthWarnings": {
                        "type": "boolean",
                        "description": "Include health warnings.\n"
                    },
                    "includeManualGrabs": {
                        "type": "boolean",
                        "description": "Include manual grab flag.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "NotificationPushbullet name.\n"
                    },
                    "onApplicationUpdate": {
                        "type": "boolean",
                        "description": "On application update flag.\n"
                    },
                    "onGrab": {
                        "type": "boolean",
                        "description": "On release grab flag.\n"
                    },
                    "onHealthIssue": {
                        "type": "boolean",
                        "description": "On health issue flag.\n"
                    },
                    "onHealthRestored": {
                        "type": "boolean",
                        "description": "On health restored flag.\n"
                    },
                    "senderId": {
                        "type": "string",
                        "description": "Sender ID.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Notifications/notificationPushover:NotificationPushover": {
            "description": "\u003c!-- subcategory:Notifications --\u003eNotification Pushover resource.\nFor more information refer to [Notification](https://wiki.servarr.com/prowlarr/settings#connect) and [Pushover](https://wiki.servarr.com/prowlarr/supported#pushover).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.notifications.NotificationJoin(\"example\", {\n    apiKey: \"Key\",\n    includeHealthWarnings: false,\n    name: \"Example\",\n    onApplicationUpdate: false,\n    onHealthIssue: false,\n    priority: 2,\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.notifications.NotificationJoin(\"example\",\n    api_key=\"Key\",\n    include_health_warnings=False,\n    name=\"Example\",\n    on_application_update=False,\n    on_health_issue=False,\n    priority=2)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Notifications.NotificationJoin(\"example\", new()\n    {\n        ApiKey = \"Key\",\n        IncludeHealthWarnings = false,\n        Name = \"Example\",\n        OnApplicationUpdate = false,\n        OnHealthIssue = false,\n        Priority = 2,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Notifications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Notifications.NewNotificationJoin(ctx, \"example\", \u0026Notifications.NotificationJoinArgs{\n\t\t\tApiKey:                pulumi.String(\"Key\"),\n\t\t\tIncludeHealthWarnings: pulumi.Bool(false),\n\t\t\tName:                  pulumi.String(\"Example\"),\n\t\t\tOnApplicationUpdate:   pulumi.Bool(false),\n\t\t\tOnHealthIssue:         pulumi.Bool(false),\n\t\t\tPriority:              pulumi.Int(2),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Notifications.NotificationJoin;\nimport com.pulumi.prowlarr.Notifications.NotificationJoinArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new NotificationJoin(\"example\", NotificationJoinArgs.builder()        \n            .apiKey(\"Key\")\n            .includeHealthWarnings(false)\n            .name(\"Example\")\n            .onApplicationUpdate(false)\n            .onHealthIssue(false)\n            .priority(2)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Notifications:NotificationJoin\n    properties:\n      apiKey: Key\n      includeHealthWarnings: false\n      name: Example\n      onApplicationUpdate: false\n      onHealthIssue: false\n      priority: 2\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Notifications/notificationPushover:NotificationPushover example 1\n```\n\n ",
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of devices.\n"
                },
                "expire": {
                    "type": "integer",
                    "description": "Expire.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationPushover name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority. `-2` Silent, `-1` Quiet, `0` Normal, `1` High, `2` Emergency, `8` High.\n"
                },
                "retry": {
                    "type": "integer",
                    "description": "Retry.\n"
                },
                "sound": {
                    "type": "string",
                    "description": "Sound.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "userKey": {
                    "type": "string",
                    "description": "User key.\n",
                    "secret": true
                }
            },
            "required": [
                "apiKey",
                "devices",
                "expire",
                "includeHealthWarnings",
                "includeManualGrabs",
                "name",
                "onApplicationUpdate",
                "onGrab",
                "onHealthIssue",
                "onHealthRestored",
                "priority",
                "retry",
                "sound",
                "tags",
                "userKey"
            ],
            "inputProperties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of devices.\n"
                },
                "expire": {
                    "type": "integer",
                    "description": "Expire.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationPushover name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "Priority. `-2` Silent, `-1` Quiet, `0` Normal, `1` High, `2` Emergency, `8` High.\n"
                },
                "retry": {
                    "type": "integer",
                    "description": "Retry.\n"
                },
                "sound": {
                    "type": "string",
                    "description": "Sound.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "userKey": {
                    "type": "string",
                    "description": "User key.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "apiKey",
                "name",
                "userKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NotificationPushover resources.\n",
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "description": "API key.\n",
                        "secret": true
                    },
                    "devices": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of devices.\n"
                    },
                    "expire": {
                        "type": "integer",
                        "description": "Expire.\n"
                    },
                    "includeHealthWarnings": {
                        "type": "boolean",
                        "description": "Include health warnings.\n"
                    },
                    "includeManualGrabs": {
                        "type": "boolean",
                        "description": "Include manual grab flag.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "NotificationPushover name.\n"
                    },
                    "onApplicationUpdate": {
                        "type": "boolean",
                        "description": "On application update flag.\n"
                    },
                    "onGrab": {
                        "type": "boolean",
                        "description": "On release grab flag.\n"
                    },
                    "onHealthIssue": {
                        "type": "boolean",
                        "description": "On health issue flag.\n"
                    },
                    "onHealthRestored": {
                        "type": "boolean",
                        "description": "On health restored flag.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority. `-2` Silent, `-1` Quiet, `0` Normal, `1` High, `2` Emergency, `8` High.\n"
                    },
                    "retry": {
                        "type": "integer",
                        "description": "Retry.\n"
                    },
                    "sound": {
                        "type": "string",
                        "description": "Sound.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "userKey": {
                        "type": "string",
                        "description": "User key.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Notifications/notificationSendgrid:NotificationSendgrid": {
            "description": "\u003c!-- subcategory:Notifications --\u003eNotification Sendgrid resource.\nFor more information refer to [Notification](https://wiki.servarr.com/prowlarr/settings#connect) and [Sendgrid](https://wiki.servarr.com/prowlarr/supported#sendgrid).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.notifications.NotificationSendgrid(\"example\", {\n    apiKey: \"APIkey\",\n    from: \"from_sendgrid@example.com\",\n    includeHealthWarnings: false,\n    name: \"Example\",\n    onApplicationUpdate: false,\n    onHealthIssue: false,\n    recipients: [\n        \"user1@example.com\",\n        \"user2@example.com\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.notifications.NotificationSendgrid(\"example\",\n    api_key=\"APIkey\",\n    from_=\"from_sendgrid@example.com\",\n    include_health_warnings=False,\n    name=\"Example\",\n    on_application_update=False,\n    on_health_issue=False,\n    recipients=[\n        \"user1@example.com\",\n        \"user2@example.com\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Notifications.NotificationSendgrid(\"example\", new()\n    {\n        ApiKey = \"APIkey\",\n        From = \"from_sendgrid@example.com\",\n        IncludeHealthWarnings = false,\n        Name = \"Example\",\n        OnApplicationUpdate = false,\n        OnHealthIssue = false,\n        Recipients = new[]\n        {\n            \"user1@example.com\",\n            \"user2@example.com\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Notifications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Notifications.NewNotificationSendgrid(ctx, \"example\", \u0026Notifications.NotificationSendgridArgs{\n\t\t\tApiKey:                pulumi.String(\"APIkey\"),\n\t\t\tFrom:                  pulumi.String(\"from_sendgrid@example.com\"),\n\t\t\tIncludeHealthWarnings: pulumi.Bool(false),\n\t\t\tName:                  pulumi.String(\"Example\"),\n\t\t\tOnApplicationUpdate:   pulumi.Bool(false),\n\t\t\tOnHealthIssue:         pulumi.Bool(false),\n\t\t\tRecipients: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"user1@example.com\"),\n\t\t\t\tpulumi.String(\"user2@example.com\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Notifications.NotificationSendgrid;\nimport com.pulumi.prowlarr.Notifications.NotificationSendgridArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new NotificationSendgrid(\"example\", NotificationSendgridArgs.builder()        \n            .apiKey(\"APIkey\")\n            .from(\"from_sendgrid@example.com\")\n            .includeHealthWarnings(false)\n            .name(\"Example\")\n            .onApplicationUpdate(false)\n            .onHealthIssue(false)\n            .recipients(            \n                \"user1@example.com\",\n                \"user2@example.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Notifications:NotificationSendgrid\n    properties:\n      apiKey: APIkey\n      from: from_sendgrid@example.com\n      includeHealthWarnings: false\n      name: Example\n      onApplicationUpdate: false\n      onHealthIssue: false\n      recipients:\n        - user1@example.com\n        - user2@example.com\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Notifications/notificationSendgrid:NotificationSendgrid example 1\n```\n\n ",
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "from": {
                    "type": "string",
                    "description": "From.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationSendgrid name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Recipients.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "required": [
                "apiKey",
                "from",
                "includeHealthWarnings",
                "includeManualGrabs",
                "name",
                "onApplicationUpdate",
                "onGrab",
                "onHealthIssue",
                "onHealthRestored",
                "recipients",
                "tags"
            ],
            "inputProperties": {
                "apiKey": {
                    "type": "string",
                    "description": "API key.\n",
                    "secret": true
                },
                "from": {
                    "type": "string",
                    "description": "From.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationSendgrid name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Recipients.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "requiredInputs": [
                "from",
                "name",
                "recipients"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NotificationSendgrid resources.\n",
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "description": "API key.\n",
                        "secret": true
                    },
                    "from": {
                        "type": "string",
                        "description": "From.\n"
                    },
                    "includeHealthWarnings": {
                        "type": "boolean",
                        "description": "Include health warnings.\n"
                    },
                    "includeManualGrabs": {
                        "type": "boolean",
                        "description": "Include manual grab flag.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "NotificationSendgrid name.\n"
                    },
                    "onApplicationUpdate": {
                        "type": "boolean",
                        "description": "On application update flag.\n"
                    },
                    "onGrab": {
                        "type": "boolean",
                        "description": "On release grab flag.\n"
                    },
                    "onHealthIssue": {
                        "type": "boolean",
                        "description": "On health issue flag.\n"
                    },
                    "onHealthRestored": {
                        "type": "boolean",
                        "description": "On health restored flag.\n"
                    },
                    "recipients": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Recipients.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Notifications/notificationSignal:NotificationSignal": {
            "description": "\u003c!-- subcategory:Notifications --\u003eNotification Signal resource.\nFor more information refer to [Notification](https://wiki.servarr.com/prowlarr/settings#connect) and [Signal](https://wiki.servarr.com/prowlarr/supported#signal).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.notifications.NotificationSignal(\"example\", {\n    authPassword: \"Token\",\n    authUsername: \"User\",\n    host: \"localhost\",\n    includeHealthWarnings: false,\n    name: \"Example\",\n    onApplicationUpdate: false,\n    onHealthIssue: false,\n    port: 8080,\n    receiverId: \"4321\",\n    senderNumber: \"1234\",\n    useSsl: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.notifications.NotificationSignal(\"example\",\n    auth_password=\"Token\",\n    auth_username=\"User\",\n    host=\"localhost\",\n    include_health_warnings=False,\n    name=\"Example\",\n    on_application_update=False,\n    on_health_issue=False,\n    port=8080,\n    receiver_id=\"4321\",\n    sender_number=\"1234\",\n    use_ssl=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Notifications.NotificationSignal(\"example\", new()\n    {\n        AuthPassword = \"Token\",\n        AuthUsername = \"User\",\n        Host = \"localhost\",\n        IncludeHealthWarnings = false,\n        Name = \"Example\",\n        OnApplicationUpdate = false,\n        OnHealthIssue = false,\n        Port = 8080,\n        ReceiverId = \"4321\",\n        SenderNumber = \"1234\",\n        UseSsl = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Notifications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Notifications.NewNotificationSignal(ctx, \"example\", \u0026Notifications.NotificationSignalArgs{\n\t\t\tAuthPassword:          pulumi.String(\"Token\"),\n\t\t\tAuthUsername:          pulumi.String(\"User\"),\n\t\t\tHost:                  pulumi.String(\"localhost\"),\n\t\t\tIncludeHealthWarnings: pulumi.Bool(false),\n\t\t\tName:                  pulumi.String(\"Example\"),\n\t\t\tOnApplicationUpdate:   pulumi.Bool(false),\n\t\t\tOnHealthIssue:         pulumi.Bool(false),\n\t\t\tPort:                  pulumi.Int(8080),\n\t\t\tReceiverId:            pulumi.String(\"4321\"),\n\t\t\tSenderNumber:          pulumi.String(\"1234\"),\n\t\t\tUseSsl:                pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Notifications.NotificationSignal;\nimport com.pulumi.prowlarr.Notifications.NotificationSignalArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new NotificationSignal(\"example\", NotificationSignalArgs.builder()        \n            .authPassword(\"Token\")\n            .authUsername(\"User\")\n            .host(\"localhost\")\n            .includeHealthWarnings(false)\n            .name(\"Example\")\n            .onApplicationUpdate(false)\n            .onHealthIssue(false)\n            .port(8080)\n            .receiverId(\"4321\")\n            .senderNumber(\"1234\")\n            .useSsl(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Notifications:NotificationSignal\n    properties:\n      authPassword: Token\n      authUsername: User\n      host: localhost\n      includeHealthWarnings: false\n      name: Example\n      onApplicationUpdate: false\n      onHealthIssue: false\n      port: 8080\n      receiverId: '4321'\n      senderNumber: '1234'\n      useSsl: true\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Notifications/notificationSignal:NotificationSignal example 1\n```\n\n ",
            "properties": {
                "authPassword": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "authUsername": {
                    "type": "string",
                    "description": "Username.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationSignal name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "receiverId": {
                    "type": "string",
                    "description": "Receiver ID.\n"
                },
                "senderNumber": {
                    "type": "string",
                    "description": "Sender Number.\n",
                    "secret": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                }
            },
            "required": [
                "authPassword",
                "authUsername",
                "host",
                "includeHealthWarnings",
                "includeManualGrabs",
                "name",
                "onApplicationUpdate",
                "onGrab",
                "onHealthIssue",
                "onHealthRestored",
                "port",
                "receiverId",
                "senderNumber",
                "tags",
                "useSsl"
            ],
            "inputProperties": {
                "authPassword": {
                    "type": "string",
                    "description": "Password.\n",
                    "secret": true
                },
                "authUsername": {
                    "type": "string",
                    "description": "Username.\n"
                },
                "host": {
                    "type": "string",
                    "description": "Host.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationSignal name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port.\n"
                },
                "receiverId": {
                    "type": "string",
                    "description": "Receiver ID.\n"
                },
                "senderNumber": {
                    "type": "string",
                    "description": "Sender Number.\n",
                    "secret": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "useSsl": {
                    "type": "boolean",
                    "description": "Use SSL flag.\n"
                }
            },
            "requiredInputs": [
                "host",
                "name",
                "receiverId",
                "senderNumber"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NotificationSignal resources.\n",
                "properties": {
                    "authPassword": {
                        "type": "string",
                        "description": "Password.\n",
                        "secret": true
                    },
                    "authUsername": {
                        "type": "string",
                        "description": "Username.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "Host.\n"
                    },
                    "includeHealthWarnings": {
                        "type": "boolean",
                        "description": "Include health warnings.\n"
                    },
                    "includeManualGrabs": {
                        "type": "boolean",
                        "description": "Include manual grab flag.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "NotificationSignal name.\n"
                    },
                    "onApplicationUpdate": {
                        "type": "boolean",
                        "description": "On application update flag.\n"
                    },
                    "onGrab": {
                        "type": "boolean",
                        "description": "On release grab flag.\n"
                    },
                    "onHealthIssue": {
                        "type": "boolean",
                        "description": "On health issue flag.\n"
                    },
                    "onHealthRestored": {
                        "type": "boolean",
                        "description": "On health restored flag.\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port.\n"
                    },
                    "receiverId": {
                        "type": "string",
                        "description": "Receiver ID.\n"
                    },
                    "senderNumber": {
                        "type": "string",
                        "description": "Sender Number.\n",
                        "secret": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "useSsl": {
                        "type": "boolean",
                        "description": "Use SSL flag.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Notifications/notificationSimplepush:NotificationSimplepush": {
            "description": "\u003c!-- subcategory:Notifications --\u003eNotification Simplepush resource.\nFor more information refer to [Notification](https://wiki.servarr.com/prowlarr/settings#connect) and [Simplepush](https://wiki.servarr.com/prowlarr/supported#simplepush).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.notifications.NotificationSimplepush(\"example\", {\n    event: \"ringtone:default\",\n    includeHealthWarnings: false,\n    key: \"Token\",\n    name: \"Example\",\n    onApplicationUpdate: false,\n    onHealthIssue: false,\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.notifications.NotificationSimplepush(\"example\",\n    event=\"ringtone:default\",\n    include_health_warnings=False,\n    key=\"Token\",\n    name=\"Example\",\n    on_application_update=False,\n    on_health_issue=False)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Notifications.NotificationSimplepush(\"example\", new()\n    {\n        Event = \"ringtone:default\",\n        IncludeHealthWarnings = false,\n        Key = \"Token\",\n        Name = \"Example\",\n        OnApplicationUpdate = false,\n        OnHealthIssue = false,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Notifications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Notifications.NewNotificationSimplepush(ctx, \"example\", \u0026Notifications.NotificationSimplepushArgs{\n\t\t\tEvent:                 pulumi.String(\"ringtone:default\"),\n\t\t\tIncludeHealthWarnings: pulumi.Bool(false),\n\t\t\tKey:                   pulumi.String(\"Token\"),\n\t\t\tName:                  pulumi.String(\"Example\"),\n\t\t\tOnApplicationUpdate:   pulumi.Bool(false),\n\t\t\tOnHealthIssue:         pulumi.Bool(false),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Notifications.NotificationSimplepush;\nimport com.pulumi.prowlarr.Notifications.NotificationSimplepushArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new NotificationSimplepush(\"example\", NotificationSimplepushArgs.builder()        \n            .event(\"ringtone:default\")\n            .includeHealthWarnings(false)\n            .key(\"Token\")\n            .name(\"Example\")\n            .onApplicationUpdate(false)\n            .onHealthIssue(false)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Notifications:NotificationSimplepush\n    properties:\n      event: ringtone:default\n      includeHealthWarnings: false\n      key: Token\n      name: Example\n      onApplicationUpdate: false\n      onHealthIssue: false\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Notifications/notificationSimplepush:NotificationSimplepush example 1\n```\n\n ",
            "properties": {
                "event": {
                    "type": "string",
                    "description": "Event.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "key": {
                    "type": "string",
                    "description": "Key.\n",
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "description": "NotificationSimplepush name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "required": [
                "event",
                "includeHealthWarnings",
                "includeManualGrabs",
                "key",
                "name",
                "onApplicationUpdate",
                "onGrab",
                "onHealthIssue",
                "onHealthRestored",
                "tags"
            ],
            "inputProperties": {
                "event": {
                    "type": "string",
                    "description": "Event.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "key": {
                    "type": "string",
                    "description": "Key.\n",
                    "secret": true
                },
                "name": {
                    "type": "string",
                    "description": "NotificationSimplepush name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "requiredInputs": [
                "key",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NotificationSimplepush resources.\n",
                "properties": {
                    "event": {
                        "type": "string",
                        "description": "Event.\n"
                    },
                    "includeHealthWarnings": {
                        "type": "boolean",
                        "description": "Include health warnings.\n"
                    },
                    "includeManualGrabs": {
                        "type": "boolean",
                        "description": "Include manual grab flag.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "Key.\n",
                        "secret": true
                    },
                    "name": {
                        "type": "string",
                        "description": "NotificationSimplepush name.\n"
                    },
                    "onApplicationUpdate": {
                        "type": "boolean",
                        "description": "On application update flag.\n"
                    },
                    "onGrab": {
                        "type": "boolean",
                        "description": "On release grab flag.\n"
                    },
                    "onHealthIssue": {
                        "type": "boolean",
                        "description": "On health issue flag.\n"
                    },
                    "onHealthRestored": {
                        "type": "boolean",
                        "description": "On health restored flag.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Notifications/notificationSlack:NotificationSlack": {
            "description": "\u003c!-- subcategory:Notifications --\u003eNotification Slack resource.\nFor more information refer to [Notification](https://wiki.servarr.com/prowlarr/settings#connect) and [Slack](https://wiki.servarr.com/prowlarr/supported#slack).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.notifications.NotificationSlack(\"example\", {\n    channel: \"example-channel\",\n    includeHealthWarnings: false,\n    name: \"Example\",\n    onApplicationUpdate: false,\n    onHealthIssue: false,\n    username: \"user\",\n    webHookUrl: \"http://my.slack.com/test\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.notifications.NotificationSlack(\"example\",\n    channel=\"example-channel\",\n    include_health_warnings=False,\n    name=\"Example\",\n    on_application_update=False,\n    on_health_issue=False,\n    username=\"user\",\n    web_hook_url=\"http://my.slack.com/test\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Notifications.NotificationSlack(\"example\", new()\n    {\n        Channel = \"example-channel\",\n        IncludeHealthWarnings = false,\n        Name = \"Example\",\n        OnApplicationUpdate = false,\n        OnHealthIssue = false,\n        Username = \"user\",\n        WebHookUrl = \"http://my.slack.com/test\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Notifications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Notifications.NewNotificationSlack(ctx, \"example\", \u0026Notifications.NotificationSlackArgs{\n\t\t\tChannel:               pulumi.String(\"example-channel\"),\n\t\t\tIncludeHealthWarnings: pulumi.Bool(false),\n\t\t\tName:                  pulumi.String(\"Example\"),\n\t\t\tOnApplicationUpdate:   pulumi.Bool(false),\n\t\t\tOnHealthIssue:         pulumi.Bool(false),\n\t\t\tUsername:              pulumi.String(\"user\"),\n\t\t\tWebHookUrl:            pulumi.String(\"http://my.slack.com/test\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Notifications.NotificationSlack;\nimport com.pulumi.prowlarr.Notifications.NotificationSlackArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new NotificationSlack(\"example\", NotificationSlackArgs.builder()        \n            .channel(\"example-channel\")\n            .includeHealthWarnings(false)\n            .name(\"Example\")\n            .onApplicationUpdate(false)\n            .onHealthIssue(false)\n            .username(\"user\")\n            .webHookUrl(\"http://my.slack.com/test\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Notifications:NotificationSlack\n    properties:\n      channel: example-channel\n      includeHealthWarnings: false\n      name: Example\n      onApplicationUpdate: false\n      onHealthIssue: false\n      username: user\n      webHookUrl: http://my.slack.com/test\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Notifications/notificationSlack:NotificationSlack example 1\n```\n\n ",
            "properties": {
                "channel": {
                    "type": "string",
                    "description": "Channel.\n"
                },
                "icon": {
                    "type": "string",
                    "description": "Icon.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationSlack name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                },
                "webHookUrl": {
                    "type": "string",
                    "description": "URL.\n"
                }
            },
            "required": [
                "channel",
                "icon",
                "includeHealthWarnings",
                "name",
                "onApplicationUpdate",
                "onHealthIssue",
                "onHealthRestored",
                "tags",
                "username",
                "webHookUrl"
            ],
            "inputProperties": {
                "channel": {
                    "type": "string",
                    "description": "Channel.\n"
                },
                "icon": {
                    "type": "string",
                    "description": "Icon.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationSlack name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                },
                "webHookUrl": {
                    "type": "string",
                    "description": "URL.\n"
                }
            },
            "requiredInputs": [
                "name",
                "username",
                "webHookUrl"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NotificationSlack resources.\n",
                "properties": {
                    "channel": {
                        "type": "string",
                        "description": "Channel.\n"
                    },
                    "icon": {
                        "type": "string",
                        "description": "Icon.\n"
                    },
                    "includeHealthWarnings": {
                        "type": "boolean",
                        "description": "Include health warnings.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "NotificationSlack name.\n"
                    },
                    "onApplicationUpdate": {
                        "type": "boolean",
                        "description": "On application update flag.\n"
                    },
                    "onHealthIssue": {
                        "type": "boolean",
                        "description": "On health issue flag.\n"
                    },
                    "onHealthRestored": {
                        "type": "boolean",
                        "description": "On health restored flag.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username.\n"
                    },
                    "webHookUrl": {
                        "type": "string",
                        "description": "URL.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Notifications/notificationTelegram:NotificationTelegram": {
            "description": "\u003c!-- subcategory:Notifications --\u003eNotification Telegram resource.\nFor more information refer to [Notification](https://wiki.servarr.com/prowlarr/settings#connect) and [Telegram](https://wiki.servarr.com/prowlarr/supported#telegram).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.notifications.NotificationTelegram(\"example\", {\n    botToken: \"Token\",\n    chatId: \"ChatID01\",\n    includeHealthWarnings: false,\n    name: \"Example\",\n    onApplicationUpdate: false,\n    onHealthIssue: false,\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.notifications.NotificationTelegram(\"example\",\n    bot_token=\"Token\",\n    chat_id=\"ChatID01\",\n    include_health_warnings=False,\n    name=\"Example\",\n    on_application_update=False,\n    on_health_issue=False)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Notifications.NotificationTelegram(\"example\", new()\n    {\n        BotToken = \"Token\",\n        ChatId = \"ChatID01\",\n        IncludeHealthWarnings = false,\n        Name = \"Example\",\n        OnApplicationUpdate = false,\n        OnHealthIssue = false,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Notifications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Notifications.NewNotificationTelegram(ctx, \"example\", \u0026Notifications.NotificationTelegramArgs{\n\t\t\tBotToken:              pulumi.String(\"Token\"),\n\t\t\tChatId:                pulumi.String(\"ChatID01\"),\n\t\t\tIncludeHealthWarnings: pulumi.Bool(false),\n\t\t\tName:                  pulumi.String(\"Example\"),\n\t\t\tOnApplicationUpdate:   pulumi.Bool(false),\n\t\t\tOnHealthIssue:         pulumi.Bool(false),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Notifications.NotificationTelegram;\nimport com.pulumi.prowlarr.Notifications.NotificationTelegramArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new NotificationTelegram(\"example\", NotificationTelegramArgs.builder()        \n            .botToken(\"Token\")\n            .chatId(\"ChatID01\")\n            .includeHealthWarnings(false)\n            .name(\"Example\")\n            .onApplicationUpdate(false)\n            .onHealthIssue(false)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Notifications:NotificationTelegram\n    properties:\n      botToken: Token\n      chatId: ChatID01\n      includeHealthWarnings: false\n      name: Example\n      onApplicationUpdate: false\n      onHealthIssue: false\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Notifications/notificationTelegram:NotificationTelegram example 1\n```\n\n ",
            "properties": {
                "botToken": {
                    "type": "string",
                    "description": "Bot token.\n",
                    "secret": true
                },
                "chatId": {
                    "type": "string",
                    "description": "Chat ID.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationTelegram name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "sendSilently": {
                    "type": "boolean",
                    "description": "Send silently flag.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "topicId": {
                    "type": "string",
                    "description": "Topic ID.\n"
                }
            },
            "required": [
                "botToken",
                "chatId",
                "includeHealthWarnings",
                "includeManualGrabs",
                "name",
                "onApplicationUpdate",
                "onGrab",
                "onHealthIssue",
                "onHealthRestored",
                "sendSilently",
                "tags",
                "topicId"
            ],
            "inputProperties": {
                "botToken": {
                    "type": "string",
                    "description": "Bot token.\n",
                    "secret": true
                },
                "chatId": {
                    "type": "string",
                    "description": "Chat ID.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationTelegram name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "sendSilently": {
                    "type": "boolean",
                    "description": "Send silently flag.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "topicId": {
                    "type": "string",
                    "description": "Topic ID.\n"
                }
            },
            "requiredInputs": [
                "botToken",
                "chatId",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NotificationTelegram resources.\n",
                "properties": {
                    "botToken": {
                        "type": "string",
                        "description": "Bot token.\n",
                        "secret": true
                    },
                    "chatId": {
                        "type": "string",
                        "description": "Chat ID.\n"
                    },
                    "includeHealthWarnings": {
                        "type": "boolean",
                        "description": "Include health warnings.\n"
                    },
                    "includeManualGrabs": {
                        "type": "boolean",
                        "description": "Include manual grab flag.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "NotificationTelegram name.\n"
                    },
                    "onApplicationUpdate": {
                        "type": "boolean",
                        "description": "On application update flag.\n"
                    },
                    "onGrab": {
                        "type": "boolean",
                        "description": "On release grab flag.\n"
                    },
                    "onHealthIssue": {
                        "type": "boolean",
                        "description": "On health issue flag.\n"
                    },
                    "onHealthRestored": {
                        "type": "boolean",
                        "description": "On health restored flag.\n"
                    },
                    "sendSilently": {
                        "type": "boolean",
                        "description": "Send silently flag.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "topicId": {
                        "type": "string",
                        "description": "Topic ID.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Notifications/notificationTwitter:NotificationTwitter": {
            "description": "\u003c!-- subcategory:Notifications --\u003eNotification Twitter resource.\nFor more information refer to [Notification](https://wiki.servarr.com/prowlarr/settings#connect) and [Twitter](https://wiki.servarr.com/prowlarr/supported#twitter).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.notifications.NotificationTwitter(\"example\", {\n    accessToken: \"Token\",\n    accessTokenSecret: \"TokenSecret\",\n    consumerKey: \"Key\",\n    consumerSecret: \"Secret\",\n    includeHealthWarnings: false,\n    mention: \"someone\",\n    name: \"Example\",\n    onApplicationUpdate: false,\n    onHealthIssue: false,\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.notifications.NotificationTwitter(\"example\",\n    access_token=\"Token\",\n    access_token_secret=\"TokenSecret\",\n    consumer_key=\"Key\",\n    consumer_secret=\"Secret\",\n    include_health_warnings=False,\n    mention=\"someone\",\n    name=\"Example\",\n    on_application_update=False,\n    on_health_issue=False)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Notifications.NotificationTwitter(\"example\", new()\n    {\n        AccessToken = \"Token\",\n        AccessTokenSecret = \"TokenSecret\",\n        ConsumerKey = \"Key\",\n        ConsumerSecret = \"Secret\",\n        IncludeHealthWarnings = false,\n        Mention = \"someone\",\n        Name = \"Example\",\n        OnApplicationUpdate = false,\n        OnHealthIssue = false,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Notifications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Notifications.NewNotificationTwitter(ctx, \"example\", \u0026Notifications.NotificationTwitterArgs{\n\t\t\tAccessToken:           pulumi.String(\"Token\"),\n\t\t\tAccessTokenSecret:     pulumi.String(\"TokenSecret\"),\n\t\t\tConsumerKey:           pulumi.String(\"Key\"),\n\t\t\tConsumerSecret:        pulumi.String(\"Secret\"),\n\t\t\tIncludeHealthWarnings: pulumi.Bool(false),\n\t\t\tMention:               pulumi.String(\"someone\"),\n\t\t\tName:                  pulumi.String(\"Example\"),\n\t\t\tOnApplicationUpdate:   pulumi.Bool(false),\n\t\t\tOnHealthIssue:         pulumi.Bool(false),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Notifications.NotificationTwitter;\nimport com.pulumi.prowlarr.Notifications.NotificationTwitterArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new NotificationTwitter(\"example\", NotificationTwitterArgs.builder()        \n            .accessToken(\"Token\")\n            .accessTokenSecret(\"TokenSecret\")\n            .consumerKey(\"Key\")\n            .consumerSecret(\"Secret\")\n            .includeHealthWarnings(false)\n            .mention(\"someone\")\n            .name(\"Example\")\n            .onApplicationUpdate(false)\n            .onHealthIssue(false)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Notifications:NotificationTwitter\n    properties:\n      accessToken: Token\n      accessTokenSecret: TokenSecret\n      consumerKey: Key\n      consumerSecret: Secret\n      includeHealthWarnings: false\n      mention: someone\n      name: Example\n      onApplicationUpdate: false\n      onHealthIssue: false\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Notifications/notificationTwitter:NotificationTwitter example 1\n```\n\n ",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "Access token.\n",
                    "secret": true
                },
                "accessTokenSecret": {
                    "type": "string",
                    "description": "Access token secret.\n",
                    "secret": true
                },
                "consumerKey": {
                    "type": "string",
                    "description": "Consumer Key.\n",
                    "secret": true
                },
                "consumerSecret": {
                    "type": "string",
                    "description": "Consumer Secret.\n",
                    "secret": true
                },
                "directMessage": {
                    "type": "boolean",
                    "description": "Direct message flag.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "mention": {
                    "type": "string",
                    "description": "Mention.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationTwitter name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "required": [
                "accessToken",
                "accessTokenSecret",
                "consumerKey",
                "consumerSecret",
                "directMessage",
                "includeHealthWarnings",
                "includeManualGrabs",
                "mention",
                "name",
                "onApplicationUpdate",
                "onGrab",
                "onHealthIssue",
                "onHealthRestored",
                "tags"
            ],
            "inputProperties": {
                "accessToken": {
                    "type": "string",
                    "description": "Access token.\n",
                    "secret": true
                },
                "accessTokenSecret": {
                    "type": "string",
                    "description": "Access token secret.\n",
                    "secret": true
                },
                "consumerKey": {
                    "type": "string",
                    "description": "Consumer Key.\n",
                    "secret": true
                },
                "consumerSecret": {
                    "type": "string",
                    "description": "Consumer Secret.\n",
                    "secret": true
                },
                "directMessage": {
                    "type": "boolean",
                    "description": "Direct message flag.\n"
                },
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "mention": {
                    "type": "string",
                    "description": "Mention.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationTwitter name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                }
            },
            "requiredInputs": [
                "accessToken",
                "accessTokenSecret",
                "consumerKey",
                "consumerSecret",
                "mention",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NotificationTwitter resources.\n",
                "properties": {
                    "accessToken": {
                        "type": "string",
                        "description": "Access token.\n",
                        "secret": true
                    },
                    "accessTokenSecret": {
                        "type": "string",
                        "description": "Access token secret.\n",
                        "secret": true
                    },
                    "consumerKey": {
                        "type": "string",
                        "description": "Consumer Key.\n",
                        "secret": true
                    },
                    "consumerSecret": {
                        "type": "string",
                        "description": "Consumer Secret.\n",
                        "secret": true
                    },
                    "directMessage": {
                        "type": "boolean",
                        "description": "Direct message flag.\n"
                    },
                    "includeHealthWarnings": {
                        "type": "boolean",
                        "description": "Include health warnings.\n"
                    },
                    "includeManualGrabs": {
                        "type": "boolean",
                        "description": "Include manual grab flag.\n"
                    },
                    "mention": {
                        "type": "string",
                        "description": "Mention.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "NotificationTwitter name.\n"
                    },
                    "onApplicationUpdate": {
                        "type": "boolean",
                        "description": "On application update flag.\n"
                    },
                    "onGrab": {
                        "type": "boolean",
                        "description": "On release grab flag.\n"
                    },
                    "onHealthIssue": {
                        "type": "boolean",
                        "description": "On health issue flag.\n"
                    },
                    "onHealthRestored": {
                        "type": "boolean",
                        "description": "On health restored flag.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Notifications/notificationWebhook:NotificationWebhook": {
            "description": "\u003c!-- subcategory:Notifications --\u003eNotification Webhook resource.\nFor more information refer to [Notification](https://wiki.servarr.com/prowlarr/settings#connect) and [Webhook](https://wiki.servarr.com/prowlarr/supported#webhook).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.notifications.NotificationWebhook(\"example\", {\n    includeHealthWarnings: false,\n    method: 1,\n    name: \"Example\",\n    onApplicationUpdate: false,\n    onHealthIssue: false,\n    password: \"examplePass\",\n    url: \"https://example.webhook.com/example\",\n    username: \"exampleUser\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.notifications.NotificationWebhook(\"example\",\n    include_health_warnings=False,\n    method=1,\n    name=\"Example\",\n    on_application_update=False,\n    on_health_issue=False,\n    password=\"examplePass\",\n    url=\"https://example.webhook.com/example\",\n    username=\"exampleUser\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Notifications.NotificationWebhook(\"example\", new()\n    {\n        IncludeHealthWarnings = false,\n        Method = 1,\n        Name = \"Example\",\n        OnApplicationUpdate = false,\n        OnHealthIssue = false,\n        Password = \"examplePass\",\n        Url = \"https://example.webhook.com/example\",\n        Username = \"exampleUser\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Notifications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Notifications.NewNotificationWebhook(ctx, \"example\", \u0026Notifications.NotificationWebhookArgs{\n\t\t\tIncludeHealthWarnings: pulumi.Bool(false),\n\t\t\tMethod:                pulumi.Int(1),\n\t\t\tName:                  pulumi.String(\"Example\"),\n\t\t\tOnApplicationUpdate:   pulumi.Bool(false),\n\t\t\tOnHealthIssue:         pulumi.Bool(false),\n\t\t\tPassword:              pulumi.String(\"examplePass\"),\n\t\t\tUrl:                   pulumi.String(\"https://example.webhook.com/example\"),\n\t\t\tUsername:              pulumi.String(\"exampleUser\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Notifications.NotificationWebhook;\nimport com.pulumi.prowlarr.Notifications.NotificationWebhookArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new NotificationWebhook(\"example\", NotificationWebhookArgs.builder()        \n            .includeHealthWarnings(false)\n            .method(1)\n            .name(\"Example\")\n            .onApplicationUpdate(false)\n            .onHealthIssue(false)\n            .password(\"examplePass\")\n            .url(\"https://example.webhook.com/example\")\n            .username(\"exampleUser\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Notifications:NotificationWebhook\n    properties:\n      includeHealthWarnings: false\n      method: 1\n      name: Example\n      onApplicationUpdate: false\n      onHealthIssue: false\n      password: examplePass\n      url: https://example.webhook.com/example\n      username: exampleUser\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Notifications/notificationWebhook:NotificationWebhook example 1\n```\n\n ",
            "properties": {
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "method": {
                    "type": "integer",
                    "description": "Method. `1` POST, `2` PUT.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationWebhook name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "password": {
                    "type": "string",
                    "description": "password.\n",
                    "secret": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "url": {
                    "type": "string",
                    "description": "URL.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "required": [
                "includeHealthWarnings",
                "includeManualGrabs",
                "method",
                "name",
                "onApplicationUpdate",
                "onGrab",
                "onHealthIssue",
                "onHealthRestored",
                "password",
                "tags",
                "url",
                "username"
            ],
            "inputProperties": {
                "includeHealthWarnings": {
                    "type": "boolean",
                    "description": "Include health warnings.\n"
                },
                "includeManualGrabs": {
                    "type": "boolean",
                    "description": "Include manual grab flag.\n"
                },
                "method": {
                    "type": "integer",
                    "description": "Method. `1` POST, `2` PUT.\n"
                },
                "name": {
                    "type": "string",
                    "description": "NotificationWebhook name.\n"
                },
                "onApplicationUpdate": {
                    "type": "boolean",
                    "description": "On application update flag.\n"
                },
                "onGrab": {
                    "type": "boolean",
                    "description": "On release grab flag.\n"
                },
                "onHealthIssue": {
                    "type": "boolean",
                    "description": "On health issue flag.\n"
                },
                "onHealthRestored": {
                    "type": "boolean",
                    "description": "On health restored flag.\n"
                },
                "password": {
                    "type": "string",
                    "description": "password.\n",
                    "secret": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "List of associated tags.\n"
                },
                "url": {
                    "type": "string",
                    "description": "URL.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username.\n"
                }
            },
            "requiredInputs": [
                "includeHealthWarnings",
                "method",
                "name",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NotificationWebhook resources.\n",
                "properties": {
                    "includeHealthWarnings": {
                        "type": "boolean",
                        "description": "Include health warnings.\n"
                    },
                    "includeManualGrabs": {
                        "type": "boolean",
                        "description": "Include manual grab flag.\n"
                    },
                    "method": {
                        "type": "integer",
                        "description": "Method. `1` POST, `2` PUT.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "NotificationWebhook name.\n"
                    },
                    "onApplicationUpdate": {
                        "type": "boolean",
                        "description": "On application update flag.\n"
                    },
                    "onGrab": {
                        "type": "boolean",
                        "description": "On release grab flag.\n"
                    },
                    "onHealthIssue": {
                        "type": "boolean",
                        "description": "On health issue flag.\n"
                    },
                    "onHealthRestored": {
                        "type": "boolean",
                        "description": "On health restored flag.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "password.\n",
                        "secret": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "URL.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username.\n"
                    }
                },
                "type": "object"
            }
        },
        "prowlarr:Tags/tag:Tag": {
            "description": "\u003c!-- subcategory:Tags --\u003eTag resource.\nFor more information refer to [Tags](https://wiki.servarr.com/prowlarr/settings#tags) documentation.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@maienm/pulumi-prowlarr\";\n\nconst example = new prowlarr.tags.Tag(\"example\", {label: \"some-value\"});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.tags.Tag(\"example\", label=\"some-value\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = MaienM.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = new Prowlarr.Tags.Tag(\"example\", new()\n    {\n        Label = \"some-value\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Tags\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Tags.NewTag(ctx, \"example\", \u0026Tags.TagArgs{\n\t\t\tLabel: pulumi.String(\"some-value\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Tags.Tag;\nimport com.pulumi.prowlarr.Tags.TagArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Tag(\"example\", TagArgs.builder()        \n            .label(\"some-value\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: prowlarr:Tags:Tag\n    properties:\n      label: some-value\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nimport using the API/UI ID\n\n```sh\n $ pulumi import prowlarr:Tags/tag:Tag example 10\n```\n\n ",
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Tag label. It must be lowercase.\n"
                }
            },
            "required": [
                "label"
            ],
            "inputProperties": {
                "label": {
                    "type": "string",
                    "description": "Tag label. It must be lowercase.\n"
                }
            },
            "requiredInputs": [
                "label"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Tag resources.\n",
                "properties": {
                    "label": {
                        "type": "string",
                        "description": "Tag label. It must be lowercase.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "prowlarr:Applications/getApplication:getApplication": {
            "description": "\u003c!-- subcategory:Applications --\u003eSingle Application.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@pulumi/prowlarr\";\n\nconst example = prowlarr.Applications.getApplication({\n    name: \"Example\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.Applications.get_application(name=\"Example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = Pulumi.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Prowlarr.Applications.GetApplication.Invoke(new()\n    {\n        Name = \"Example\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Applications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Applications.GetApplication(ctx, \u0026applications.GetApplicationArgs{\n\t\t\tName: \"Example\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Applications.ApplicationsFunctions;\nimport com.pulumi.prowlarr.Applications.inputs.GetApplicationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = ApplicationsFunctions.getApplication(GetApplicationArgs.builder()\n            .name(\"Example\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: prowlarr:Applications:getApplication\n      Arguments:\n        name: Example\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getApplication.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Application name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getApplication.\n",
                "properties": {
                    "animeSyncCategories": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Anime sync categories.\n"
                    },
                    "apiKey": {
                        "type": "string",
                        "description": "API key.\n",
                        "secret": true
                    },
                    "baseUrl": {
                        "type": "string",
                        "description": "Base URL.\n"
                    },
                    "configContract": {
                        "type": "string",
                        "description": "Application configuration template.\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Application ID.\n"
                    },
                    "implementation": {
                        "type": "string",
                        "description": "Application implementation name.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Application name.\n"
                    },
                    "prowlarrUrl": {
                        "type": "string",
                        "description": "Prowlarr URL.\n"
                    },
                    "syncCategories": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Sync categories.\n"
                    },
                    "syncLevel": {
                        "type": "string",
                        "description": "Sync level.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    }
                },
                "type": "object",
                "required": [
                    "animeSyncCategories",
                    "apiKey",
                    "baseUrl",
                    "configContract",
                    "id",
                    "implementation",
                    "name",
                    "prowlarrUrl",
                    "syncCategories",
                    "syncLevel",
                    "tags"
                ]
            }
        },
        "prowlarr:Applications/getApplications:getApplications": {
            "description": "\u003c!-- subcategory:Applications --\u003eList all available Applications.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@pulumi/prowlarr\";\n\nconst example = prowlarr.Applications.getApplications({});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.Applications.get_applications()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = Pulumi.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Prowlarr.Applications.GetApplications.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Applications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Applications.GetApplications(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Applications.ApplicationsFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = ApplicationsFunctions.getApplications();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: prowlarr:Applications:getApplications\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getApplications.\n",
                "properties": {
                    "applications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:Applications/getApplicationsApplication:getApplicationsApplication"
                        },
                        "description": "Application list.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "applications",
                    "id"
                ]
            }
        },
        "prowlarr:Applications/getSyncProfile:getSyncProfile": {
            "description": "\u003c!-- subcategory:Applications --\u003eSingle Sync Profile.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@pulumi/prowlarr\";\n\nconst test = prowlarr.Applications.getSyncProfile({\n    name: \"Example\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\ntest = prowlarr.Applications.get_sync_profile(name=\"Example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = Pulumi.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Prowlarr.Applications.GetSyncProfile.Invoke(new()\n    {\n        Name = \"Example\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Applications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Applications.GetSyncProfile(ctx, \u0026applications.GetSyncProfileArgs{\n\t\t\tName: \"Example\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Applications.ApplicationsFunctions;\nimport com.pulumi.prowlarr.Applications.inputs.GetSyncProfileArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = ApplicationsFunctions.getSyncProfile(GetSyncProfileArgs.builder()\n            .name(\"Example\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: prowlarr:Applications:getSyncProfile\n      Arguments:\n        name: Example\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getSyncProfile.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSyncProfile.\n",
                "properties": {
                    "enableAutomaticSearch": {
                        "type": "boolean",
                        "description": "Enable automatic search flag.\n"
                    },
                    "enableInteractiveSearch": {
                        "type": "boolean",
                        "description": "Enable interactive search flag.\n"
                    },
                    "enableRss": {
                        "type": "boolean",
                        "description": "Enable RSS flag.\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Sync Profile ID.\n"
                    },
                    "minimumSeeders": {
                        "type": "integer",
                        "description": "Minimum seeders.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "enableAutomaticSearch",
                    "enableInteractiveSearch",
                    "enableRss",
                    "id",
                    "minimumSeeders",
                    "name"
                ]
            }
        },
        "prowlarr:Applications/getSyncProfiles:getSyncProfiles": {
            "description": "\u003c!-- subcategory:Applications --\u003eList all available Sync Profiles.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@pulumi/prowlarr\";\n\nconst example = prowlarr.Applications.getSyncProfiles({});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.Applications.get_sync_profiles()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = Pulumi.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Prowlarr.Applications.GetSyncProfiles.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Applications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Applications.GetSyncProfiles(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Applications.ApplicationsFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = ApplicationsFunctions.getSyncProfiles();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: prowlarr:Applications:getSyncProfiles\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getSyncProfiles.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "syncProfiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:Applications/getSyncProfilesSyncProfile:getSyncProfilesSyncProfile"
                        },
                        "description": "Sync Profile list.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "syncProfiles"
                ]
            }
        },
        "prowlarr:DownloadClients/getDownloadClient:getDownloadClient": {
            "description": "\u003c!-- subcategory:Download Clients --\u003eSingle Download Client.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@pulumi/prowlarr\";\n\nconst test = prowlarr.DownloadClients.getDownloadClient({\n    name: \"Example\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\ntest = prowlarr.DownloadClients.get_download_client(name=\"Example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = Pulumi.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Prowlarr.DownloadClients.GetDownloadClient.Invoke(new()\n    {\n        Name = \"Example\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/DownloadClients\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := DownloadClients.GetDownloadClient(ctx, \u0026downloadclients.GetDownloadClientArgs{\n\t\t\tName: \"Example\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientsFunctions;\nimport com.pulumi.prowlarr.DownloadClients.inputs.GetDownloadClientArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = DownloadClientsFunctions.getDownloadClient(GetDownloadClientArgs.builder()\n            .name(\"Example\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: prowlarr:DownloadClients:getDownloadClient\n      Arguments:\n        name: Example\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDownloadClient.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Download Client name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDownloadClient.\n",
                "properties": {
                    "addPaused": {
                        "type": "boolean",
                        "description": "Add paused flag.\n"
                    },
                    "addStopped": {
                        "type": "boolean",
                        "description": "Add stopped flag.\n"
                    },
                    "additionalTags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Additional tags, `0` TitleSlug, `1` Quality, `2` Language, `3` ReleaseGroup, `4` Year, `5` Indexer, `6` Network.\n"
                    },
                    "apiKey": {
                        "type": "string",
                        "description": "API key.\n",
                        "secret": true
                    },
                    "apiUrl": {
                        "type": "string",
                        "description": "API URL.\n"
                    },
                    "appId": {
                        "type": "string",
                        "description": "App ID.\n"
                    },
                    "appToken": {
                        "type": "string",
                        "description": "App Token.\n",
                        "secret": true
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:DownloadClients/getDownloadClientCategory:getDownloadClientCategory"
                        },
                        "description": "List of mapped categories.\n"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category.\n"
                    },
                    "configContract": {
                        "type": "string",
                        "description": "DownloadClient configuration template.\n"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Destination.\n"
                    },
                    "destinationDirectory": {
                        "type": "string",
                        "description": "Movie directory.\n"
                    },
                    "directory": {
                        "type": "string",
                        "description": "Directory.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable flag.\n"
                    },
                    "fieldTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Field tags.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "host.\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Download Client ID.\n"
                    },
                    "implementation": {
                        "type": "string",
                        "description": "DownloadClient implementation name.\n"
                    },
                    "initialState": {
                        "type": "integer",
                        "description": "Initial state. `0` Start, `1` ForceStart, `2` Pause.\n"
                    },
                    "intialState": {
                        "type": "integer",
                        "description": "Initial state, with Stop support. `0` Start, `1` ForceStart, `2` Pause, `3` Stop.\n"
                    },
                    "itemPriority": {
                        "type": "integer",
                        "description": "Priority. `0` Last, `1` First.\n"
                    },
                    "magnetFileExtension": {
                        "type": "string",
                        "description": "Magnet file extension.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Download Client name.\n"
                    },
                    "nzbFolder": {
                        "type": "string",
                        "description": "NZB folder.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password.\n",
                        "secret": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port.\n"
                    },
                    "postImTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Post import tags.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority.\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "Protocol. Valid values are 'usenet' and 'torrent'.\n"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "description": "Read only flag.\n"
                    },
                    "rpcPath": {
                        "type": "string",
                        "description": "RPC path.\n"
                    },
                    "saveMagnetFiles": {
                        "type": "boolean",
                        "description": "Save magnet files flag.\n"
                    },
                    "secretToken": {
                        "type": "string",
                        "description": "Secret token.\n",
                        "secret": true
                    },
                    "sequentialOrder": {
                        "type": "boolean",
                        "description": "Sequential order flag.\n"
                    },
                    "startOnAdd": {
                        "type": "boolean",
                        "description": "Start on add flag.\n"
                    },
                    "strmFolder": {
                        "type": "string",
                        "description": "STRM folder.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "torrentFolder": {
                        "type": "string",
                        "description": "Torrent folder.\n"
                    },
                    "tvImportedCategory": {
                        "type": "string",
                        "description": "TV imported category.\n"
                    },
                    "urlBase": {
                        "type": "string",
                        "description": "Base URL.\n"
                    },
                    "useSsl": {
                        "type": "boolean",
                        "description": "Use SSL flag.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username.\n"
                    }
                },
                "type": "object",
                "required": [
                    "addPaused",
                    "addStopped",
                    "additionalTags",
                    "apiKey",
                    "apiUrl",
                    "appId",
                    "appToken",
                    "categories",
                    "category",
                    "configContract",
                    "destination",
                    "destinationDirectory",
                    "directory",
                    "enable",
                    "fieldTags",
                    "host",
                    "id",
                    "implementation",
                    "initialState",
                    "intialState",
                    "itemPriority",
                    "magnetFileExtension",
                    "name",
                    "nzbFolder",
                    "password",
                    "port",
                    "postImTags",
                    "priority",
                    "protocol",
                    "readOnly",
                    "rpcPath",
                    "saveMagnetFiles",
                    "secretToken",
                    "sequentialOrder",
                    "startOnAdd",
                    "strmFolder",
                    "tags",
                    "torrentFolder",
                    "tvImportedCategory",
                    "urlBase",
                    "useSsl",
                    "username"
                ]
            }
        },
        "prowlarr:DownloadClients/getDownloadClients:getDownloadClients": {
            "description": "\u003c!-- subcategory:Download Clients --\u003eList all available Download Clients.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@pulumi/prowlarr\";\n\nconst example = prowlarr.DownloadClients.getDownloadClients({});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.DownloadClients.get_download_clients()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = Pulumi.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Prowlarr.DownloadClients.GetDownloadClients.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/DownloadClients\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := DownloadClients.GetDownloadClients(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.DownloadClients.DownloadClientsFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = DownloadClientsFunctions.getDownloadClients();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: prowlarr:DownloadClients:getDownloadClients\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getDownloadClients.\n",
                "properties": {
                    "downloadClients": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:DownloadClients/getDownloadClientsDownloadClient:getDownloadClientsDownloadClient"
                        },
                        "description": "Download Client list.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "downloadClients",
                    "id"
                ]
            }
        },
        "prowlarr:IndexerProxies/getIndexerProxies:getIndexerProxies": {
            "description": "\u003c!-- subcategory:Indexer Proxies --\u003eList all available Indexer Proxies.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@pulumi/prowlarr\";\n\nconst example = prowlarr.IndexerProxies.getIndexerProxies({});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.IndexerProxies.get_indexer_proxies()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = Pulumi.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Prowlarr.IndexerProxies.GetIndexerProxies.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/IndexerProxies\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := IndexerProxies.GetIndexerProxies(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.IndexerProxies.IndexerProxiesFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IndexerProxiesFunctions.getIndexerProxies();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: prowlarr:IndexerProxies:getIndexerProxies\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getIndexerProxies.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "indexerProxies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:IndexerProxies/getIndexerProxiesIndexerProxy:getIndexerProxiesIndexerProxy"
                        },
                        "description": "Indexer Client list.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "indexerProxies"
                ]
            }
        },
        "prowlarr:IndexerProxies/getIndexerProxy:getIndexerProxy": {
            "description": "\u003c!-- subcategory:Indexer Proxies --\u003eSingle Indexer Proxy.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@pulumi/prowlarr\";\n\nconst test = prowlarr.IndexerProxies.getIndexerProxy({\n    name: \"Example\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\ntest = prowlarr.IndexerProxies.get_indexer_proxy(name=\"Example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = Pulumi.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Prowlarr.IndexerProxies.GetIndexerProxy.Invoke(new()\n    {\n        Name = \"Example\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/IndexerProxies\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := IndexerProxies.GetIndexerProxy(ctx, \u0026indexerproxies.GetIndexerProxyArgs{\n\t\t\tName: \"Example\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.IndexerProxies.IndexerProxiesFunctions;\nimport com.pulumi.prowlarr.IndexerProxies.inputs.GetIndexerProxyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = IndexerProxiesFunctions.getIndexerProxy(GetIndexerProxyArgs.builder()\n            .name(\"Example\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: prowlarr:IndexerProxies:getIndexerProxy\n      Arguments:\n        name: Example\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIndexerProxy.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Indexer Proxy name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIndexerProxy.\n",
                "properties": {
                    "configContract": {
                        "type": "string",
                        "description": "IndexerProxy configuration template.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "host.\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Indexer Proxy ID.\n"
                    },
                    "implementation": {
                        "type": "string",
                        "description": "IndexerProxy implementation name.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Indexer Proxy name.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password.\n",
                        "secret": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port.\n"
                    },
                    "requestTimeout": {
                        "type": "integer",
                        "description": "Request timeout.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configContract",
                    "host",
                    "id",
                    "implementation",
                    "name",
                    "password",
                    "port",
                    "requestTimeout",
                    "tags",
                    "username"
                ]
            }
        },
        "prowlarr:Indexers/getIndexer:getIndexer": {
            "description": "\u003c!-- subcategory:Indexers --\u003eSingle Indexer.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@pulumi/prowlarr\";\n\nconst test = prowlarr.Indexers.getIndexer({\n    name: \"Example\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\ntest = prowlarr.Indexers.get_indexer(name=\"Example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = Pulumi.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Prowlarr.Indexers.GetIndexer.Invoke(new()\n    {\n        Name = \"Example\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Indexers\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Indexers.GetIndexer(ctx, \u0026indexers.GetIndexerArgs{\n\t\t\tName: \"Example\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Indexers.IndexersFunctions;\nimport com.pulumi.prowlarr.Indexers.inputs.GetIndexerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = IndexersFunctions.getIndexer(GetIndexerArgs.builder()\n            .name(\"Example\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: prowlarr:Indexers:getIndexer\n      Arguments:\n        name: Example\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIndexer.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Indexer name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIndexer.\n",
                "properties": {
                    "appProfileId": {
                        "type": "integer",
                        "description": "Application profile ID.\n"
                    },
                    "configContract": {
                        "type": "string",
                        "description": "Indexer configuration template.\n"
                    },
                    "enable": {
                        "type": "boolean",
                        "description": "Enable RSS flag.\n"
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:Indexers/getIndexerField:getIndexerField"
                        },
                        "description": "Set of configuration fields.\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Indexer ID.\n"
                    },
                    "implementation": {
                        "type": "string",
                        "description": "Indexer implementation name.\n"
                    },
                    "language": {
                        "type": "string",
                        "description": "Language.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Indexer name.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority.\n"
                    },
                    "privacy": {
                        "type": "string",
                        "description": "Privacy.\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "Protocol. Valid values are 'usenet' and 'torrent'.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    }
                },
                "type": "object",
                "required": [
                    "appProfileId",
                    "configContract",
                    "enable",
                    "fields",
                    "id",
                    "implementation",
                    "language",
                    "name",
                    "priority",
                    "privacy",
                    "protocol",
                    "tags"
                ]
            }
        },
        "prowlarr:Indexers/getIndexerSchema:getIndexerSchema": {
            "description": "\u003c!-- subcategory:Indexers --\u003eIndexer schema definition.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@pulumi/prowlarr\";\n\nconst test = prowlarr.Indexers.getIndexerSchema({\n    name: \"AlphaRatio\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\ntest = prowlarr.Indexers.get_indexer_schema(name=\"AlphaRatio\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = Pulumi.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test = Prowlarr.Indexers.GetIndexerSchema.Invoke(new()\n    {\n        Name = \"AlphaRatio\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Indexers\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Indexers.GetIndexerSchema(ctx, \u0026indexers.GetIndexerSchemaArgs{\n\t\t\tName: \"AlphaRatio\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Indexers.IndexersFunctions;\nimport com.pulumi.prowlarr.Indexers.inputs.GetIndexerSchemaArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var test = IndexersFunctions.getIndexerSchema(GetIndexerSchemaArgs.builder()\n            .name(\"AlphaRatio\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  test:\n    fn::invoke:\n      Function: prowlarr:Indexers:getIndexerSchema\n      Arguments:\n        name: AlphaRatio\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIndexerSchema.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Indexer name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIndexerSchema.\n",
                "properties": {
                    "configContract": {
                        "type": "string",
                        "description": "Indexer configuration template.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Indexer description.\n"
                    },
                    "encoding": {
                        "type": "string",
                        "description": "Indexer encoding.\n"
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:Indexers/getIndexerSchemaField:getIndexerSchemaField"
                        },
                        "description": "Set of configuration fields.\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Schema ID.\n"
                    },
                    "implementation": {
                        "type": "string",
                        "description": "Indexer implementation name.\n"
                    },
                    "indexerUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of available URLs.\n"
                    },
                    "language": {
                        "type": "string",
                        "description": "Language.\n"
                    },
                    "legacyUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of legacy URLs.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Indexer name.\n"
                    },
                    "privacy": {
                        "type": "string",
                        "description": "Privacy.\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "Protocol. Valid values are 'usenet' and 'torrent'.\n"
                    }
                },
                "type": "object",
                "required": [
                    "configContract",
                    "description",
                    "encoding",
                    "fields",
                    "id",
                    "implementation",
                    "indexerUrls",
                    "language",
                    "legacyUrls",
                    "name",
                    "privacy",
                    "protocol"
                ]
            }
        },
        "prowlarr:Indexers/getIndexerSchemas:getIndexerSchemas": {
            "description": "\u003c!-- subcategory:Indexers --\u003eList all available Indexer Schemas.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@pulumi/prowlarr\";\n\nconst example = prowlarr.Indexers.getIndexerSchemas({});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.Indexers.get_indexer_schemas()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = Pulumi.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Prowlarr.Indexers.GetIndexerSchemas.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Indexers\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Indexers.GetIndexerSchemas(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Indexers.IndexersFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IndexersFunctions.getIndexerSchemas();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: prowlarr:Indexers:getIndexerSchemas\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getIndexerSchemas.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "indexerSchemas": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Indexer name list.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "indexerSchemas"
                ]
            }
        },
        "prowlarr:Indexers/getIndexers:getIndexers": {
            "description": "\u003c!-- subcategory:Indexers --\u003eList all available Indexers.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@pulumi/prowlarr\";\n\nconst example = prowlarr.Indexers.getIndexers({});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.Indexers.get_indexers()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = Pulumi.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Prowlarr.Indexers.GetIndexers.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Indexers\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Indexers.GetIndexers(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Indexers.IndexersFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = IndexersFunctions.getIndexers();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: prowlarr:Indexers:getIndexers\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getIndexers.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "indexers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:Indexers/getIndexersIndexer:getIndexersIndexer"
                        },
                        "description": "Indexer list.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "indexers"
                ]
            }
        },
        "prowlarr:Notifications/getNotification:getNotification": {
            "description": "\u003c!-- subcategory:Notifications --\u003eSingle Notification.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@pulumi/prowlarr\";\n\nconst example = prowlarr.Notifications.getNotification({\n    name: \"Example\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.Notifications.get_notification(name=\"Example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = Pulumi.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Prowlarr.Notifications.GetNotification.Invoke(new()\n    {\n        Name = \"Example\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Notifications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Notifications.GetNotification(ctx, \u0026notifications.GetNotificationArgs{\n\t\t\tName: \"Example\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Notifications.NotificationsFunctions;\nimport com.pulumi.prowlarr.Notifications.inputs.GetNotificationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NotificationsFunctions.getNotification(GetNotificationArgs.builder()\n            .name(\"Example\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: prowlarr:Notifications:getNotification\n      Arguments:\n        name: Example\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getNotification.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Notification name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNotification.\n",
                "properties": {
                    "accessToken": {
                        "type": "string",
                        "description": "Access token.\n"
                    },
                    "accessTokenSecret": {
                        "type": "string",
                        "description": "Access token secret.\n"
                    },
                    "alwaysUpdate": {
                        "type": "boolean",
                        "description": "Always update flag.\n"
                    },
                    "apiKey": {
                        "type": "string",
                        "description": "API key.\n"
                    },
                    "appToken": {
                        "type": "string",
                        "description": "App token.\n"
                    },
                    "arguments": {
                        "type": "string",
                        "description": "Arguments.\n"
                    },
                    "authPassword": {
                        "type": "string",
                        "description": "Auth password.\n",
                        "secret": true
                    },
                    "authToken": {
                        "type": "string",
                        "description": "Auth token.\n"
                    },
                    "authUser": {
                        "type": "string",
                        "description": "Auth user.\n"
                    },
                    "authUsername": {
                        "type": "string",
                        "description": "Auth username.\n"
                    },
                    "author": {
                        "type": "string",
                        "description": "Author.\n"
                    },
                    "avatar": {
                        "type": "string",
                        "description": "Avatar.\n"
                    },
                    "baseUrl": {
                        "type": "string",
                        "description": "Base URL.\n"
                    },
                    "bccs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Bcc.\n"
                    },
                    "botToken": {
                        "type": "string",
                        "description": "Bot token.\n"
                    },
                    "ccs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Cc.\n"
                    },
                    "channel": {
                        "type": "string",
                        "description": "Channel.\n"
                    },
                    "channelTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Channel tags.\n"
                    },
                    "chatId": {
                        "type": "string",
                        "description": "Chat ID.\n"
                    },
                    "cleanLibrary": {
                        "type": "boolean",
                        "description": "Clean library flag.\n"
                    },
                    "clickUrl": {
                        "type": "string",
                        "description": "Click URL.\n"
                    },
                    "configContract": {
                        "type": "string",
                        "description": "Notification configuration template.\n"
                    },
                    "configurationKey": {
                        "type": "string",
                        "description": "Configuration key.\n",
                        "secret": true
                    },
                    "consumerKey": {
                        "type": "string",
                        "description": "Consumer key.\n"
                    },
                    "consumerSecret": {
                        "type": "string",
                        "description": "Consumer secret.\n"
                    },
                    "deviceIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Device IDs.\n"
                    },
                    "deviceNames": {
                        "type": "string",
                        "description": "Device names.\n"
                    },
                    "devices": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Devices.\n"
                    },
                    "directMessage": {
                        "type": "boolean",
                        "description": "Direct message flag.\n"
                    },
                    "displayTime": {
                        "type": "integer",
                        "description": "Display time.\n"
                    },
                    "event": {
                        "type": "string",
                        "description": "Event.\n"
                    },
                    "expire": {
                        "type": "integer",
                        "description": "Expire.\n"
                    },
                    "expires": {
                        "type": "string",
                        "description": "Expires.\n"
                    },
                    "fieldTags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Devices.\n"
                    },
                    "from": {
                        "type": "string",
                        "description": "From.\n"
                    },
                    "grabFields": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Grab fields. `0` Overview, `1` Rating, `2` Genres, `3` Quality, `4` Group, `5` Size, `6` Links, `7` Release, `8` Poster, `9` Fanart, `10` CustomFormats, `11` CustomFormatScore.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "Host.\n"
                    },
                    "icon": {
                        "type": "string",
                        "description": "Icon.\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Notification ID.\n"
                    },
                    "implementation": {
                        "type": "string",
                        "description": "Notification implementation name.\n"
                    },
                    "includeHealthWarnings": {
                        "type": "boolean",
                        "description": "Include health warnings.\n"
                    },
                    "includeManualGrabs": {
                        "type": "boolean",
                        "description": "Include manual grab flag.\n"
                    },
                    "instanceName": {
                        "type": "string",
                        "description": "Instance name.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "Key.\n"
                    },
                    "mapFrom": {
                        "type": "string",
                        "description": "Map From.\n"
                    },
                    "mapTo": {
                        "type": "string",
                        "description": "Map To.\n"
                    },
                    "mention": {
                        "type": "string",
                        "description": "Mention.\n"
                    },
                    "method": {
                        "type": "integer",
                        "description": "Method. `1` POST, `2` PUT.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Notification name.\n"
                    },
                    "notificationType": {
                        "type": "integer",
                        "description": "Notification type. `0` Info, `1` Success, `2` Warning, `3` Failure.\n"
                    },
                    "notify": {
                        "type": "boolean",
                        "description": "Notify flag.\n"
                    },
                    "onApplicationUpdate": {
                        "type": "boolean",
                        "description": "On application update flag.\n"
                    },
                    "onGrab": {
                        "type": "boolean",
                        "description": "On release grab flag.\n"
                    },
                    "onHealthIssue": {
                        "type": "boolean",
                        "description": "On health issue flag.\n"
                    },
                    "onHealthRestored": {
                        "type": "boolean",
                        "description": "On health restored flag.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "password.\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "Path.\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port.\n"
                    },
                    "priority": {
                        "type": "integer",
                        "description": "Priority.\n"
                    },
                    "receiverId": {
                        "type": "string",
                        "description": "Receiver ID.\n"
                    },
                    "recipients": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Recipients.\n"
                    },
                    "refreshToken": {
                        "type": "string",
                        "description": "Refresh token.\n"
                    },
                    "requireEncryption": {
                        "type": "boolean",
                        "description": "Require encryption flag.\n"
                    },
                    "retry": {
                        "type": "integer",
                        "description": "Retry.\n"
                    },
                    "sendSilently": {
                        "type": "boolean",
                        "description": "Add silently flag.\n"
                    },
                    "senderDomain": {
                        "type": "string",
                        "description": "Sender domain.\n"
                    },
                    "senderId": {
                        "type": "string",
                        "description": "Sender ID.\n"
                    },
                    "senderNumber": {
                        "type": "string",
                        "description": "Sender Number.\n",
                        "secret": true
                    },
                    "server": {
                        "type": "string",
                        "description": "server.\n"
                    },
                    "serverUrl": {
                        "type": "string",
                        "description": "Server url.\n"
                    },
                    "signIn": {
                        "type": "string",
                        "description": "Sign in.\n"
                    },
                    "sound": {
                        "type": "string",
                        "description": "Sound.\n"
                    },
                    "statelessUrls": {
                        "type": "string",
                        "description": "Comma separated stateless URLs.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated tags.\n"
                    },
                    "token": {
                        "type": "string",
                        "description": "Token.\n"
                    },
                    "topicId": {
                        "type": "string",
                        "description": "Topic ID.\n"
                    },
                    "topics": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Devices.\n"
                    },
                    "tos": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "To.\n"
                    },
                    "updateLibrary": {
                        "type": "boolean",
                        "description": "Update library flag.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "URL.\n"
                    },
                    "useEuEndpoint": {
                        "type": "boolean",
                        "description": "Use EU endpoint flag.\n"
                    },
                    "useSsl": {
                        "type": "boolean",
                        "description": "Use SSL flag.\n"
                    },
                    "userKey": {
                        "type": "string",
                        "description": "User key.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username.\n"
                    },
                    "webHookUrl": {
                        "type": "string",
                        "description": "Web hook url.\n"
                    }
                },
                "type": "object",
                "required": [
                    "accessToken",
                    "accessTokenSecret",
                    "alwaysUpdate",
                    "apiKey",
                    "appToken",
                    "arguments",
                    "authPassword",
                    "authToken",
                    "authUser",
                    "authUsername",
                    "author",
                    "avatar",
                    "baseUrl",
                    "bccs",
                    "botToken",
                    "ccs",
                    "channel",
                    "channelTags",
                    "chatId",
                    "cleanLibrary",
                    "clickUrl",
                    "configContract",
                    "configurationKey",
                    "consumerKey",
                    "consumerSecret",
                    "deviceIds",
                    "deviceNames",
                    "devices",
                    "directMessage",
                    "displayTime",
                    "event",
                    "expire",
                    "expires",
                    "fieldTags",
                    "from",
                    "grabFields",
                    "host",
                    "icon",
                    "id",
                    "implementation",
                    "includeHealthWarnings",
                    "includeManualGrabs",
                    "instanceName",
                    "key",
                    "mapFrom",
                    "mapTo",
                    "mention",
                    "method",
                    "name",
                    "notificationType",
                    "notify",
                    "onApplicationUpdate",
                    "onGrab",
                    "onHealthIssue",
                    "onHealthRestored",
                    "password",
                    "path",
                    "port",
                    "priority",
                    "receiverId",
                    "recipients",
                    "refreshToken",
                    "requireEncryption",
                    "retry",
                    "sendSilently",
                    "senderDomain",
                    "senderId",
                    "senderNumber",
                    "server",
                    "serverUrl",
                    "signIn",
                    "sound",
                    "statelessUrls",
                    "tags",
                    "tos",
                    "token",
                    "topicId",
                    "topics",
                    "updateLibrary",
                    "url",
                    "useEuEndpoint",
                    "useSsl",
                    "userKey",
                    "username",
                    "webHookUrl"
                ]
            }
        },
        "prowlarr:Notifications/getNotifications:getNotifications": {
            "description": "\u003c!-- subcategory:Notifications --\u003eList all available Notifications.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@pulumi/prowlarr\";\n\nconst example = prowlarr.Notifications.getNotifications({});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.Notifications.get_notifications()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = Pulumi.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Prowlarr.Notifications.GetNotifications.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Notifications\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Notifications.GetNotifications(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Notifications.NotificationsFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = NotificationsFunctions.getNotifications();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: prowlarr:Notifications:getNotifications\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getNotifications.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "notifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:Notifications/getNotificationsNotification:getNotificationsNotification"
                        },
                        "description": "Notification list.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "notifications"
                ]
            }
        },
        "prowlarr:Status/getSystemStatus:getSystemStatus": {
            "description": "\u003c!-- subcategory:Status --\u003eSystem Status resource. User must have rights to read `config.xml`.\nFor more information refer to [System Status](https://wiki.servarr.com/prowlarr/system#status) documentation.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@pulumi/prowlarr\";\n\nconst example = prowlarr.Status.getSystemStatus({});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.Status.get_system_status()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = Pulumi.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Prowlarr.Status.GetSystemStatus.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Status\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Status.GetSystemStatus(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Status.StatusFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = StatusFunctions.getSystemStatus();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: prowlarr:Status:getSystemStatus\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getSystemStatus.\n",
                "properties": {
                    "appData": {
                        "type": "string",
                        "description": "App data folder.\n"
                    },
                    "appName": {
                        "type": "string",
                        "description": "App name.\n"
                    },
                    "authentication": {
                        "type": "string",
                        "description": "Authentication.\n"
                    },
                    "branch": {
                        "type": "string",
                        "description": "Branch.\n"
                    },
                    "buildTime": {
                        "type": "string",
                        "description": "Build time.\n"
                    },
                    "databaseType": {
                        "type": "string",
                        "description": "Database type.\n"
                    },
                    "databaseVersion": {
                        "type": "string",
                        "description": "Database version.\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Delay Profile ID.\n"
                    },
                    "instanceName": {
                        "type": "string",
                        "description": "Instance name.\n"
                    },
                    "isAdmin": {
                        "type": "boolean",
                        "description": "Is admin flag.\n"
                    },
                    "isDebug": {
                        "type": "boolean",
                        "description": "Is debug flag.\n"
                    },
                    "isDocker": {
                        "type": "boolean",
                        "description": "Is docker flag.\n"
                    },
                    "isLinux": {
                        "type": "boolean",
                        "description": "Is linux flag.\n"
                    },
                    "isNetCore": {
                        "type": "boolean",
                        "description": "Is net core flag.\n"
                    },
                    "isOsx": {
                        "type": "boolean",
                        "description": "Is osx flag.\n"
                    },
                    "isProduction": {
                        "type": "boolean",
                        "description": "Is production flag.\n"
                    },
                    "isUserInteractive": {
                        "type": "boolean",
                        "description": "Is user interactive flag.\n"
                    },
                    "isWindows": {
                        "type": "boolean",
                        "description": "Is windows flag.\n"
                    },
                    "migrationVersion": {
                        "type": "integer",
                        "description": "Migration version.\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "Mode.\n"
                    },
                    "osName": {
                        "type": "string",
                        "description": "OS name.\n"
                    },
                    "osVersion": {
                        "type": "string",
                        "description": "OS version.\n"
                    },
                    "packageAuthor": {
                        "type": "string",
                        "description": "Package author.\n"
                    },
                    "packageUpdateMechanism": {
                        "type": "string",
                        "description": "Package update mechanism.\n"
                    },
                    "packageUpdateMechanismMessage": {
                        "type": "string",
                        "description": "Package update mechanism message.\n"
                    },
                    "packageVersion": {
                        "type": "string",
                        "description": "Package version.\n"
                    },
                    "runtimeName": {
                        "type": "string",
                        "description": "Runtime name.\n"
                    },
                    "runtimeVersion": {
                        "type": "string",
                        "description": "Runtime version.\n"
                    },
                    "startTime": {
                        "type": "string",
                        "description": "Start time.\n"
                    },
                    "startupPath": {
                        "type": "string",
                        "description": "Startup path.\n"
                    },
                    "urlBase": {
                        "type": "string",
                        "description": "Base URL.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Version.\n"
                    }
                },
                "type": "object",
                "required": [
                    "appData",
                    "appName",
                    "authentication",
                    "branch",
                    "buildTime",
                    "databaseType",
                    "databaseVersion",
                    "id",
                    "instanceName",
                    "isAdmin",
                    "isDebug",
                    "isDocker",
                    "isLinux",
                    "isNetCore",
                    "isOsx",
                    "isProduction",
                    "isUserInteractive",
                    "isWindows",
                    "migrationVersion",
                    "mode",
                    "osName",
                    "osVersion",
                    "packageAuthor",
                    "packageUpdateMechanism",
                    "packageUpdateMechanismMessage",
                    "packageVersion",
                    "runtimeName",
                    "runtimeVersion",
                    "startTime",
                    "startupPath",
                    "urlBase",
                    "version"
                ]
            }
        },
        "prowlarr:Tags/getTag:getTag": {
            "description": "\u003c!-- subcategory:Tags --\u003eSingle Tag.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@pulumi/prowlarr\";\n\nconst example = prowlarr.Tags.getTag({\n    label: \"example\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.Tags.get_tag(label=\"example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = Pulumi.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Prowlarr.Tags.GetTag.Invoke(new()\n    {\n        Label = \"example\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Tags\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Tags.GetTag(ctx, \u0026tags.GetTagArgs{\n\t\t\tLabel: \"example\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Tags.TagsFunctions;\nimport com.pulumi.prowlarr.Tags.inputs.GetTagArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = TagsFunctions.getTag(GetTagArgs.builder()\n            .label(\"example\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: prowlarr:Tags:getTag\n      Arguments:\n        label: example\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTag.\n",
                "properties": {
                    "label": {
                        "type": "string",
                        "description": "Tag label.\n"
                    }
                },
                "type": "object",
                "required": [
                    "label"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTag.\n",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Tag ID.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "Tag label.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "label"
                ]
            }
        },
        "prowlarr:Tags/getTagDetails:getTagDetails": {
            "description": "\u003c!-- subcategory:Tag --\u003eSingle Tag with its associated resources.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@pulumi/prowlarr\";\n\nconst example = prowlarr.Tags.getTagDetails({\n    label: \"example\",\n});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.Tags.get_tag_details(label=\"example\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = Pulumi.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Prowlarr.Tags.GetTagDetails.Invoke(new()\n    {\n        Label = \"example\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Tags\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Tags.GetTagDetails(ctx, \u0026tags.GetTagDetailsArgs{\n\t\t\tLabel: \"example\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Tags.TagsFunctions;\nimport com.pulumi.prowlarr.Tags.inputs.GetTagDetailsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = TagsFunctions.getTagDetails(GetTagDetailsArgs.builder()\n            .label(\"example\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: prowlarr:Tags:getTagDetails\n      Arguments:\n        label: example\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTagDetails.\n",
                "properties": {
                    "label": {
                        "type": "string",
                        "description": "Tag label.\n"
                    }
                },
                "type": "object",
                "required": [
                    "label"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTagDetails.\n",
                "properties": {
                    "applicationIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated applications.\n"
                    },
                    "id": {
                        "type": "integer",
                        "description": "Tag ID.\n"
                    },
                    "indexerIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated indexers.\n"
                    },
                    "indexerProxyIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated indexer proxies.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "Tag label.\n"
                    },
                    "notificationIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "List of associated notifications.\n"
                    }
                },
                "type": "object",
                "required": [
                    "applicationIds",
                    "id",
                    "indexerIds",
                    "indexerProxyIds",
                    "label",
                    "notificationIds"
                ]
            }
        },
        "prowlarr:Tags/getTags:getTags": {
            "description": "\u003c!-- subcategory:Tags --\u003eList all available Tags.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@pulumi/prowlarr\";\n\nconst example = prowlarr.Tags.getTags({});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.Tags.get_tags()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = Pulumi.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Prowlarr.Tags.GetTags.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Tags\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Tags.GetTags(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Tags.TagsFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = TagsFunctions.getTags();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: prowlarr:Tags:getTags\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getTags.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:Tags/getTagsTag:getTagsTag"
                        },
                        "description": "Tag list.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "tags"
                ]
            }
        },
        "prowlarr:Tags/getTagsDetails:getTagsDetails": {
            "description": "\u003c!-- subcategory:Tags --\u003eTag list with their associated resources.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as prowlarr from \"@pulumi/prowlarr\";\n\nconst example = prowlarr.Tags.getTagsDetails({});\n```\n```python\nimport pulumi\nimport pulumi_prowlarr as prowlarr\n\nexample = prowlarr.Tags.get_tags_details()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Prowlarr = Pulumi.Prowlarr;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var example = Prowlarr.Tags.GetTagsDetails.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/MaienM/pulumi-prowlarr/sdk/v2/go/prowlarr/Tags\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := Tags.GetTagsDetails(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.prowlarr.Tags.TagsFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var example = TagsFunctions.getTagsDetails();\n\n    }\n}\n```\n```yaml\nvariables:\n  example:\n    fn::invoke:\n      Function: prowlarr:Tags:getTagsDetails\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getTagsDetails.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/prowlarr:Tags/getTagsDetailsTag:getTagsDetailsTag"
                        },
                        "description": "Tag list.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "tags"
                ]
            }
        }
    }
}